title = "$title"

description = """ 
$description
"""

tag_schema = [ "tag" ]
# For a multi-tag schema, use:
# tag_schema = [ "tag1", "tag2" ]

# Meta tags affect the whole transcription, rather than individual symbols. The
# first one will be used as title for the transcription in the web listing.
meta_tags = [ "filename", "meaning" ]

annotation_help = """
Write here any help for annotators, like lists of symbols or other
instructions. For example:

Make boxes slightly larger than the symbols, not too tight.
"""

[darknet]
path = "darknet/darknet" 
library = "darknet/libdarknet.so"
options = [ "-dont_show" ]

[experiments.detect]
default = true # Experiment to use if not specified
task = "detect"
tag = "tag" # Choose the tag name from tag_schema to train and test
# subsets = [ "default" ] # If not specified, all subsets will be used
subject = "focus on symbol type learning and recognition"

[experiments.classify]
task = "classify"
tag = "tag"
subsets = [ "default" ]
subject = "Classify symbols"

# Add more experiments like so:
# [experiment.other]
# task = "detect" or "classify"
# tag = "tag"
# subject = "human readable description"
# ...

[web]
lang = "en"
public = true # Set to false to require login
# Generate your own secret key with, for example: 
#   python -c 'from secrets import token_hex; print(token_hex(16))'
secret_key = "ce8c9cd0316faac773645648ac827ff6"

# Uncomment and modify to add users
# Hash the password with:
#   python -c 'import hashlib; print(hashlib.new("sha1", "thepassword".encode("utf8")).hexdigest());'
# [web.users.annotator]
# password = ""

[generate]
# Configuration for the artificial transcription generation
count = 500
width_range = [ 200, 300 ]
height_range = [ 200, 300 ]
tag = "tag" # Tag to guide symbol placement

[[generate.params]]
match = 'one' # Match symbols tagged with class "one"
mode = 'one' # Only put one of these symbols
freq = 0.4 # How often to add one of these
rotate = false

[[generate.params]]
match = '.*' # Match any symbol (it's a regex)
mode = 'many' # Add potentially many of these symbols
max = 3 # How many to potentially add
prob = 0.6 # Probability for a single symbol to appear (times max = expected number)
rotate = true
