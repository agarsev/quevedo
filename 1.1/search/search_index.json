{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":true,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Quevedo \u00b6 Quevedo is a python tool for managing datasets of images with compositional semantics, with a focus on the training and evaluation of machine learning algorithms on these images. Quevedo is part of the VisSE project . The code can be found at GitHub , and detailed documentation here . Features \u00b6 Dataset management, including hierarchical dataset organization, subset partitioning, and semantically guided data augmentation. Structural annotation of source images using a web interface, with support for different users and the live visualization of data processing scripts. Deep learning network management, training, configuration and evaluation, using darknet . Installation \u00b6 Quevedo requires python >= 3.7 , and can be installed from PyPI : $ pip install quevedo Or, if you want any extras, like the web interface: $ pip install quevedo[web] Or directly from the wheel in the release file : $ pip install quevedo-1.1.0-py3-none-any.whl[web] To use the neural network module, you will also need to install darknet . Development \u00b6 To develop on quevedo, we use poetry as our environment, dependency and build management tool. In the quevedo code directory, run: $ poetry install Then you can run quevedo with $ poetry run quevedo Usage \u00b6 To create a dataset: $ quevedo -D path/to/new/dataset create Then you can cd into the dataset directory so that the -D option is not needed. To see information about a downloaded dataset: $ quevedo info To launch the web interface (you must have installed the \"web\" extra): $ quevedo web For more information, and the list of commands, run quevedo --help or quevedo <command> --help or see here . Dependencies \u00b6 Quevedo makes use of the following open source projects: python 3 poetry darknet click flask preactjs Additionally, we use the toml and forcelayout libraries, and build our documentation with mkdocs . About \u00b6 Quevedo is licensed under the Open Software License version 3.0 . The web interface includes a copy of preactjs for ease of offline use, distributed under the MIT License . Quevedo is part of the project \"Visualizando la SignoEscritura\" (Proyecto VisSE, Facultad de Inform\u00e1tica, Universidad Complutense de Madrid) as part of the program for funding of research projects on Accesible Technologies financed by INDRA and Fundaci\u00f3n Universia. VisSE team \u00b6 Antonio F. G. Sevilla afgs@ucm.es Alberto D\u00edaz Esteban Jose Mar\u00eda Lahoz-Bengoechea","title":"Home"},{"location":"#quevedo","text":"Quevedo is a python tool for managing datasets of images with compositional semantics, with a focus on the training and evaluation of machine learning algorithms on these images. Quevedo is part of the VisSE project . The code can be found at GitHub , and detailed documentation here .","title":"Quevedo"},{"location":"#features","text":"Dataset management, including hierarchical dataset organization, subset partitioning, and semantically guided data augmentation. Structural annotation of source images using a web interface, with support for different users and the live visualization of data processing scripts. Deep learning network management, training, configuration and evaluation, using darknet .","title":"Features"},{"location":"#installation","text":"Quevedo requires python >= 3.7 , and can be installed from PyPI : $ pip install quevedo Or, if you want any extras, like the web interface: $ pip install quevedo[web] Or directly from the wheel in the release file : $ pip install quevedo-1.1.0-py3-none-any.whl[web] To use the neural network module, you will also need to install darknet .","title":"Installation"},{"location":"#development","text":"To develop on quevedo, we use poetry as our environment, dependency and build management tool. In the quevedo code directory, run: $ poetry install Then you can run quevedo with $ poetry run quevedo","title":"Development"},{"location":"#usage","text":"To create a dataset: $ quevedo -D path/to/new/dataset create Then you can cd into the dataset directory so that the -D option is not needed. To see information about a downloaded dataset: $ quevedo info To launch the web interface (you must have installed the \"web\" extra): $ quevedo web For more information, and the list of commands, run quevedo --help or quevedo <command> --help or see here .","title":"Usage"},{"location":"#dependencies","text":"Quevedo makes use of the following open source projects: python 3 poetry darknet click flask preactjs Additionally, we use the toml and forcelayout libraries, and build our documentation with mkdocs .","title":"Dependencies"},{"location":"#about","text":"Quevedo is licensed under the Open Software License version 3.0 . The web interface includes a copy of preactjs for ease of offline use, distributed under the MIT License . Quevedo is part of the project \"Visualizando la SignoEscritura\" (Proyecto VisSE, Facultad de Inform\u00e1tica, Universidad Complutense de Madrid) as part of the program for funding of research projects on Accesible Technologies financed by INDRA and Fundaci\u00f3n Universia.","title":"About"},{"location":"#visse-team","text":"Antonio F. G. Sevilla afgs@ucm.es Alberto D\u00edaz Esteban Jose Mar\u00eda Lahoz-Bengoechea","title":"VisSE team"},{"location":"api/","text":"Reference \u00b6 Datasets \u00b6 Dataset objects are the main entry point for user code in Quevedo. They provide methods to manage the dataset, but also to retrieve other objects within it. Therefore, you don't usually need to create instances of other objects directly, but rather use the methods in the Dataset class to get them already built. For example: from quevedo import Dataset, Target ds = Dataset('path/to/the/dataset') # annotation is of type quevedo.Grapheme, a subclass of quevedo.Annotation annotation = ds.get_single(Target.GRAPH, 'subset', 32) print(annotation.to_dict()) # net is of type quevedo.Network net = ds.get_network('grapheme_classify') net.auto_annotate(annotation) annotation.save() # creating a quevedo.Logogram (subclass of quevedo.Annotation) new_a = ds.new_single(Target.LOGO, 'my_new_subset', image_path='path/to/the/image', graphemes=[ {'tags': ['character', 'letter_a'], 'box': [0.2, 0.6, 0.3, 0.3]}, {'tags': ['character', 'accute_accent'] 'box': [0.2, 0.2, 0.1, 0.2]} ]) class Dataset ( path='.' ) Class representing a Quevedo dataset. It provides access to the annotations, subsets, and any neural networks contained. Parameters path (optional) \u2014 the path to the dataset directory (existing or to be created) Attributes config (dict) \u2014 Dataset configuration path (pathlib.Path) \u2014 Path to the dataset directory. Methods create ( ) \u2014 Create or initialize a directory to be a Quevedo dataset. create_subset ( target , name , existing ) \u2014 Creates the directory for a new subset. get_annotations ( target , subset ) \u2014 Get annotations from the dataset. get_network ( name ) \u2014 Get a single neural network by name. get_single ( target , subset , id ) \u2014 Retrieve a single annotation. get_subsets ( target ) \u2014 Gets information about subsets in the dataset. is_test ( annotation ) \u2014 Checks if an annotation belongs to the training split. is_train ( annotation ) \u2014 Checks if an annotation belongs to the training split. list_networks ( ) \u2014 Get a list of all neural networks for this dataset. new_single ( target , subset , **kwds ) \u2014 Create a new annotation. method create ( ) Create or initialize a directory to be a Quevedo dataset. method list_networks ( ) Get a list of all neural networks for this dataset. Returns list of Networks method get_network ( name ) Get a single neural network by name. Parameters name \u2014 name of the neural network as specified in the configuration file. If not provided, the default network will be returned. Returns a Network object. method get_single ( target , subset , id ) Retrieve a single annotation. Parameters target (AnnotationTarget) \u2014 Target (type) of the annotation to retrieve. subset \u2014 name of the subset where the annotation is stored. id \u2014 number of the annotation in the subset. Returns a single Annotation of the appropriate type. method new_single ( target , subset , **kwds ) Create a new annotation. This method creates the annotation files in the corresponding directory, and initializes them with create_from . Any extra arguments will be passed to that method. Parameters target (AnnotationTarget) \u2014 Target (type) of the annotation to create. subset \u2014 name of the (existing) subset where to place it. Returns the new Annotation . method get_annotations ( target=<AnnotationTarget.GRAPH|LOGO: 3> , subset=None ) Get annotations from the dataset. Depending on the arguments, all annotations, those of a given target, or only those in a given subset (or subsets) and target will be selected. Parameters target (AnnotationTarget, optional) \u2014 Target (type) of the annotations to retrieve. By default, it is the union of both types, so all annotations are retrieved: Target.GRAPH | Target.LOGO . subset (optional) \u2014 name of the subsets to get, or None to get annotations from all subsets. Returns a generator that yields selected annotations. method get_subsets ( target ) Gets information about subsets in the dataset. Parameters target (AnnotationTarget) \u2014 Target (type) of the annotation subsets. Returns a sorted list of dict , each with the keys name for the name of the subset, and count for the number of annotations in it. method create_subset ( target , name , existing='a' ) Creates the directory for a new subset. Parameters target (AnnotationTarget) \u2014 Target (type) of the annotation subset to create. name \u2014 name for the new subset. existing (optional) \u2014 controls behaviour when the directory already exists. It can be 'a' to abort (the default), 'r' to remove existing annotations, or 'm' (merge) to do nothing. Returns the path of the created directory. method is_train ( annotation ) Checks if an annotation belongs to the training split. method is_test ( annotation ) Checks if an annotation belongs to the training split. Annotations \u00b6 Quevedo annotations are of two types, logograms and graphemes, both derived from the parent class Annotation . When it is necessary to distinguish logograms and graphemes in a process, there is the enum Target , which can take the values Target.GRAPH or Target.LOGO . the values Target.GRAPH or Target.LOGO . There is also the BoundGrapheme class, used to represent each of the graphemes which make up a logogram. class Annotation ( path ) Class representing a single annotation of either a logogram of a sign or signs in the dataset or an isolated grapheme. Parameters path \u2014 the full path to the annotation files (either source image or tag dictionary, which should share path and filename but not extension (the annotation dictionary need not exist). Attributes id \u2014 Number which identifies this annotation in its subset. image (PIL.Image.Image) \u2014 image data for this annotation. image_path \u2014 Path to the source image for the annotation. It is the id plus png extension. json_path \u2014 Path to the json annotation file. It is the id plus json extension. meta \u2014 Dictionary of metadata annotations. Methods create_from ( image_path , binary_data , pil_image , **kwds ) \u2014 Initialize an annotation with some source image data. save ( ) \u2014 Persist the information to the filesystem. to_dict ( ) \u2014 Get the annotation data as a dictionary. update ( meta , fold , **kwds ) \u2014 Update the content of the annotation. method update ( meta=None , fold=None , **kwds ) Update the content of the annotation. This method should be overriden by the specific annotation classes to add their specific annotation information. Parameters meta (optional) \u2014 dictionary of metadata values to set. fold (optional) \u2014 fold to which the annotation will belong. method to_dict ( ) Get the annotation data as a dictionary. method save ( ) Persist the information to the filesystem. method create_from ( image_path=None , binary_data=None , pil_image=None , **kwds ) Initialize an annotation with some source image data. One of image_path , binary_data or pil_image must be provided. Other arguments will be passed to update so metadata or tags can also be set. The annotation will be persisted with a call to save too. Parameters image_path (optional) \u2014 path to an image in the filesystem to use as image for this annotation. The image will be copied into the dataset. binary_data (optional) \u2014 bytes array which encodes the source image. The contents will be dumped to the appropriate image file in the dataset. pil_image (optional) \u2014 [PIL.Image.Image] object to be stored as image file for this annotation in the dataset. Returns self to allow chaining. class Grapheme ( *args ) Bases quevedo.annotation.annotation.Annotation Annotation for an isolated grapheme. Attributes id \u2014 Number which identifies this annotation in its subset. image (PIL.Image.Image) \u2014 image data for this annotation. image_path \u2014 Path to the source image for the annotation. It is the id plus png extension. json_path \u2014 Path to the json annotation file. It is the id plus json extension. meta \u2014 Dictionary of metadata annotations. tags \u2014 annotated tags for this grapheme. Methods create_from ( image_path , binary_data , pil_image , **kwds ) \u2014 Initialize an annotation with some source image data. save ( ) \u2014 Persist the information to the filesystem. to_dict ( ) \u2014 Get the annotation data as a dictionary. update ( tags , **kwds ) \u2014 Extends base update , other arguments will be passed through. method save ( ) Persist the information to the filesystem. method create_from ( image_path=None , binary_data=None , pil_image=None , **kwds ) Initialize an annotation with some source image data. One of image_path , binary_data or pil_image must be provided. Other arguments will be passed to update so metadata or tags can also be set. The annotation will be persisted with a call to save too. Parameters image_path (optional) \u2014 path to an image in the filesystem to use as image for this annotation. The image will be copied into the dataset. binary_data (optional) \u2014 bytes array which encodes the source image. The contents will be dumped to the appropriate image file in the dataset. pil_image (optional) \u2014 [PIL.Image.Image] object to be stored as image file for this annotation in the dataset. Returns self to allow chaining. method update ( tags=None , **kwds ) Extends base update , other arguments will be passed through. Parameters tags (optional) \u2014 new tags for this grapheme (replaces all). method to_dict ( ) Get the annotation data as a dictionary. class Logogram ( *args ) Bases quevedo.annotation.annotation.Annotation Annotation for a logogram, with its contained graphemes. Attributes graphemes \u2014 list of bound graphemes found within this logogram. id \u2014 Number which identifies this annotation in its subset. image (PIL.Image.Image) \u2014 image data for this annotation. image_path \u2014 Path to the source image for the annotation. It is the id plus png extension. json_path \u2014 Path to the json annotation file. It is the id plus json extension. meta \u2014 Dictionary of metadata annotations. Methods create_from ( image_path , binary_data , pil_image , **kwds ) \u2014 Initialize an annotation with some source image data. save ( ) \u2014 Persist the information to the filesystem. to_dict ( ) \u2014 Get the annotation data as a dictionary. update ( graphemes , **kwds ) \u2014 Extends base update , other arguments will be passed through. method save ( ) Persist the information to the filesystem. method create_from ( image_path=None , binary_data=None , pil_image=None , **kwds ) Initialize an annotation with some source image data. One of image_path , binary_data or pil_image must be provided. Other arguments will be passed to update so metadata or tags can also be set. The annotation will be persisted with a call to save too. Parameters image_path (optional) \u2014 path to an image in the filesystem to use as image for this annotation. The image will be copied into the dataset. binary_data (optional) \u2014 bytes array which encodes the source image. The contents will be dumped to the appropriate image file in the dataset. pil_image (optional) \u2014 [PIL.Image.Image] object to be stored as image file for this annotation in the dataset. Returns self to allow chaining. method update ( graphemes=None , **kwds ) Extends base update , other arguments will be passed through. Parameters graphemes (optional) \u2014 a list of dicts with the grapheme information for this logogram. The dicts must have the keys necessary to initialize a BoundGrapheme . method to_dict ( ) Get the annotation data as a dictionary. class BoundGrapheme ( logogram , box=[0, 0, 0, 0] , tags={} ) A grapheme which is not isolated, but rather forms part of a logogram. To promote this bound grapheme to an isolated grapheme with its own annotation, create a grapheme object using create_from , passing this object's image to the argument pil_image . Attributes box \u2014 Coordinates (x, y, w, h) of this grapheme's bounding box within the logogram. x and y are the coordinates of the center . Values are relative to the logogram size, in the range [0, 1] . image (PIL.Image.Image) \u2014 image data for only this grapheme, cropped out of the parent logogram's image. logogram \u2014 Logogram where this grapheme is found. tags \u2014 annotated tags for this grapheme. Networks \u00b6 Network objects in Quevedo represent the network itself, but also their configuration, training and testing process, and use. There are two types of networks, Detector networks and Classifier networks, which work on logograms and graphemes respectively. The Network base class documented here is a base class that defines general behaviour, but code specific to each type of network lives in its own class. Therefore, you should get the network from a Quevedo dataset's method get_network so that the proper instance is built. class Network ( dataset , name ) Class representing a neural net to train and predict logograms or graphemes. Attributes config \u2014 Dictionary with the network configuration dataset \u2014 Parent dataset get_tag \u2014 function to get the relevant label for the network from a list of tags according to tag_schema name \u2014 Name of the network path \u2014 Path to the network directory prediction_to_tag \u2014 function to get the tag_schema values from the tag/label/class predicted by the network Methods auto_annotate ( annotation ) \u2014 Use the network to automatically annotate a real instance. get_annotations ( test ) \u2014 Get the annotations configured for use with this network. is_prepared ( ) \u2014 Checks whether the neural network configuration files have been made. is_trained ( ) \u2014 Checks whether the neural network has been trained and can be used to predict. predict ( image_path ) \u2014 Use the trained neural network to predict results from an image. prepare ( ) \u2014 Creates the files needed for training (and later using) darknet. test ( annotation , stats ) \u2014 Method to test the network on an annotation. train ( initial ) \u2014 Trains the neural network. method is_prepared ( ) Checks whether the neural network configuration files have been made. method is_trained ( ) Checks whether the neural network has been trained and can be used to predict. method get_annotations ( test=False ) Get the annotations configured for use with this network. Parameters test (optional) \u2014 get test annotations instead of train Returns a list of relevant Annotations . method prepare ( ) Creates the files needed for training (and later using) darknet. Stores the files in the network directory so they can be reused or tracked by a version control system. Must be called before training, and files not deleted (except maybe the \"train\" directory) before testing or predicting with the net. method train ( initial=None ) Trains the neural network. When finished, removes partial weights and keeps only the last. Can be interrupted and optionally resumed later. Parameters initial (optional) \u2014 path to the weights from which to resume training. method predict ( image_path ) Use the trained neural network to predict results from an image. Parameters image_path \u2014 path to the image in the file system. Returns a list of dictionaries with the predictions. Each prediction has a confidence value. Classify networks have a tag key for the predicted class, each entry is a possible classification of the image. Detector networks results are possible graphemes found, each with a name (predicted class) and box (bounding box). method test ( annotation , stats ) Method to test the network on an annotation. This method is intended for internal library use, you probably want to use predict instead. Uses the network to get the prediction for a real annotation, compare results and update stats. See test.py for stats . method auto_annotate ( annotation ) Use the network to automatically annotate a real instance. In detector networks, existing bound graphemes will be removed. In classify networks, tags which are not relevant to this network won't be modified, so it can be used incrementally. Parameters annotation \u2014 Annotation to automatically tag using this network's predictions.","title":"Reference"},{"location":"api/#reference","text":"","title":"Reference"},{"location":"api/#datasets","text":"Dataset objects are the main entry point for user code in Quevedo. They provide methods to manage the dataset, but also to retrieve other objects within it. Therefore, you don't usually need to create instances of other objects directly, but rather use the methods in the Dataset class to get them already built. For example: from quevedo import Dataset, Target ds = Dataset('path/to/the/dataset') # annotation is of type quevedo.Grapheme, a subclass of quevedo.Annotation annotation = ds.get_single(Target.GRAPH, 'subset', 32) print(annotation.to_dict()) # net is of type quevedo.Network net = ds.get_network('grapheme_classify') net.auto_annotate(annotation) annotation.save() # creating a quevedo.Logogram (subclass of quevedo.Annotation) new_a = ds.new_single(Target.LOGO, 'my_new_subset', image_path='path/to/the/image', graphemes=[ {'tags': ['character', 'letter_a'], 'box': [0.2, 0.6, 0.3, 0.3]}, {'tags': ['character', 'accute_accent'] 'box': [0.2, 0.2, 0.1, 0.2]} ]) class","title":"Datasets"},{"location":"api/#quevedodatasetdataset","text":"Class representing a Quevedo dataset. It provides access to the annotations, subsets, and any neural networks contained. Parameters path (optional) \u2014 the path to the dataset directory (existing or to be created) Attributes config (dict) \u2014 Dataset configuration path (pathlib.Path) \u2014 Path to the dataset directory. Methods create ( ) \u2014 Create or initialize a directory to be a Quevedo dataset. create_subset ( target , name , existing ) \u2014 Creates the directory for a new subset. get_annotations ( target , subset ) \u2014 Get annotations from the dataset. get_network ( name ) \u2014 Get a single neural network by name. get_single ( target , subset , id ) \u2014 Retrieve a single annotation. get_subsets ( target ) \u2014 Gets information about subsets in the dataset. is_test ( annotation ) \u2014 Checks if an annotation belongs to the training split. is_train ( annotation ) \u2014 Checks if an annotation belongs to the training split. list_networks ( ) \u2014 Get a list of all neural networks for this dataset. new_single ( target , subset , **kwds ) \u2014 Create a new annotation. method","title":"Dataset"},{"location":"api/#quevedodatasetdatasetcreate","text":"Create or initialize a directory to be a Quevedo dataset. method","title":"create"},{"location":"api/#quevedodatasetdatasetlist_networks","text":"Get a list of all neural networks for this dataset. Returns list of Networks method","title":"list_networks"},{"location":"api/#quevedodatasetdatasetget_network","text":"Get a single neural network by name. Parameters name \u2014 name of the neural network as specified in the configuration file. If not provided, the default network will be returned. Returns a Network object. method","title":"get_network"},{"location":"api/#quevedodatasetdatasetget_single","text":"Retrieve a single annotation. Parameters target (AnnotationTarget) \u2014 Target (type) of the annotation to retrieve. subset \u2014 name of the subset where the annotation is stored. id \u2014 number of the annotation in the subset. Returns a single Annotation of the appropriate type. method","title":"get_single"},{"location":"api/#quevedodatasetdatasetnew_single","text":"Create a new annotation. This method creates the annotation files in the corresponding directory, and initializes them with create_from . Any extra arguments will be passed to that method. Parameters target (AnnotationTarget) \u2014 Target (type) of the annotation to create. subset \u2014 name of the (existing) subset where to place it. Returns the new Annotation . method","title":"new_single"},{"location":"api/#quevedodatasetdatasetget_annotations","text":"Get annotations from the dataset. Depending on the arguments, all annotations, those of a given target, or only those in a given subset (or subsets) and target will be selected. Parameters target (AnnotationTarget, optional) \u2014 Target (type) of the annotations to retrieve. By default, it is the union of both types, so all annotations are retrieved: Target.GRAPH | Target.LOGO . subset (optional) \u2014 name of the subsets to get, or None to get annotations from all subsets. Returns a generator that yields selected annotations. method","title":"get_annotations"},{"location":"api/#quevedodatasetdatasetget_subsets","text":"Gets information about subsets in the dataset. Parameters target (AnnotationTarget) \u2014 Target (type) of the annotation subsets. Returns a sorted list of dict , each with the keys name for the name of the subset, and count for the number of annotations in it. method","title":"get_subsets"},{"location":"api/#quevedodatasetdatasetcreate_subset","text":"Creates the directory for a new subset. Parameters target (AnnotationTarget) \u2014 Target (type) of the annotation subset to create. name \u2014 name for the new subset. existing (optional) \u2014 controls behaviour when the directory already exists. It can be 'a' to abort (the default), 'r' to remove existing annotations, or 'm' (merge) to do nothing. Returns the path of the created directory. method","title":"create_subset"},{"location":"api/#quevedodatasetdatasetis_train","text":"Checks if an annotation belongs to the training split. method","title":"is_train"},{"location":"api/#quevedodatasetdatasetis_test","text":"Checks if an annotation belongs to the training split.","title":"is_test"},{"location":"api/#annotations","text":"Quevedo annotations are of two types, logograms and graphemes, both derived from the parent class Annotation . When it is necessary to distinguish logograms and graphemes in a process, there is the enum Target , which can take the values Target.GRAPH or Target.LOGO . the values Target.GRAPH or Target.LOGO . There is also the BoundGrapheme class, used to represent each of the graphemes which make up a logogram. class","title":"Annotations"},{"location":"api/#quevedoannotationannotationannotation","text":"Class representing a single annotation of either a logogram of a sign or signs in the dataset or an isolated grapheme. Parameters path \u2014 the full path to the annotation files (either source image or tag dictionary, which should share path and filename but not extension (the annotation dictionary need not exist). Attributes id \u2014 Number which identifies this annotation in its subset. image (PIL.Image.Image) \u2014 image data for this annotation. image_path \u2014 Path to the source image for the annotation. It is the id plus png extension. json_path \u2014 Path to the json annotation file. It is the id plus json extension. meta \u2014 Dictionary of metadata annotations. Methods create_from ( image_path , binary_data , pil_image , **kwds ) \u2014 Initialize an annotation with some source image data. save ( ) \u2014 Persist the information to the filesystem. to_dict ( ) \u2014 Get the annotation data as a dictionary. update ( meta , fold , **kwds ) \u2014 Update the content of the annotation. method","title":"Annotation"},{"location":"api/#quevedoannotationannotationannotationupdate","text":"Update the content of the annotation. This method should be overriden by the specific annotation classes to add their specific annotation information. Parameters meta (optional) \u2014 dictionary of metadata values to set. fold (optional) \u2014 fold to which the annotation will belong. method","title":"update"},{"location":"api/#quevedoannotationannotationannotationto_dict","text":"Get the annotation data as a dictionary. method","title":"to_dict"},{"location":"api/#quevedoannotationannotationannotationsave","text":"Persist the information to the filesystem. method","title":"save"},{"location":"api/#quevedoannotationannotationannotationcreate_from","text":"Initialize an annotation with some source image data. One of image_path , binary_data or pil_image must be provided. Other arguments will be passed to update so metadata or tags can also be set. The annotation will be persisted with a call to save too. Parameters image_path (optional) \u2014 path to an image in the filesystem to use as image for this annotation. The image will be copied into the dataset. binary_data (optional) \u2014 bytes array which encodes the source image. The contents will be dumped to the appropriate image file in the dataset. pil_image (optional) \u2014 [PIL.Image.Image] object to be stored as image file for this annotation in the dataset. Returns self to allow chaining. class","title":"create_from"},{"location":"api/#quevedoannotationgraphemegrapheme","text":"Bases quevedo.annotation.annotation.Annotation Annotation for an isolated grapheme. Attributes id \u2014 Number which identifies this annotation in its subset. image (PIL.Image.Image) \u2014 image data for this annotation. image_path \u2014 Path to the source image for the annotation. It is the id plus png extension. json_path \u2014 Path to the json annotation file. It is the id plus json extension. meta \u2014 Dictionary of metadata annotations. tags \u2014 annotated tags for this grapheme. Methods create_from ( image_path , binary_data , pil_image , **kwds ) \u2014 Initialize an annotation with some source image data. save ( ) \u2014 Persist the information to the filesystem. to_dict ( ) \u2014 Get the annotation data as a dictionary. update ( tags , **kwds ) \u2014 Extends base update , other arguments will be passed through. method","title":"Grapheme"},{"location":"api/#quevedoannotationannotationannotationsave_1","text":"Persist the information to the filesystem. method","title":"save"},{"location":"api/#quevedoannotationannotationannotationcreate_from_1","text":"Initialize an annotation with some source image data. One of image_path , binary_data or pil_image must be provided. Other arguments will be passed to update so metadata or tags can also be set. The annotation will be persisted with a call to save too. Parameters image_path (optional) \u2014 path to an image in the filesystem to use as image for this annotation. The image will be copied into the dataset. binary_data (optional) \u2014 bytes array which encodes the source image. The contents will be dumped to the appropriate image file in the dataset. pil_image (optional) \u2014 [PIL.Image.Image] object to be stored as image file for this annotation in the dataset. Returns self to allow chaining. method","title":"create_from"},{"location":"api/#quevedoannotationgraphemegraphemeupdate","text":"Extends base update , other arguments will be passed through. Parameters tags (optional) \u2014 new tags for this grapheme (replaces all). method","title":"update"},{"location":"api/#quevedoannotationgraphemegraphemeto_dict","text":"Get the annotation data as a dictionary. class","title":"to_dict"},{"location":"api/#quevedoannotationlogogramlogogram","text":"Bases quevedo.annotation.annotation.Annotation Annotation for a logogram, with its contained graphemes. Attributes graphemes \u2014 list of bound graphemes found within this logogram. id \u2014 Number which identifies this annotation in its subset. image (PIL.Image.Image) \u2014 image data for this annotation. image_path \u2014 Path to the source image for the annotation. It is the id plus png extension. json_path \u2014 Path to the json annotation file. It is the id plus json extension. meta \u2014 Dictionary of metadata annotations. Methods create_from ( image_path , binary_data , pil_image , **kwds ) \u2014 Initialize an annotation with some source image data. save ( ) \u2014 Persist the information to the filesystem. to_dict ( ) \u2014 Get the annotation data as a dictionary. update ( graphemes , **kwds ) \u2014 Extends base update , other arguments will be passed through. method","title":"Logogram"},{"location":"api/#quevedoannotationannotationannotationsave_2","text":"Persist the information to the filesystem. method","title":"save"},{"location":"api/#quevedoannotationannotationannotationcreate_from_2","text":"Initialize an annotation with some source image data. One of image_path , binary_data or pil_image must be provided. Other arguments will be passed to update so metadata or tags can also be set. The annotation will be persisted with a call to save too. Parameters image_path (optional) \u2014 path to an image in the filesystem to use as image for this annotation. The image will be copied into the dataset. binary_data (optional) \u2014 bytes array which encodes the source image. The contents will be dumped to the appropriate image file in the dataset. pil_image (optional) \u2014 [PIL.Image.Image] object to be stored as image file for this annotation in the dataset. Returns self to allow chaining. method","title":"create_from"},{"location":"api/#quevedoannotationlogogramlogogramupdate","text":"Extends base update , other arguments will be passed through. Parameters graphemes (optional) \u2014 a list of dicts with the grapheme information for this logogram. The dicts must have the keys necessary to initialize a BoundGrapheme . method","title":"update"},{"location":"api/#quevedoannotationlogogramlogogramto_dict","text":"Get the annotation data as a dictionary. class","title":"to_dict"},{"location":"api/#quevedoannotationlogogramboundgrapheme","text":"A grapheme which is not isolated, but rather forms part of a logogram. To promote this bound grapheme to an isolated grapheme with its own annotation, create a grapheme object using create_from , passing this object's image to the argument pil_image . Attributes box \u2014 Coordinates (x, y, w, h) of this grapheme's bounding box within the logogram. x and y are the coordinates of the center . Values are relative to the logogram size, in the range [0, 1] . image (PIL.Image.Image) \u2014 image data for only this grapheme, cropped out of the parent logogram's image. logogram \u2014 Logogram where this grapheme is found. tags \u2014 annotated tags for this grapheme.","title":"BoundGrapheme"},{"location":"api/#networks","text":"Network objects in Quevedo represent the network itself, but also their configuration, training and testing process, and use. There are two types of networks, Detector networks and Classifier networks, which work on logograms and graphemes respectively. The Network base class documented here is a base class that defines general behaviour, but code specific to each type of network lives in its own class. Therefore, you should get the network from a Quevedo dataset's method get_network so that the proper instance is built. class","title":"Networks"},{"location":"api/#quevedonetworknetworknetwork","text":"Class representing a neural net to train and predict logograms or graphemes. Attributes config \u2014 Dictionary with the network configuration dataset \u2014 Parent dataset get_tag \u2014 function to get the relevant label for the network from a list of tags according to tag_schema name \u2014 Name of the network path \u2014 Path to the network directory prediction_to_tag \u2014 function to get the tag_schema values from the tag/label/class predicted by the network Methods auto_annotate ( annotation ) \u2014 Use the network to automatically annotate a real instance. get_annotations ( test ) \u2014 Get the annotations configured for use with this network. is_prepared ( ) \u2014 Checks whether the neural network configuration files have been made. is_trained ( ) \u2014 Checks whether the neural network has been trained and can be used to predict. predict ( image_path ) \u2014 Use the trained neural network to predict results from an image. prepare ( ) \u2014 Creates the files needed for training (and later using) darknet. test ( annotation , stats ) \u2014 Method to test the network on an annotation. train ( initial ) \u2014 Trains the neural network. method","title":"Network"},{"location":"api/#quevedonetworknetworknetworkis_prepared","text":"Checks whether the neural network configuration files have been made. method","title":"is_prepared"},{"location":"api/#quevedonetworknetworknetworkis_trained","text":"Checks whether the neural network has been trained and can be used to predict. method","title":"is_trained"},{"location":"api/#quevedonetworknetworknetworkget_annotations","text":"Get the annotations configured for use with this network. Parameters test (optional) \u2014 get test annotations instead of train Returns a list of relevant Annotations . method","title":"get_annotations"},{"location":"api/#quevedonetworknetworknetworkprepare","text":"Creates the files needed for training (and later using) darknet. Stores the files in the network directory so they can be reused or tracked by a version control system. Must be called before training, and files not deleted (except maybe the \"train\" directory) before testing or predicting with the net. method","title":"prepare"},{"location":"api/#quevedonetworknetworknetworktrain","text":"Trains the neural network. When finished, removes partial weights and keeps only the last. Can be interrupted and optionally resumed later. Parameters initial (optional) \u2014 path to the weights from which to resume training. method","title":"train"},{"location":"api/#quevedonetworknetworknetworkpredict","text":"Use the trained neural network to predict results from an image. Parameters image_path \u2014 path to the image in the file system. Returns a list of dictionaries with the predictions. Each prediction has a confidence value. Classify networks have a tag key for the predicted class, each entry is a possible classification of the image. Detector networks results are possible graphemes found, each with a name (predicted class) and box (bounding box). method","title":"predict"},{"location":"api/#quevedonetworknetworknetworktest","text":"Method to test the network on an annotation. This method is intended for internal library use, you probably want to use predict instead. Uses the network to get the prediction for a real annotation, compare results and update stats. See test.py for stats . method","title":"test"},{"location":"api/#quevedonetworknetworknetworkauto_annotate","text":"Use the network to automatically annotate a real instance. In detector networks, existing bound graphemes will be removed. In classify networks, tags which are not relevant to this network won't be modified, so it can be used incrementally. Parameters annotation \u2014 Annotation to automatically tag using this network's predictions.","title":"auto_annotate"},{"location":"cli/","text":"Command Line Interface \u00b6 Usage: quevedo [OPTIONS] COMMAND1 [ARGS]... [COMMAND2 [ARGS]...]... Quevedo is a tool for managing datasets of images with compositional semantics. This includes file management, annotation of data, and neural network training and use. The -D and -N flags are global, and affect all commands used afterwards. For example, to run a full experiment for neural network 'one', run: quevedo -D path/to/dataset -N one split -p 80 prepare train test Options: -D, --dataset PATH Path to the dataset to use, by default use current directory -N, --network TEXT Neural network configuration to use --version Show the version and exit. --help Show this message and exit. Commands: add_images Import images from external directories into the dataset. config Edit dataset configuration. create Create and initialize a Quevedo dataset. extract Extract graphemes from annotated logograms. generate Generate artificial logograms from existing graphemes. info Get general status information about a dataset. migrate Upgrades a dataset config and data to the latest version. predict Get predictions for an image using the trained neural network. prepare Create the files needed for training and using this network. run_script Run a data processing script on dataset objects. split Assign annotations randomly to different folds. test Compute evaluation metrics for a trained neural network. train Train the neural network. web Run a web interface to the dataset. config \u00b6 Usage: quevedo config [OPTIONS] Edit dataset configuration. This command is a simple convenience to launch an editor open at the configuration file (config.toml). Options: -e, --editor TEXT Editor to use instead of the automatically detected one --help Show this message and exit. info \u00b6 Usage: quevedo info [OPTIONS] Get general status information about a dataset. Options: --help Show this message and exit. create \u00b6 Usage: quevedo create [OPTIONS] Create and initialize a Quevedo dataset. Options: --help Show this message and exit. add_images \u00b6 Usage: quevedo add_images [OPTIONS] Import images from external directories into the dataset. For now, images need to be in the PNG format, and have 3 channels (color) and 8 bit depth. Options: -i, --image_dir PATH Directory from which to import images. [required] -g, --grapheme-set TEXT Import the images to this grapheme set. -l, --logogram-set TEXT Import the images to this logogram set. -m, --merge Merge new images with existing ones, if any. -r, --replace Replace old images with new ones, if any. --sort-numeric Sort images ids by filename (numeric). --sort-alphabetic Sort images ids by filename (alphabetic). --no-sort Don't sort images to import. [default] --help Show this message and exit. split \u00b6 Usage: quevedo split [OPTIONS] Assign annotations randomly to different folds. By default, the annotations will be split into a number of folds configured in the dataset configuration file, starting from 0. To override this, use the `-s` and `-e` option to change the range of values for the folds. This can be used to ensure some particular subset of annotations is always assigned to some fold, for example one that will always be used for train or test. Which folds are to be used for training and which for testing can be configured in the dataset configuration file. If neither `-g` nor `-l` are used, all annotations in the dataset will be split, and if the special value \"_ALL_\" for either grapheme or logogram sets is given, all sets for the chosen target will be split. In the cases before, annotations will be assigned randomly, so no proportions of graphemes/logograms/sets can be guaranteed for any fold. If the same fold proportions in each set are desired, run the command once for each of them. Options: -g, --grapheme-set TEXT Grapheme set(s) to split. -l, --logogram-set TEXT Logogram set(s) to split. -s, --start-fold INTEGER Minimum number to use for the folds. -e, --end-fold INTEGER Maximum number to use for the folds. --seed INTEGER A seed for the random split algorithm. --help Show this message and exit. extract \u00b6 Usage: quevedo extract [OPTIONS] Extract graphemes from annotated logograms. This command takes all the logograms in the given subset, extracts the graphemes annotated in each of them, and stores them as independent annotations (carrying over the relevant information) in the chosen grapheme subset. Options: -f, --from TEXT Logogram subset from which to extract graphemes. -t, --to TEXT Grapheme subset where to place extracted graphemes. -m, --merge Merge new graphemes with existing ones, if any. -r, --replace Replace old graphemes with new ones, if any. --help Show this message and exit. generate \u00b6 Usage: quevedo generate [OPTIONS] Generate artificial logograms from existing graphemes. This command creates new logograms in the chosen subset by randomly combining graphemes together. The generation process can be somewhat controlled in the configuration file. Since the goal of this process is to perform data augmentation for training, only graphemes in \"train\" folds will be used. Generated logograms will have the first fold use for training set as their fold. Options: -f, --from TEXT Grapheme subset to use -t, --to TEXT Logogram subset where to place generated logograms. -m, --merge Merge new logograms with existing ones, if any. -r, --replace Replace old logograms with new ones, if any. --help Show this message and exit. prepare \u00b6 Usage: quevedo prepare [OPTIONS] Create the files needed for training and using this network. The training files, net configuration, and mapping from dataset tags to net classes are stored in a directory named after the chosen net (-N flag) under the `networks` path. Options: --help Show this message and exit. train \u00b6 Usage: quevedo train [OPTIONS] Train the neural network. The training configuration and files must have been created by running the command `prepare`. The weights obtained after training are stored in the network directory: `/<dataset>/networks/<network_name>/darknet_final.weights`. Options: -c, --resume / --no-resume Start training with existing weights from a previous run --help Show this message and exit. predict \u00b6 Usage: quevedo predict [OPTIONS] Get predictions for an image using the trained neural network. Options: -i, --image PATH Image to predict [required] --help Show this message and exit. test \u00b6 Usage: quevedo test [OPTIONS] Compute evaluation metrics for a trained neural network. By default annotations marked as \"test\" (see train/test split) are used. Precision, recall and f-score are computed for each class, as well as their average (micro) and global metrics (macro average). For more detailed statistics, the full predictions can be printed into a csv to be loaded into other software (like R). Options: -p, --print / --no-print Show results in the command line --results-csv / --no-results-csv Print results into a `results.csv` file in the network directory --results-json / --no-results-json Print results into a `results.json` file in the network directory --predictions-csv / --no-predictions-csv Print all predictions into a `predictions.csv` file in the network directory --on-train Test the network on the train set instead of the test one --help Show this message and exit. web \u00b6 Usage: quevedo web [OPTIONS] Run a web interface to the dataset. The web application launched can be used to browse and manage the dataset files. Annotation pages are provided for both graphemes and logograms to allow visual annotation of objects. Very basic user management is also provided. Configuration can be written under the `web` key of the dataset configuration. Options: -h, --host TEXT -p, --port TEXT -m, --mount-path TEXT Mount path for the web application --browser / --no-browser Launch browser with the web app -l, --language [es|en] Language for the UI (default from config file) --help Show this message and exit. run_script \u00b6 Usage: quevedo run_script [OPTIONS] [EXTRA_ARGS]... Run a data processing script on dataset objects. The script should be in the 'scripts' directory of the dataset, and have a \"process\" method which will be called by Quevedo on each grapheme or logogram in the selected subsets. If it has an \"init\" method, it will be called once and firstmost, with any extra arguments that have been passed to this command. Options: -s, --scriptname TEXT Name of the script to run, without path or extension [required] -g, --grapheme-set TEXT Process graphemes from these sets -l, --logogram-set TEXT Process logograms from these sets --help Show this message and exit. migrate \u00b6 Usage: quevedo migrate [OPTIONS] Upgrades a dataset config and data to the latest version. DANGER! This will change your annotations. Please have a backup of your data in case something goes wrong. Options: --help Show this message and exit.","title":"Command Line Interface"},{"location":"cli/#command-line-interface","text":"Usage: quevedo [OPTIONS] COMMAND1 [ARGS]... [COMMAND2 [ARGS]...]... Quevedo is a tool for managing datasets of images with compositional semantics. This includes file management, annotation of data, and neural network training and use. The -D and -N flags are global, and affect all commands used afterwards. For example, to run a full experiment for neural network 'one', run: quevedo -D path/to/dataset -N one split -p 80 prepare train test Options: -D, --dataset PATH Path to the dataset to use, by default use current directory -N, --network TEXT Neural network configuration to use --version Show the version and exit. --help Show this message and exit. Commands: add_images Import images from external directories into the dataset. config Edit dataset configuration. create Create and initialize a Quevedo dataset. extract Extract graphemes from annotated logograms. generate Generate artificial logograms from existing graphemes. info Get general status information about a dataset. migrate Upgrades a dataset config and data to the latest version. predict Get predictions for an image using the trained neural network. prepare Create the files needed for training and using this network. run_script Run a data processing script on dataset objects. split Assign annotations randomly to different folds. test Compute evaluation metrics for a trained neural network. train Train the neural network. web Run a web interface to the dataset.","title":"Command Line Interface"},{"location":"cli/#config","text":"Usage: quevedo config [OPTIONS] Edit dataset configuration. This command is a simple convenience to launch an editor open at the configuration file (config.toml). Options: -e, --editor TEXT Editor to use instead of the automatically detected one --help Show this message and exit.","title":"config"},{"location":"cli/#info","text":"Usage: quevedo info [OPTIONS] Get general status information about a dataset. Options: --help Show this message and exit.","title":"info"},{"location":"cli/#create","text":"Usage: quevedo create [OPTIONS] Create and initialize a Quevedo dataset. Options: --help Show this message and exit.","title":"create"},{"location":"cli/#add_images","text":"Usage: quevedo add_images [OPTIONS] Import images from external directories into the dataset. For now, images need to be in the PNG format, and have 3 channels (color) and 8 bit depth. Options: -i, --image_dir PATH Directory from which to import images. [required] -g, --grapheme-set TEXT Import the images to this grapheme set. -l, --logogram-set TEXT Import the images to this logogram set. -m, --merge Merge new images with existing ones, if any. -r, --replace Replace old images with new ones, if any. --sort-numeric Sort images ids by filename (numeric). --sort-alphabetic Sort images ids by filename (alphabetic). --no-sort Don't sort images to import. [default] --help Show this message and exit.","title":"add_images"},{"location":"cli/#split","text":"Usage: quevedo split [OPTIONS] Assign annotations randomly to different folds. By default, the annotations will be split into a number of folds configured in the dataset configuration file, starting from 0. To override this, use the `-s` and `-e` option to change the range of values for the folds. This can be used to ensure some particular subset of annotations is always assigned to some fold, for example one that will always be used for train or test. Which folds are to be used for training and which for testing can be configured in the dataset configuration file. If neither `-g` nor `-l` are used, all annotations in the dataset will be split, and if the special value \"_ALL_\" for either grapheme or logogram sets is given, all sets for the chosen target will be split. In the cases before, annotations will be assigned randomly, so no proportions of graphemes/logograms/sets can be guaranteed for any fold. If the same fold proportions in each set are desired, run the command once for each of them. Options: -g, --grapheme-set TEXT Grapheme set(s) to split. -l, --logogram-set TEXT Logogram set(s) to split. -s, --start-fold INTEGER Minimum number to use for the folds. -e, --end-fold INTEGER Maximum number to use for the folds. --seed INTEGER A seed for the random split algorithm. --help Show this message and exit.","title":"split"},{"location":"cli/#extract","text":"Usage: quevedo extract [OPTIONS] Extract graphemes from annotated logograms. This command takes all the logograms in the given subset, extracts the graphemes annotated in each of them, and stores them as independent annotations (carrying over the relevant information) in the chosen grapheme subset. Options: -f, --from TEXT Logogram subset from which to extract graphemes. -t, --to TEXT Grapheme subset where to place extracted graphemes. -m, --merge Merge new graphemes with existing ones, if any. -r, --replace Replace old graphemes with new ones, if any. --help Show this message and exit.","title":"extract"},{"location":"cli/#generate","text":"Usage: quevedo generate [OPTIONS] Generate artificial logograms from existing graphemes. This command creates new logograms in the chosen subset by randomly combining graphemes together. The generation process can be somewhat controlled in the configuration file. Since the goal of this process is to perform data augmentation for training, only graphemes in \"train\" folds will be used. Generated logograms will have the first fold use for training set as their fold. Options: -f, --from TEXT Grapheme subset to use -t, --to TEXT Logogram subset where to place generated logograms. -m, --merge Merge new logograms with existing ones, if any. -r, --replace Replace old logograms with new ones, if any. --help Show this message and exit.","title":"generate"},{"location":"cli/#prepare","text":"Usage: quevedo prepare [OPTIONS] Create the files needed for training and using this network. The training files, net configuration, and mapping from dataset tags to net classes are stored in a directory named after the chosen net (-N flag) under the `networks` path. Options: --help Show this message and exit.","title":"prepare"},{"location":"cli/#train","text":"Usage: quevedo train [OPTIONS] Train the neural network. The training configuration and files must have been created by running the command `prepare`. The weights obtained after training are stored in the network directory: `/<dataset>/networks/<network_name>/darknet_final.weights`. Options: -c, --resume / --no-resume Start training with existing weights from a previous run --help Show this message and exit.","title":"train"},{"location":"cli/#predict","text":"Usage: quevedo predict [OPTIONS] Get predictions for an image using the trained neural network. Options: -i, --image PATH Image to predict [required] --help Show this message and exit.","title":"predict"},{"location":"cli/#test","text":"Usage: quevedo test [OPTIONS] Compute evaluation metrics for a trained neural network. By default annotations marked as \"test\" (see train/test split) are used. Precision, recall and f-score are computed for each class, as well as their average (micro) and global metrics (macro average). For more detailed statistics, the full predictions can be printed into a csv to be loaded into other software (like R). Options: -p, --print / --no-print Show results in the command line --results-csv / --no-results-csv Print results into a `results.csv` file in the network directory --results-json / --no-results-json Print results into a `results.json` file in the network directory --predictions-csv / --no-predictions-csv Print all predictions into a `predictions.csv` file in the network directory --on-train Test the network on the train set instead of the test one --help Show this message and exit.","title":"test"},{"location":"cli/#web","text":"Usage: quevedo web [OPTIONS] Run a web interface to the dataset. The web application launched can be used to browse and manage the dataset files. Annotation pages are provided for both graphemes and logograms to allow visual annotation of objects. Very basic user management is also provided. Configuration can be written under the `web` key of the dataset configuration. Options: -h, --host TEXT -p, --port TEXT -m, --mount-path TEXT Mount path for the web application --browser / --no-browser Launch browser with the web app -l, --language [es|en] Language for the UI (default from config file) --help Show this message and exit.","title":"web"},{"location":"cli/#run_script","text":"Usage: quevedo run_script [OPTIONS] [EXTRA_ARGS]... Run a data processing script on dataset objects. The script should be in the 'scripts' directory of the dataset, and have a \"process\" method which will be called by Quevedo on each grapheme or logogram in the selected subsets. If it has an \"init\" method, it will be called once and firstmost, with any extra arguments that have been passed to this command. Options: -s, --scriptname TEXT Name of the script to run, without path or extension [required] -g, --grapheme-set TEXT Process graphemes from these sets -l, --logogram-set TEXT Process logograms from these sets --help Show this message and exit.","title":"run_script"},{"location":"cli/#migrate","text":"Usage: quevedo migrate [OPTIONS] Upgrades a dataset config and data to the latest version. DANGER! This will change your annotations. Please have a backup of your data in case something goes wrong. Options: --help Show this message and exit.","title":"migrate"},{"location":"concepts/","text":"Quevedo Datasets \u00b6 Quevedo datasets consist of source images, annotations on those images, and other metadata that can help with their interpretation. While it can be used for less complex images, Quevedo's focus is on images with compositional meaning , such as constitute visual languages, like UML , or complex writing systems, like SignWriting or musical notation . Example of an UML communication diagram (source: Oemmler @ Wikipedia ) Example of a SignWriting transcription representing the ASL sign for \"SignWriting\" (source: Slevinski @ Wikipedia ) An example of modern musical notation: Prelude, Op. 28, No. 7, by Fr\u00e9d\u00e9ric Chopin (source: Prof.rick @ Wikipedia ) Logograms and Graphemes \u00b6 Quevedo recognises two types of source images: logograms and graphemes . Graphemes are atomic, individual symbols that represent some particular meaning in the target visual language, while logograms are images made up of graphemes in complex and meaningful spatial arrangements. In the UML example above, the different boxes, arrows and characters are graphemes. In the SignWriting example, the hand symbols along with the arrows indicating movement are the graphemes. In the sheet music excerpt, one can identify the notes, accidentals and other symbols as graphemes. As for logograms, what constitutes a logogram depends on the target language and the goal of the researcher, but to Quevedo, any logogram is an image file where graphemes are arranged according to some underlying meaning. The names logogram and grapheme come from the original problem for which Quevedo has been designed, which is automatic recognition of visual languages, but the software imposes little meaning to the terms beyond the fact that graphemes are independent and atomic, and logograms are composed of spatially arranged graphemes. Therefore, Quevedo can be used to manage datasets for problems of varying complexity, as long as the source data are images with some compositional structure. Annotation of logograms and graphemes \u00b6 One of the characteristics of visual writing systems is that they can encode multiple meanings within a single symbol, taking advantage of the possibilities offered by the visual medium. In Quevedo, annotation consist not of a single tag, but rather of a dictionary of tag names and values. This allows different systems to peruse different aspects of the symbols' meaning, and also lets researchers experiment with different, simultaneous and possibly overlapping annotation schemas for the dataset. Each grapheme in the dataset has one such dictionary of tags associated, manually entered by an annotator or automatically filled by some process. Logograms, on the other hand, don't have these tags directly, but rather in the graphemes they contain. Logograms are annotated by marking the different graphemes contained within them, and then tagging each grapheme with the tags from the tag schema. Additionally, both graphemes and logograms can have \"meta\" tags which represent other information. This can be used to store information about the filenames, the source of the data, or in the case of logograms, information about the logogram itself not associated with any particular grapheme. Example of the annotation of a logogram in the web interface Dataset structure \u00b6 Each Quevedo dataset is a directory on disk, containing a configuration file named config.toml , and a number of directories. Files which Quevedo doesn't recognize will be ignored, so it is safe to add these files that other programs (such as git or DVC ) may need. Annotations are stored in subdirectories of the logograms and graphemes directories (depending on their type). Each subdirectory represents a data subset, which can be used to perform different experiments on different sets, or just to organize data in some meaningful way. Annotations in each subset consist of two files: <number>.png and <number>.json . The .png file is the source image, in PNG format, and the .json file contains the annotations in JSON format. These are standard formats, so annotations in a Quevedo dataset can be read and modified by external tools and inspected by humans. The annotations are sequentially numbered, so corresponding images and json files are easily found. There are two additional directories which Quevedo uses: networks and scripts . In the networks directory, the training configuration and weight files for each different neural network are stored. Each network has a name, and its files are all organized in the subdirectory of networks with the network name. The scripts directory can contain useful scripts for additional management of the dataset. For example, a researcher can store the .r scripts used to evaluate different metrics on the dataset, or shell scripts to process images or extract annotation information. A special case are python files (ending in .py ) which Quevedo can understand . dataset_root \u251c\u2500 config.toml \u251c\u2500 logograms \u2502 \u251c\u2500 subset_1 \u2502 \u2502 \u251c\u2500 1.png \u2502 \u2502 \u251c\u2500 1.json \u2502 \u2502 \u251c\u2500 2.png \u2502 \u2502 \u251c\u2500 2.json \u2502 \u2502 \u2514\u2500 ... \u2502 \u2514\u2500 other_subset \u251c\u2500 graphemes \u2502 \u251c\u2500 subset_1 \u2502 \u2502 \u251c\u2500 1.png \u2502 \u2502 \u251c\u2500 1.json \u2502 \u2502 \u2514\u2500 ... \u2502 \u2514\u2500 other_subset \u251c\u2500 networks \u2502 \u251c\u2500 network_1 \u2502 \u2502 \u251c\u2500 train \u2502 \u2502 \u251c\u2500 darknet.cfg \u2502 \u2502 \u251c\u2500 darknet_final.weights \u2502 \u2502 \u251c\u2500 results.json \u2502 \u2502 \u2514\u2500 ... \u2502 \u2514\u2500 network_2 \u2514\u2500 scripts Example of a Quevedo dataset directory structure Interaction with git and DVC \u00b6 Since Quevedo datasets are directories on disk, and the different files use standard formats, Quevedo datasets can interact nicely with other tools, such as git and DVC . In particular, a Quevedo dataset can also be a git repository, and therefore a DVC repository too. This can help with dataset sharing and experiment reproducibility. We recommend using git to track configuration files and scripts, and DVC to track source data, annotations, and experiments.","title":"Quevedo Datasets"},{"location":"concepts/#quevedo-datasets","text":"Quevedo datasets consist of source images, annotations on those images, and other metadata that can help with their interpretation. While it can be used for less complex images, Quevedo's focus is on images with compositional meaning , such as constitute visual languages, like UML , or complex writing systems, like SignWriting or musical notation . Example of an UML communication diagram (source: Oemmler @ Wikipedia ) Example of a SignWriting transcription representing the ASL sign for \"SignWriting\" (source: Slevinski @ Wikipedia ) An example of modern musical notation: Prelude, Op. 28, No. 7, by Fr\u00e9d\u00e9ric Chopin (source: Prof.rick @ Wikipedia )","title":"Quevedo Datasets"},{"location":"concepts/#logograms-and-graphemes","text":"Quevedo recognises two types of source images: logograms and graphemes . Graphemes are atomic, individual symbols that represent some particular meaning in the target visual language, while logograms are images made up of graphemes in complex and meaningful spatial arrangements. In the UML example above, the different boxes, arrows and characters are graphemes. In the SignWriting example, the hand symbols along with the arrows indicating movement are the graphemes. In the sheet music excerpt, one can identify the notes, accidentals and other symbols as graphemes. As for logograms, what constitutes a logogram depends on the target language and the goal of the researcher, but to Quevedo, any logogram is an image file where graphemes are arranged according to some underlying meaning. The names logogram and grapheme come from the original problem for which Quevedo has been designed, which is automatic recognition of visual languages, but the software imposes little meaning to the terms beyond the fact that graphemes are independent and atomic, and logograms are composed of spatially arranged graphemes. Therefore, Quevedo can be used to manage datasets for problems of varying complexity, as long as the source data are images with some compositional structure.","title":"Logograms and Graphemes"},{"location":"concepts/#annotation-of-logograms-and-graphemes","text":"One of the characteristics of visual writing systems is that they can encode multiple meanings within a single symbol, taking advantage of the possibilities offered by the visual medium. In Quevedo, annotation consist not of a single tag, but rather of a dictionary of tag names and values. This allows different systems to peruse different aspects of the symbols' meaning, and also lets researchers experiment with different, simultaneous and possibly overlapping annotation schemas for the dataset. Each grapheme in the dataset has one such dictionary of tags associated, manually entered by an annotator or automatically filled by some process. Logograms, on the other hand, don't have these tags directly, but rather in the graphemes they contain. Logograms are annotated by marking the different graphemes contained within them, and then tagging each grapheme with the tags from the tag schema. Additionally, both graphemes and logograms can have \"meta\" tags which represent other information. This can be used to store information about the filenames, the source of the data, or in the case of logograms, information about the logogram itself not associated with any particular grapheme. Example of the annotation of a logogram in the web interface","title":"Annotation of logograms and graphemes"},{"location":"concepts/#dataset-structure","text":"Each Quevedo dataset is a directory on disk, containing a configuration file named config.toml , and a number of directories. Files which Quevedo doesn't recognize will be ignored, so it is safe to add these files that other programs (such as git or DVC ) may need. Annotations are stored in subdirectories of the logograms and graphemes directories (depending on their type). Each subdirectory represents a data subset, which can be used to perform different experiments on different sets, or just to organize data in some meaningful way. Annotations in each subset consist of two files: <number>.png and <number>.json . The .png file is the source image, in PNG format, and the .json file contains the annotations in JSON format. These are standard formats, so annotations in a Quevedo dataset can be read and modified by external tools and inspected by humans. The annotations are sequentially numbered, so corresponding images and json files are easily found. There are two additional directories which Quevedo uses: networks and scripts . In the networks directory, the training configuration and weight files for each different neural network are stored. Each network has a name, and its files are all organized in the subdirectory of networks with the network name. The scripts directory can contain useful scripts for additional management of the dataset. For example, a researcher can store the .r scripts used to evaluate different metrics on the dataset, or shell scripts to process images or extract annotation information. A special case are python files (ending in .py ) which Quevedo can understand . dataset_root \u251c\u2500 config.toml \u251c\u2500 logograms \u2502 \u251c\u2500 subset_1 \u2502 \u2502 \u251c\u2500 1.png \u2502 \u2502 \u251c\u2500 1.json \u2502 \u2502 \u251c\u2500 2.png \u2502 \u2502 \u251c\u2500 2.json \u2502 \u2502 \u2514\u2500 ... \u2502 \u2514\u2500 other_subset \u251c\u2500 graphemes \u2502 \u251c\u2500 subset_1 \u2502 \u2502 \u251c\u2500 1.png \u2502 \u2502 \u251c\u2500 1.json \u2502 \u2502 \u2514\u2500 ... \u2502 \u2514\u2500 other_subset \u251c\u2500 networks \u2502 \u251c\u2500 network_1 \u2502 \u2502 \u251c\u2500 train \u2502 \u2502 \u251c\u2500 darknet.cfg \u2502 \u2502 \u251c\u2500 darknet_final.weights \u2502 \u2502 \u251c\u2500 results.json \u2502 \u2502 \u2514\u2500 ... \u2502 \u2514\u2500 network_2 \u2514\u2500 scripts Example of a Quevedo dataset directory structure","title":"Dataset structure"},{"location":"concepts/#interaction-with-git-and-dvc","text":"Since Quevedo datasets are directories on disk, and the different files use standard formats, Quevedo datasets can interact nicely with other tools, such as git and DVC . In particular, a Quevedo dataset can also be a git repository, and therefore a DVC repository too. This can help with dataset sharing and experiment reproducibility. We recommend using git to track configuration files and scripts, and DVC to track source data, annotations, and experiments.","title":"Interaction with git and DVC"},{"location":"config/","text":"Dataset Configuration \u00b6 All configuration of a Quevedo dataset is found in its configuration file, which is found at the root of the dataset and named config.toml . This file is in TOML format, which makes it ideal for both human and machine editing. We recommend reading TOML documentation to really understand the format, but it is an intuitive enough language that you can understand the configuration file enough to modify it just by reading it. As a convenience, quevedo provides the quevedo config command to edit the configuration file, but this only launches the user's configured text editor with the config.toml file open. Local configuration \u00b6 Quevedo datasets are meant to be shared, and configuration is an essential part of the dataset. However, some options may be applicable only for the local environment, and others may be sensitive and best not distributed. For this, Quevedo also reads a config.local.toml if present. The options in the local configuration file override those in the main file. This can be useful for the configuration of darknet installation, which is likely different for different environments, and for the web interface, which may contain sensitive information like secrets and users' passwords (even if hashed). Annotation schema \u00b6 Two important options in the configuration file are tag_schema and meta_tags . These describe the schema of the dataset annotation, and are lists of strings with the names of the different tags (features) to annotate. The meta_tags are used to add information to each annotation file, such as filename, author of the annotation, but also maybe meaning of the transcription, etc. They are common to both logograms and graphemes. The tags in tag_schema is a list of the different tags or features that each grapheme, either isolated or bound, can have. Both meta tags and grapheme tags are represented as dictionary objects both in the annotation files (in json format) and in the code (python dict s). Warning In older versions of Quevedo (before v1.1), tags were stored as a list instead of a dictionary. If your dataset is using this old structure, Quevedo will warn you. Please run the migrate command to upgrade the dataset. Isolated graphemes (in the graphemes directory) have a single dictionary of tags associated with the transcription. Conversely, logograms have a list of graphemes that can be found in them. This list includes the grapheme position, and also the tag dictionary in the same format and with the same meaning as for isolated graphemes. Other options \u00b6 darknet : Configuration for using the darknet binary and library. See Darknet installation . network : Configuration for training and using neural networks. See Network configuration . web : Configuration for the web interface. See Web interface configuration . generate : These options guide the process of artificial logogram generation used for data augmentation. See generate . folds , train_folds , test_folds : The folds option sets the default folds that the split will use to partition annotations. The train_folds option is a list of fold values that will be used to train, and the test_folds option respectively for testing. See Splits and folds for more. Default configuration \u00b6 When creating a dataset, Quevedo places a default configuration file with comments to ease personalization. The default file is included here for reference: # This file is a Quevedo dataset configuration file. Find more at: # https://www.github.com/agarsev/quevedo # Local overrides can be written in `config.local.toml` title = \"The title\" description = \"\"\" The dataset description. \"\"\" tag_schema = [ \"tag\" ] # For a multi-tag schema, use: # tag_schema = [ \"tag1\", \"tag2\" ] # Meta tags affect the whole annotation, rather than individual graphemes. The # first one will be used as title for the annotation in the web listing. meta_tags = [ \"filename\", \"meaning\" ] # Flags are also meta tags, but can only be true/false. They are displayed in # the web interface as checkboxes with the icon set here. flags = { done = \"\u2714\ufe0f\", problem = \"\u26a0\ufe0f\", notes = \"\ud83d\udcdd\" } annotation_help = \"\"\" Write here any help for annotators, like lists of graphemes or other instructions. For example: Make boxes slightly larger than the graphemes, not too tight. \"\"\" config_version = 1 # Version of quevedo dataset schema, not of dataset data # Number of folds to split annotations into, and which to use for training and # which to use for testing folds = 10 train_folds = [0,1,2,3,4,5,6,7] test_folds = [8,9] [darknet] path = \"darknet/darknet\" library = \"darknet/libdarknet.so\" options = [ \"-dont_show\", \"-mjpeg_port\", \"8090\" ] [network.one] default = true # Network to use if not specified task = \"detect\" # tag = \"tag\" # Uncomment and choose a tag name from tag_schema to use # subsets = [ \"default\" ] # If not specified, all subsets will be used subject = \"Focus on grapheme type learning and recognition\" [network.two] task = \"classify\" # tag = \"tag\" # tag = [ \"tag1\", \"tag2\" ] # A combination of tags can be used as the network \"class\" subsets = [ \"default\" ] subject = \"Classify graphemes\" # A filter can be used to select the annotations to use for training this network # [network.two.filter] # criterion = \"tag\" # Tag to use to decide whether to include or not each annotation # include = [ \"value\" ] # Values for the criterion to use # # exclude = [ \"value\" ] # Alternatively, values to exclude # Automatic data augmentation can be configured here: # [network.two.augment] # angle = 10 # flip = 1 # yes/no, 1/0 # exposure = 0.8 # aspect = 0.8 # only for classify tasks # Add more networks like so: # [network.other] # task = \"detect\" or \"classify\" # tag = \"tag\" # subject = \"human readable description\" # ... [web] host = \"localhost\" port = \"5000\" mount_path = \"\" lang = \"en\" public = true # Set to false to require login # Generate your own secret key with, for example: # python -c 'from secrets import token_hex; print(token_hex(16))' secret_key = \"ce8c9cd0316faac773645648ac827ff6\" # [web.users.annotator] # # Uncomment and modify to add users # # Hash the password with: # # python -c 'import hashlib; print(hashlib.new(\"sha1\", \"thepassword\".encode(\"utf8\")).hexdigest());' # password = \"\" # read = \"ALL\" # Can read all subsets # # read = [ \"public\" ] # Can read all subsets that contain the string 'public' # write = \"NONE\" # Can't write (modify) any subsets # # write = [ \"set1$$\", \"set2$$\" ] # Can write to set1 and set2, both logogram or # # graphemes (they are regexes) # # [web.users.user2] # ... [generate] # Configuration for the artificial logogram generation count = 500 width_range = [ 200, 300 ] height_range = [ 200, 300 ] tag = \"tag\" # Tag to guide grapheme placement [[generate.params]] match = 'one' # Match graphemes tagged with class \"one\" mode = 'one' # Only put one of these graphemes freq = 0.4 # How often to add one of these rotate = false [[generate.params]] match = 'excluded' mode = 'none' # Don't put any of these graphemes [[generate.params]] match = '.*' # Match any grapheme (it's a regex) mode = 'many' # Add potentially many of these graphemes max = 3 # How many to potentially add prob = 0.6 # Probability for a single grapheme to appear (times max = expected number) rotate = true","title":"Dataset Configuration"},{"location":"config/#dataset-configuration","text":"All configuration of a Quevedo dataset is found in its configuration file, which is found at the root of the dataset and named config.toml . This file is in TOML format, which makes it ideal for both human and machine editing. We recommend reading TOML documentation to really understand the format, but it is an intuitive enough language that you can understand the configuration file enough to modify it just by reading it. As a convenience, quevedo provides the quevedo config command to edit the configuration file, but this only launches the user's configured text editor with the config.toml file open.","title":"Dataset Configuration"},{"location":"config/#local-configuration","text":"Quevedo datasets are meant to be shared, and configuration is an essential part of the dataset. However, some options may be applicable only for the local environment, and others may be sensitive and best not distributed. For this, Quevedo also reads a config.local.toml if present. The options in the local configuration file override those in the main file. This can be useful for the configuration of darknet installation, which is likely different for different environments, and for the web interface, which may contain sensitive information like secrets and users' passwords (even if hashed).","title":"Local configuration"},{"location":"config/#annotation-schema","text":"Two important options in the configuration file are tag_schema and meta_tags . These describe the schema of the dataset annotation, and are lists of strings with the names of the different tags (features) to annotate. The meta_tags are used to add information to each annotation file, such as filename, author of the annotation, but also maybe meaning of the transcription, etc. They are common to both logograms and graphemes. The tags in tag_schema is a list of the different tags or features that each grapheme, either isolated or bound, can have. Both meta tags and grapheme tags are represented as dictionary objects both in the annotation files (in json format) and in the code (python dict s). Warning In older versions of Quevedo (before v1.1), tags were stored as a list instead of a dictionary. If your dataset is using this old structure, Quevedo will warn you. Please run the migrate command to upgrade the dataset. Isolated graphemes (in the graphemes directory) have a single dictionary of tags associated with the transcription. Conversely, logograms have a list of graphemes that can be found in them. This list includes the grapheme position, and also the tag dictionary in the same format and with the same meaning as for isolated graphemes.","title":"Annotation schema"},{"location":"config/#other-options","text":"darknet : Configuration for using the darknet binary and library. See Darknet installation . network : Configuration for training and using neural networks. See Network configuration . web : Configuration for the web interface. See Web interface configuration . generate : These options guide the process of artificial logogram generation used for data augmentation. See generate . folds , train_folds , test_folds : The folds option sets the default folds that the split will use to partition annotations. The train_folds option is a list of fold values that will be used to train, and the test_folds option respectively for testing. See Splits and folds for more.","title":"Other options"},{"location":"config/#default-configuration","text":"When creating a dataset, Quevedo places a default configuration file with comments to ease personalization. The default file is included here for reference: # This file is a Quevedo dataset configuration file. Find more at: # https://www.github.com/agarsev/quevedo # Local overrides can be written in `config.local.toml` title = \"The title\" description = \"\"\" The dataset description. \"\"\" tag_schema = [ \"tag\" ] # For a multi-tag schema, use: # tag_schema = [ \"tag1\", \"tag2\" ] # Meta tags affect the whole annotation, rather than individual graphemes. The # first one will be used as title for the annotation in the web listing. meta_tags = [ \"filename\", \"meaning\" ] # Flags are also meta tags, but can only be true/false. They are displayed in # the web interface as checkboxes with the icon set here. flags = { done = \"\u2714\ufe0f\", problem = \"\u26a0\ufe0f\", notes = \"\ud83d\udcdd\" } annotation_help = \"\"\" Write here any help for annotators, like lists of graphemes or other instructions. For example: Make boxes slightly larger than the graphemes, not too tight. \"\"\" config_version = 1 # Version of quevedo dataset schema, not of dataset data # Number of folds to split annotations into, and which to use for training and # which to use for testing folds = 10 train_folds = [0,1,2,3,4,5,6,7] test_folds = [8,9] [darknet] path = \"darknet/darknet\" library = \"darknet/libdarknet.so\" options = [ \"-dont_show\", \"-mjpeg_port\", \"8090\" ] [network.one] default = true # Network to use if not specified task = \"detect\" # tag = \"tag\" # Uncomment and choose a tag name from tag_schema to use # subsets = [ \"default\" ] # If not specified, all subsets will be used subject = \"Focus on grapheme type learning and recognition\" [network.two] task = \"classify\" # tag = \"tag\" # tag = [ \"tag1\", \"tag2\" ] # A combination of tags can be used as the network \"class\" subsets = [ \"default\" ] subject = \"Classify graphemes\" # A filter can be used to select the annotations to use for training this network # [network.two.filter] # criterion = \"tag\" # Tag to use to decide whether to include or not each annotation # include = [ \"value\" ] # Values for the criterion to use # # exclude = [ \"value\" ] # Alternatively, values to exclude # Automatic data augmentation can be configured here: # [network.two.augment] # angle = 10 # flip = 1 # yes/no, 1/0 # exposure = 0.8 # aspect = 0.8 # only for classify tasks # Add more networks like so: # [network.other] # task = \"detect\" or \"classify\" # tag = \"tag\" # subject = \"human readable description\" # ... [web] host = \"localhost\" port = \"5000\" mount_path = \"\" lang = \"en\" public = true # Set to false to require login # Generate your own secret key with, for example: # python -c 'from secrets import token_hex; print(token_hex(16))' secret_key = \"ce8c9cd0316faac773645648ac827ff6\" # [web.users.annotator] # # Uncomment and modify to add users # # Hash the password with: # # python -c 'import hashlib; print(hashlib.new(\"sha1\", \"thepassword\".encode(\"utf8\")).hexdigest());' # password = \"\" # read = \"ALL\" # Can read all subsets # # read = [ \"public\" ] # Can read all subsets that contain the string 'public' # write = \"NONE\" # Can't write (modify) any subsets # # write = [ \"set1$$\", \"set2$$\" ] # Can write to set1 and set2, both logogram or # # graphemes (they are regexes) # # [web.users.user2] # ... [generate] # Configuration for the artificial logogram generation count = 500 width_range = [ 200, 300 ] height_range = [ 200, 300 ] tag = \"tag\" # Tag to guide grapheme placement [[generate.params]] match = 'one' # Match graphemes tagged with class \"one\" mode = 'one' # Only put one of these graphemes freq = 0.4 # How often to add one of these rotate = false [[generate.params]] match = 'excluded' mode = 'none' # Don't put any of these graphemes [[generate.params]] match = '.*' # Match any grapheme (it's a regex) mode = 'many' # Add potentially many of these graphemes max = 3 # How many to potentially add prob = 0.6 # Probability for a single grapheme to appear (times max = expected number) rotate = true","title":"Default configuration"},{"location":"dev/","text":"Quevedo as a library \u00b6 Quevedo can be used as a command line application to manage a dataset, but it can also be used from other Python code to make programatic access to the dataset more convenient, or in user scripts run by Quevedo on the dataset objects. Call from python \u00b6 To use Quevedo from other python code, you can import it with import quevedo , or it may be more useful to directly import the Dataset class: from quevedo import Dataset . This class has most of the functionality to deal with Quevedo datasets, including managing the data and the neural networks. There are some examples of use in the examples directory of the repo, and we try to keep the code readable to help understand the library. The full API reference with the different classess and methods can be read here . User scripts \u00b6 Every dataset is different, and dealing with data often needs to have custom procedures and algorithms, specific to the problem at hand. We suggest to place these scripts in the scripts directory of the dataset, to keep them organized. Quevedo can also help run scripts in this directory using the command run_script . With run_script , you don't need to write the boilerplate code of accessing all the annotations, loading their data and image, and saving them. Just provide a process function, which receives an annotation object and the dataset, and process the annotation with your custom logic. The run_script command then lets you specify, using syntax similar to the other commands, what subsets to run the script in. For example: from datetime import date from quevedo import Annotation, Dataset # Our custom logic to get tags from the filename def tags_from_filename(filename: str): tags = filename.split('_') if tags[0] == 'something': tags[0] = 'some other thing' return tags def process(a: Annotation, ds: Dataset): if a.meta['author'] is not None: return False # We don't want to modify this annotation a.meta['annotation_date'] = date.today() a.meta['author'] = 'automatic' # The original filename is kept by `add_images` a.tags = tags_from_filename(a.meta['filename']) # We have updated the annotation, so return True for Quevedo to save it return True Another advantage of user scripts is that Quevedo makes them available on the web interface . The top right corner of the annotation page has a listing of functions, including trained neural networks and user scripts, that can be run, allowing annotators to access this functionality directly from the web interface. If the script is used from the web interface, the annotation won't be automatically saved, allowing the user to review the results before clicking save. Modifying Quevedo \u00b6 Quevedo is open source! You can modify and extend it by forking it on GitHub . If you use Quevedo for your research and have ideas for improvement, please do get in touch via GitHub discussions or email.","title":"Quevedo as a library"},{"location":"dev/#quevedo-as-a-library","text":"Quevedo can be used as a command line application to manage a dataset, but it can also be used from other Python code to make programatic access to the dataset more convenient, or in user scripts run by Quevedo on the dataset objects.","title":"Quevedo as a library"},{"location":"dev/#call-from-python","text":"To use Quevedo from other python code, you can import it with import quevedo , or it may be more useful to directly import the Dataset class: from quevedo import Dataset . This class has most of the functionality to deal with Quevedo datasets, including managing the data and the neural networks. There are some examples of use in the examples directory of the repo, and we try to keep the code readable to help understand the library. The full API reference with the different classess and methods can be read here .","title":"Call from python"},{"location":"dev/#user-scripts","text":"Every dataset is different, and dealing with data often needs to have custom procedures and algorithms, specific to the problem at hand. We suggest to place these scripts in the scripts directory of the dataset, to keep them organized. Quevedo can also help run scripts in this directory using the command run_script . With run_script , you don't need to write the boilerplate code of accessing all the annotations, loading their data and image, and saving them. Just provide a process function, which receives an annotation object and the dataset, and process the annotation with your custom logic. The run_script command then lets you specify, using syntax similar to the other commands, what subsets to run the script in. For example: from datetime import date from quevedo import Annotation, Dataset # Our custom logic to get tags from the filename def tags_from_filename(filename: str): tags = filename.split('_') if tags[0] == 'something': tags[0] = 'some other thing' return tags def process(a: Annotation, ds: Dataset): if a.meta['author'] is not None: return False # We don't want to modify this annotation a.meta['annotation_date'] = date.today() a.meta['author'] = 'automatic' # The original filename is kept by `add_images` a.tags = tags_from_filename(a.meta['filename']) # We have updated the annotation, so return True for Quevedo to save it return True Another advantage of user scripts is that Quevedo makes them available on the web interface . The top right corner of the annotation page has a listing of functions, including trained neural networks and user scripts, that can be run, allowing annotators to access this functionality directly from the web interface. If the script is used from the web interface, the annotation won't be automatically saved, allowing the user to review the results before clicking save.","title":"User scripts"},{"location":"dev/#modifying-quevedo","text":"Quevedo is open source! You can modify and extend it by forking it on GitHub . If you use Quevedo for your research and have ideas for improvement, please do get in touch via GitHub discussions or email.","title":"Modifying Quevedo"},{"location":"guide/","text":"Building a Dataset \u00b6 In this guide, we give an example of the commands and steps needed to create and use a Quevedo dataset. It might be helpful to have an environment available where you can test the different commands as you read the guide, and maybe some data that you can import. The process of creating a dataset is often not straightforward or works out on the first step, so don't worry about making mistakes and having to repeat the process (but please don't delete your original data! Keep those safe in some backup or cloud. Quevedo only works with data it has copied, so deleting a Quevedo dataset is safe as long as you keep copies of your original data somewhere). In this guide we use git and DVC to manage repository versions and workflows, but that is not necessary, so you can ignore those steps if you don't use them. Also, we assume Quevedo is installed and available as the quevedo command, if not, please follow the steps here . Create repo \u00b6 To initialize the directory where the data and annotations will live, use the create command: $ quevedo -D dataset_name create It will offer you the opportunity to customize the configuration file for the repository, and set your annotation schema and other information. You can modify it later by editing the config.toml file, or using the config command. From this point on, we will run commands with the dataset directory as working dir, so change to it with cd dataset_name , and we won't need the -D flag anymore. If you want to use git and/or DVC, initialize the repository with the commands: $ git init $ git add -A . $ git commit -m \"Created quevedo repository\" $ dvc init $ git commit -m \"Initialize DVC\" Add data \u00b6 Once we have the structure, the first step is to import our data. This can be done using the add_images command, specifying both the source directory and target subset. To specify the target subset, use the -l flag if it's a logogram subset, or -g for graphemes. You can specify multiple source directories, which will be imported to the same subset. $ quevedo add_images -i source_image_directory -l logogram_set To track these data with DVC, run: $ dvc add logograms/* $ git add logograms/logogram_set.dvc logograms/.gitignore $ git commit -m \"Imported logograms\" Automatically process the data \u00b6 After the images are imported, we may want to use some preliminary automatic processing, like adding some tags that can be determined by code, preprocessing the images, etc. Create a scripts directory if it doesn't exist, and write your code there according to the user script documentation . Then you can run it on the appropriate subsets with the run_script command. $ mkdir scripts $ vim scripts/script_name.py $ quevedo run_script -s script_name -l logogram_set $ dvc add logograms Annotate the data \u00b6 Most of the important information in a dataset, apart to the source data, are the human annotations on these data (otherwise, why bother, right?). Since Quevedo deals with visual data, a graphical interface is needed for annotation, and is provided in the form of a web interface . Remember to first set in the configuration file the annotation schema that you want to use, and then you can lanch the server with the web command. If using git and dvc, remember to add and commit any modifications. $ quevedo web $ dvc add logograms $ git commit -m \"Annotated logograms\" Augment the data \u00b6 Once logograms are manually annotated, Quevedo can extract the graphemes included within them to augment the number of grapheme instances available to us, with the extract command. If what we have are graphemes, we can generate artificial examples of logograms with the generate . With these two commands, the data available for training increase, hopefully improving our algorithms. $ quevedo extract -f logogram_set -t extracted_grapheme_set $ quevedo generate -f grapheme_set -t generated_logogram_set These steps can be added to a DVC pipelines file so that DVC tracks the procedure and the results, and when we distribute the dataset other people can reproduce the full process. To have dvc automatically fill the pipelines file, run the commands with dvc run : $ dvc run -n extract \\ -d logograms/logogram_set \\ -o graphemes/extracted_set \\ quevedo extract -f logogram_set -t extracted_set Splits and folds \u00b6 New in v1.1 In previous versions of Quevedo, train and test splits worked differently. If your dataset is from one of these versions, please use the migrate command to upgrade, and do the partitioning again. For experimentation, we often need to divide our files into a train split on which to train the algorithms, and a test or evaluation split which acts as a stand-in for \"new\" or \"unknown\" data. We may also want to do cross-validation, in which evaluation is done on different runs of the experiment using different train/test partitions. Or in other cases, we may want to exclude some data from all training and testing, making a heldout set which is only looked at in the very end to really evaluate performance. To support different needs from the researchers, the strategy adopted by Quevedo is to assign annotations to \"folds\". Then, groups of folds can be defined either as being used for training, testing, or none. What folds to use, and which to assign to training or testing is set in the configuration file . Quevedo can assign the folds to your annotations randomly so that different folds have the approximate same number of annotations using the split command: Split all logograms into the default folds: $ quevedo split -l _ALL_ Assign all graphemes in \"some_set\" to either fold 0 or 1: $ quevedo split -g some_set -s 0 -e 1 Train and test the neural network \u00b6 Now that our data are properly organized and annotated, we can try training a neural network and evaluating its results. The first step is to prepare the files needed for training, then calling the darknet binary with the train command. Finally, the test command evalates some quick metrics on the trained neural networks, and can also print all predictions so you can use your statistical software to get a more in-depth analysis. The commands can also be chained, so it is enough to run (but it will probably take some time): $ quevedo prepare train test Remember that first you must have installed darknet and configured the neural network in the Quevedo configuration file. If you have more than one network, specify which one to use with the -N flag: $ quevedo -N other_network prepare train test To keep track of the neural network in DVC, we recommend setting preparation, training and test as different stages in the pipeline, so that intermediate artifacts can be cached and the expensive process of training only performed if necessary, and letting DVC track the produced metrics. If you have different networks, they can be set up as template parameters in the pipelines file to keep things DRY . $ dvc run -n prepare_detect \\ -d logograms \\ -o networks/detect/train.txt \\ quevedo -N detect prepare $ dvc run -n train_detect \\ -d networks/detect/train.txt \\ -o networks/detect/darknet_final.weights \\ quevedo -N detect train $ dvc run -n test_detect \\ -d networks/detect/darknet_final.weights \\ -m networks/detect/results.json \\ quevedo -N detect test --results-json Exploitation \u00b6 When doing data science, sometimes it is enough to stop at this step. Data are annotated, neural networks trained, experiments run and conclusions obtained. But often the results are actually useful beyond the science, and we want to somehow peruse them. The trained neural network weights are stored in the network directory , and can be used with darknet in other applications or loaded by OpenCV for example. If access to the dataset data is needed, and not only the training results, Quevedo can also be used as a library from your own code.","title":"Building a Dataset"},{"location":"guide/#building-a-dataset","text":"In this guide, we give an example of the commands and steps needed to create and use a Quevedo dataset. It might be helpful to have an environment available where you can test the different commands as you read the guide, and maybe some data that you can import. The process of creating a dataset is often not straightforward or works out on the first step, so don't worry about making mistakes and having to repeat the process (but please don't delete your original data! Keep those safe in some backup or cloud. Quevedo only works with data it has copied, so deleting a Quevedo dataset is safe as long as you keep copies of your original data somewhere). In this guide we use git and DVC to manage repository versions and workflows, but that is not necessary, so you can ignore those steps if you don't use them. Also, we assume Quevedo is installed and available as the quevedo command, if not, please follow the steps here .","title":"Building a Dataset"},{"location":"guide/#create-repo","text":"To initialize the directory where the data and annotations will live, use the create command: $ quevedo -D dataset_name create It will offer you the opportunity to customize the configuration file for the repository, and set your annotation schema and other information. You can modify it later by editing the config.toml file, or using the config command. From this point on, we will run commands with the dataset directory as working dir, so change to it with cd dataset_name , and we won't need the -D flag anymore. If you want to use git and/or DVC, initialize the repository with the commands: $ git init $ git add -A . $ git commit -m \"Created quevedo repository\" $ dvc init $ git commit -m \"Initialize DVC\"","title":"Create repo"},{"location":"guide/#add-data","text":"Once we have the structure, the first step is to import our data. This can be done using the add_images command, specifying both the source directory and target subset. To specify the target subset, use the -l flag if it's a logogram subset, or -g for graphemes. You can specify multiple source directories, which will be imported to the same subset. $ quevedo add_images -i source_image_directory -l logogram_set To track these data with DVC, run: $ dvc add logograms/* $ git add logograms/logogram_set.dvc logograms/.gitignore $ git commit -m \"Imported logograms\"","title":"Add data"},{"location":"guide/#automatically-process-the-data","text":"After the images are imported, we may want to use some preliminary automatic processing, like adding some tags that can be determined by code, preprocessing the images, etc. Create a scripts directory if it doesn't exist, and write your code there according to the user script documentation . Then you can run it on the appropriate subsets with the run_script command. $ mkdir scripts $ vim scripts/script_name.py $ quevedo run_script -s script_name -l logogram_set $ dvc add logograms","title":"Automatically process the data"},{"location":"guide/#annotate-the-data","text":"Most of the important information in a dataset, apart to the source data, are the human annotations on these data (otherwise, why bother, right?). Since Quevedo deals with visual data, a graphical interface is needed for annotation, and is provided in the form of a web interface . Remember to first set in the configuration file the annotation schema that you want to use, and then you can lanch the server with the web command. If using git and dvc, remember to add and commit any modifications. $ quevedo web $ dvc add logograms $ git commit -m \"Annotated logograms\"","title":"Annotate the data"},{"location":"guide/#augment-the-data","text":"Once logograms are manually annotated, Quevedo can extract the graphemes included within them to augment the number of grapheme instances available to us, with the extract command. If what we have are graphemes, we can generate artificial examples of logograms with the generate . With these two commands, the data available for training increase, hopefully improving our algorithms. $ quevedo extract -f logogram_set -t extracted_grapheme_set $ quevedo generate -f grapheme_set -t generated_logogram_set These steps can be added to a DVC pipelines file so that DVC tracks the procedure and the results, and when we distribute the dataset other people can reproduce the full process. To have dvc automatically fill the pipelines file, run the commands with dvc run : $ dvc run -n extract \\ -d logograms/logogram_set \\ -o graphemes/extracted_set \\ quevedo extract -f logogram_set -t extracted_set","title":"Augment the data"},{"location":"guide/#splits-and-folds","text":"New in v1.1 In previous versions of Quevedo, train and test splits worked differently. If your dataset is from one of these versions, please use the migrate command to upgrade, and do the partitioning again. For experimentation, we often need to divide our files into a train split on which to train the algorithms, and a test or evaluation split which acts as a stand-in for \"new\" or \"unknown\" data. We may also want to do cross-validation, in which evaluation is done on different runs of the experiment using different train/test partitions. Or in other cases, we may want to exclude some data from all training and testing, making a heldout set which is only looked at in the very end to really evaluate performance. To support different needs from the researchers, the strategy adopted by Quevedo is to assign annotations to \"folds\". Then, groups of folds can be defined either as being used for training, testing, or none. What folds to use, and which to assign to training or testing is set in the configuration file . Quevedo can assign the folds to your annotations randomly so that different folds have the approximate same number of annotations using the split command: Split all logograms into the default folds: $ quevedo split -l _ALL_ Assign all graphemes in \"some_set\" to either fold 0 or 1: $ quevedo split -g some_set -s 0 -e 1","title":"Splits and folds"},{"location":"guide/#train-and-test-the-neural-network","text":"Now that our data are properly organized and annotated, we can try training a neural network and evaluating its results. The first step is to prepare the files needed for training, then calling the darknet binary with the train command. Finally, the test command evalates some quick metrics on the trained neural networks, and can also print all predictions so you can use your statistical software to get a more in-depth analysis. The commands can also be chained, so it is enough to run (but it will probably take some time): $ quevedo prepare train test Remember that first you must have installed darknet and configured the neural network in the Quevedo configuration file. If you have more than one network, specify which one to use with the -N flag: $ quevedo -N other_network prepare train test To keep track of the neural network in DVC, we recommend setting preparation, training and test as different stages in the pipeline, so that intermediate artifacts can be cached and the expensive process of training only performed if necessary, and letting DVC track the produced metrics. If you have different networks, they can be set up as template parameters in the pipelines file to keep things DRY . $ dvc run -n prepare_detect \\ -d logograms \\ -o networks/detect/train.txt \\ quevedo -N detect prepare $ dvc run -n train_detect \\ -d networks/detect/train.txt \\ -o networks/detect/darknet_final.weights \\ quevedo -N detect train $ dvc run -n test_detect \\ -d networks/detect/darknet_final.weights \\ -m networks/detect/results.json \\ quevedo -N detect test --results-json","title":"Train and test the neural network"},{"location":"guide/#exploitation","text":"When doing data science, sometimes it is enough to stop at this step. Data are annotated, neural networks trained, experiments run and conclusions obtained. But often the results are actually useful beyond the science, and we want to somehow peruse them. The trained neural network weights are stored in the network directory , and can be used with darknet in other applications or loaded by OpenCV for example. If access to the dataset data is needed, and not only the training results, Quevedo can also be used as a library from your own code.","title":"Exploitation"},{"location":"nets/","text":"Neural networks \u00b6 One of the difficulties of processing visual languages automatically is input, when it is presented in the form of images. Images are represented digitally as collections of pixels, arrayed in memory in a way that makes sense for display and storage, but which is completely disconnected to the meaning these images have to humans. Additionally, if input is hand written, graphemes can present variations which don't affect human understanding but which mean completely different pixel patterns are present. And positioning of objects is again not based on hard rules, but rather on visual interpretation. For these reasons, machine learning techniques developed in the field of computer vision are necessary to adequately process logograms and graphemes. While the researcher can use any toolkit and algorithm they prefer, Quevedo includes a module to facilitate using neural networks with Quevedo datasets. Darknet \u00b6 Darknet is \"an open source neural network framework written in C and CUDA\", developed by the inventor of the YOLO algorithm, Joseph Redmon. This framework includes a binary and linked library which make configuring, training, and using neural networks for computer vision straightforward and efficient. The neural network module included with Quevedo needs darknet to be available. This module automatically prepares network configuration and training files from the metadata in the dataset, and can manage the training and prediction process. Installation \u00b6 We recommend using this fork by Alexey Bochkovskiy . Installation can vary depending on your environment, including the CUDA and OpenCV (optional) libraries installed, but with luck, the following will work: $ git clone https://github.com/AlexeyAB/darknet $ cd darknet <edit the Makefile> $ make In the Makefile, you probably want to enable GPU=1 and CUDNN=1 , otherwise training will be too slow. Depending on the GPU available and CUDA installation, you might need to change the ARCH and NVCC variables. For Quevedo to use Darknet, it is also necessary to set LIBSO=1 so the linked library is built. Finally, if you want to use Darknet's data augmentation, you probably want to set OPENCV=1 to make it faster. After darknet is compiled, a binary (named darknet ) and library ( libdarknet.so in linux) will be built. Quevedo needs to know where these files are, so in the [darknet] section of the configuration, the path to the binary and library must be set. By default, these point to a darknet directory in the current directory. Some additional arguments to the darknet binary for training can be set in the options key. Network configuration \u00b6 Neural networks are ideal to deal with image data, due to their ability to find patterns and their combinations. Quevedo can help with preparing the configuration and training files to train darknet neural networks, can launch the actual training, and can compute evaluation metrics on the resulting network weights. It can also be used as a library to peruse the trained network in an application, not only for research. But no net is a silver bullet for every kind problem, and Quevedo datasets deal with different types of data with complex annotations. Therefore, Quevedo allows different network configurations to be kept in the configuration file, aiding both ensemble applications and exploration of the problem space. To add a neural network configuration to Quevedo, add a section to the config.toml file with the heading [network.<network_name>] . The initial configuration file that Quevedo creates for every dataset contains some examples that can be commented out and modified. Under this heading, different options can be set, like a subject key that gives a brief description of the purpose of the network. The most important configuration option is task , which can take the values classify or detect . Classifier \u00b6 Classifier networks can be used with individual graphemes, and therefore use the data in the grapheme subsets of the dataset. Classify networks see the image as a whole, and try to find the best matching \"class\" from the classes they have been trained in. In Quevedo, classify networks are built with the AlexNet 1 architecture , a CNN well suited to the task. Detector \u00b6 Detector networks try to find objects in an image, and therefore are well suited for finding the different graphemes that make up a logogram. Apart from detecting the boundary boxes of the different objects, they can also do classification of the objects themselves. Depending on the nature and complexity of the data, classification of graphemes can be performed by the same network that detects them within a logogram, or can be better split into a different (or many) classifier networks. The detector network architecture used by Quevedo is YOLOv3 2 . Note After the prepare step of network use, a network configuration file is produced that can be edited to fine-tune the network architecture. Tag selection \u00b6 Since Quevedo datasets support a multi-tag annotation schema, a single \"class\"/\"label\" has to be selected for the networks in order to perform classification (including detector networks, since they have a classification step). By default the first tag of the tag schema will be used, but other tags can be selected by writing tag = \"some_tag_in_the_schema\" . A combination of the tags can be used by listing them, for example tag = [ \"some_tag\", \"some_other_tag\" ] . This will produce a single label for each grapheme by combining the values of the tags with an underscore in between, and train and evaluate the network with that single label. Annotation selection \u00b6 To specify what subsets of data to use for training and testing of a neural network, we can list the names in the subsets option. Additionally, we might want to select some logograms or graphemes to use for a particular network based on the tag values. We can do this by leaving the relevant tags for that network empty, in which case Quevedo will skip the annotation. In classify networks, finer control can also be achieved using a \"filter\" section for the network configuration. This filter accepts a key criterion which determines what tag from the annotation schema to use to select annotations. Then, an include or exclude key can be set to the list of values to filter. When include is used, if a grapheme is tagged with any of the values in the list, it is included for training and test, otherwise it is ignored. With exclude , the reverse happens. Data augmentation \u00b6 Recent versions of darknet include automatic data augmentation that happens \"on the fly\", while the network is being trained. This data augmentation is not based on semantics of the images, but on image properties like contrast or rotation. By slightly and randomly modifying the images that the network is trained on, overfitting can be avoided and better generalization achieved. Some relevant options for grapheme and logogram recognition are supported by Quevedo, and if set in the network configuration will be written into the Darknet configuration file. The header to use is [network.<network_name>.augment] , and the options supported are angle (randomly rotate images up to this amount of degrees), exposure (change brightness of the image), flip (if set to 1 , images are sometimes flipped), and, only for classify networks aspect , which modifies the grapheme width/height relation. In visual writing systems, not all of this transformations are without meaning, so by default they are disabled so that the user can choose which options make sense for their particular use case and data. Usage \u00b6 At the command line \u00b6 Once the network has been configured, the files necessary for training it can be created by running prepare . This will create a directory in the dataset, under networks , with the name of the neural network. By default, Quevedo will use the neural network marked with default = True , so to change to a different one use the option -N <network> (since this is an option common too many commands, it must be used after the quevedo binary name but before the command). Once the directory with all the files needed for training has been created, a simple invocation of train will launch the darknet executable to train the neural network. This command can be interrupted, and if enough time has passed that some partial training weights have been found, it can be later resumed by calling train again (to train from zero, use --no-resume ). The weights obtained by the training process will be stored in the network directory with the name darknet_final.weights . This is a darknet file that can be used independently of Quevedo. To evaluate the results, the test command can be used, which will get the predictions from the net for the annotations marked as \"test\" (see split ) and output some metrics, and optionally the full predictions as a csv file so that fine metrics or visualizations can be computed with something else (like R ). The predict command can be used to directly get the predictions from the neural network for some image, not necessarily one in the dataset. Since commands can be chained, a full pipeline of training and testing the net can be written as: $ quevedo -D path/to/dataset -N network_name prepare train test At the web interface \u00b6 Trained neural networks can also be used on the web interface . Networks for detection will be available for logograms, and classifier ones will be available for graphemes. They will be listed at the top right of the interface. When running them, the current annotation image will be fed to the neural network, and the predictions applied (but not saved until the user presses the save button). This can be used to visualize the neural network results, or to bootstrap manual annotation of logograms and graphemes. Example Configuration \u00b6 # Annotations for each grapheme tag_schema = [ \"COARSE\", \"FINE\", \"ALTERATION\" ] # Configuration for the darknet binary and library [darknet] path = \"darknet/darknet\" library = \"darknet/libdarknet.so\" # By passing the -mjpeg_port argument to darknet, a live image of training # progress can be seen at that port (in localhost) options = [ \"-mjpeg_port\", \"8090\" ] # Detect graphemes in logograms, and also assign a coarse-grained tag [network.logograms] subject = \"Detect and classify coarse grain graphemes in a logogram\" default = true task = \"detect\" tag = \"COARSE\" subsets = [ \"italian\", \"spanish\" ] [network.shapes] subject = \"Classify grapheme shapes\" task = \"classify\" tag = [ \"FINE\" ] subsets = [ \"simple\", \"complicated\" ] # When training grapheme classification, augment the data [network.shapes.augment] angle = 10 exposure = 0.5 # Some graphemes present alterations, annotated in the \"ALTERATION\" tag. We want # to train a specific classifier for these graphemes [network.altered] subject = \"Classify the alterations of 'complicated' graphemes\" task = \"classify\" # The label to train will be a concatenation of the \"fine\" tag and the # \"alteration\" tag = [ \"FINE\", \"ALTERATION\" ] # We have stored the graphemes with these alterations in the \"complicated\" # subset subsets = [ \"complicated\" ] # Only graphemes with the values \"multifaceted\" or \" accentuated\" for the # \"FINE\" tag will be used [network.altered.filter] criterion = \"FINE\" include = [ \"multifaceted\", \"accentuated\" ] Krizhevsky, Alex; Sutskever, Ilya; Hinton, Geoffrey E. (2017). \"ImageNet classification with deep convolutional neural networks\" . Communications of the ACM. 60 (6): 84\u201390. doi:10.1145/3065386. ISSN 0001-0782. S2CID 195908774. \u21a9 Redmon, Joseph and Farhadi, Ali (2018). \"YOLOv3: An Incremental Improvement\" . arXiv preprint arXiv:1804.02767. \u21a9","title":"Neural networks"},{"location":"nets/#neural-networks","text":"One of the difficulties of processing visual languages automatically is input, when it is presented in the form of images. Images are represented digitally as collections of pixels, arrayed in memory in a way that makes sense for display and storage, but which is completely disconnected to the meaning these images have to humans. Additionally, if input is hand written, graphemes can present variations which don't affect human understanding but which mean completely different pixel patterns are present. And positioning of objects is again not based on hard rules, but rather on visual interpretation. For these reasons, machine learning techniques developed in the field of computer vision are necessary to adequately process logograms and graphemes. While the researcher can use any toolkit and algorithm they prefer, Quevedo includes a module to facilitate using neural networks with Quevedo datasets.","title":"Neural networks"},{"location":"nets/#darknet","text":"Darknet is \"an open source neural network framework written in C and CUDA\", developed by the inventor of the YOLO algorithm, Joseph Redmon. This framework includes a binary and linked library which make configuring, training, and using neural networks for computer vision straightforward and efficient. The neural network module included with Quevedo needs darknet to be available. This module automatically prepares network configuration and training files from the metadata in the dataset, and can manage the training and prediction process.","title":"Darknet"},{"location":"nets/#installation","text":"We recommend using this fork by Alexey Bochkovskiy . Installation can vary depending on your environment, including the CUDA and OpenCV (optional) libraries installed, but with luck, the following will work: $ git clone https://github.com/AlexeyAB/darknet $ cd darknet <edit the Makefile> $ make In the Makefile, you probably want to enable GPU=1 and CUDNN=1 , otherwise training will be too slow. Depending on the GPU available and CUDA installation, you might need to change the ARCH and NVCC variables. For Quevedo to use Darknet, it is also necessary to set LIBSO=1 so the linked library is built. Finally, if you want to use Darknet's data augmentation, you probably want to set OPENCV=1 to make it faster. After darknet is compiled, a binary (named darknet ) and library ( libdarknet.so in linux) will be built. Quevedo needs to know where these files are, so in the [darknet] section of the configuration, the path to the binary and library must be set. By default, these point to a darknet directory in the current directory. Some additional arguments to the darknet binary for training can be set in the options key.","title":"Installation"},{"location":"nets/#network-configuration","text":"Neural networks are ideal to deal with image data, due to their ability to find patterns and their combinations. Quevedo can help with preparing the configuration and training files to train darknet neural networks, can launch the actual training, and can compute evaluation metrics on the resulting network weights. It can also be used as a library to peruse the trained network in an application, not only for research. But no net is a silver bullet for every kind problem, and Quevedo datasets deal with different types of data with complex annotations. Therefore, Quevedo allows different network configurations to be kept in the configuration file, aiding both ensemble applications and exploration of the problem space. To add a neural network configuration to Quevedo, add a section to the config.toml file with the heading [network.<network_name>] . The initial configuration file that Quevedo creates for every dataset contains some examples that can be commented out and modified. Under this heading, different options can be set, like a subject key that gives a brief description of the purpose of the network. The most important configuration option is task , which can take the values classify or detect .","title":"Network configuration"},{"location":"nets/#classifier","text":"Classifier networks can be used with individual graphemes, and therefore use the data in the grapheme subsets of the dataset. Classify networks see the image as a whole, and try to find the best matching \"class\" from the classes they have been trained in. In Quevedo, classify networks are built with the AlexNet 1 architecture , a CNN well suited to the task.","title":"Classifier"},{"location":"nets/#detector","text":"Detector networks try to find objects in an image, and therefore are well suited for finding the different graphemes that make up a logogram. Apart from detecting the boundary boxes of the different objects, they can also do classification of the objects themselves. Depending on the nature and complexity of the data, classification of graphemes can be performed by the same network that detects them within a logogram, or can be better split into a different (or many) classifier networks. The detector network architecture used by Quevedo is YOLOv3 2 . Note After the prepare step of network use, a network configuration file is produced that can be edited to fine-tune the network architecture.","title":"Detector"},{"location":"nets/#tag-selection","text":"Since Quevedo datasets support a multi-tag annotation schema, a single \"class\"/\"label\" has to be selected for the networks in order to perform classification (including detector networks, since they have a classification step). By default the first tag of the tag schema will be used, but other tags can be selected by writing tag = \"some_tag_in_the_schema\" . A combination of the tags can be used by listing them, for example tag = [ \"some_tag\", \"some_other_tag\" ] . This will produce a single label for each grapheme by combining the values of the tags with an underscore in between, and train and evaluate the network with that single label.","title":"Tag selection"},{"location":"nets/#annotation-selection","text":"To specify what subsets of data to use for training and testing of a neural network, we can list the names in the subsets option. Additionally, we might want to select some logograms or graphemes to use for a particular network based on the tag values. We can do this by leaving the relevant tags for that network empty, in which case Quevedo will skip the annotation. In classify networks, finer control can also be achieved using a \"filter\" section for the network configuration. This filter accepts a key criterion which determines what tag from the annotation schema to use to select annotations. Then, an include or exclude key can be set to the list of values to filter. When include is used, if a grapheme is tagged with any of the values in the list, it is included for training and test, otherwise it is ignored. With exclude , the reverse happens.","title":"Annotation selection"},{"location":"nets/#data-augmentation","text":"Recent versions of darknet include automatic data augmentation that happens \"on the fly\", while the network is being trained. This data augmentation is not based on semantics of the images, but on image properties like contrast or rotation. By slightly and randomly modifying the images that the network is trained on, overfitting can be avoided and better generalization achieved. Some relevant options for grapheme and logogram recognition are supported by Quevedo, and if set in the network configuration will be written into the Darknet configuration file. The header to use is [network.<network_name>.augment] , and the options supported are angle (randomly rotate images up to this amount of degrees), exposure (change brightness of the image), flip (if set to 1 , images are sometimes flipped), and, only for classify networks aspect , which modifies the grapheme width/height relation. In visual writing systems, not all of this transformations are without meaning, so by default they are disabled so that the user can choose which options make sense for their particular use case and data.","title":"Data augmentation"},{"location":"nets/#usage","text":"","title":"Usage"},{"location":"nets/#at-the-command-line","text":"Once the network has been configured, the files necessary for training it can be created by running prepare . This will create a directory in the dataset, under networks , with the name of the neural network. By default, Quevedo will use the neural network marked with default = True , so to change to a different one use the option -N <network> (since this is an option common too many commands, it must be used after the quevedo binary name but before the command). Once the directory with all the files needed for training has been created, a simple invocation of train will launch the darknet executable to train the neural network. This command can be interrupted, and if enough time has passed that some partial training weights have been found, it can be later resumed by calling train again (to train from zero, use --no-resume ). The weights obtained by the training process will be stored in the network directory with the name darknet_final.weights . This is a darknet file that can be used independently of Quevedo. To evaluate the results, the test command can be used, which will get the predictions from the net for the annotations marked as \"test\" (see split ) and output some metrics, and optionally the full predictions as a csv file so that fine metrics or visualizations can be computed with something else (like R ). The predict command can be used to directly get the predictions from the neural network for some image, not necessarily one in the dataset. Since commands can be chained, a full pipeline of training and testing the net can be written as: $ quevedo -D path/to/dataset -N network_name prepare train test","title":"At the command line"},{"location":"nets/#at-the-web-interface","text":"Trained neural networks can also be used on the web interface . Networks for detection will be available for logograms, and classifier ones will be available for graphemes. They will be listed at the top right of the interface. When running them, the current annotation image will be fed to the neural network, and the predictions applied (but not saved until the user presses the save button). This can be used to visualize the neural network results, or to bootstrap manual annotation of logograms and graphemes.","title":"At the web interface"},{"location":"nets/#example-configuration","text":"# Annotations for each grapheme tag_schema = [ \"COARSE\", \"FINE\", \"ALTERATION\" ] # Configuration for the darknet binary and library [darknet] path = \"darknet/darknet\" library = \"darknet/libdarknet.so\" # By passing the -mjpeg_port argument to darknet, a live image of training # progress can be seen at that port (in localhost) options = [ \"-mjpeg_port\", \"8090\" ] # Detect graphemes in logograms, and also assign a coarse-grained tag [network.logograms] subject = \"Detect and classify coarse grain graphemes in a logogram\" default = true task = \"detect\" tag = \"COARSE\" subsets = [ \"italian\", \"spanish\" ] [network.shapes] subject = \"Classify grapheme shapes\" task = \"classify\" tag = [ \"FINE\" ] subsets = [ \"simple\", \"complicated\" ] # When training grapheme classification, augment the data [network.shapes.augment] angle = 10 exposure = 0.5 # Some graphemes present alterations, annotated in the \"ALTERATION\" tag. We want # to train a specific classifier for these graphemes [network.altered] subject = \"Classify the alterations of 'complicated' graphemes\" task = \"classify\" # The label to train will be a concatenation of the \"fine\" tag and the # \"alteration\" tag = [ \"FINE\", \"ALTERATION\" ] # We have stored the graphemes with these alterations in the \"complicated\" # subset subsets = [ \"complicated\" ] # Only graphemes with the values \"multifaceted\" or \" accentuated\" for the # \"FINE\" tag will be used [network.altered.filter] criterion = \"FINE\" include = [ \"multifaceted\", \"accentuated\" ] Krizhevsky, Alex; Sutskever, Ilya; Hinton, Geoffrey E. (2017). \"ImageNet classification with deep convolutional neural networks\" . Communications of the ACM. 60 (6): 84\u201390. doi:10.1145/3065386. ISSN 0001-0782. S2CID 195908774. \u21a9 Redmon, Joseph and Farhadi, Ali (2018). \"YOLOv3: An Incremental Improvement\" . arXiv preprint arXiv:1804.02767. \u21a9","title":"Example Configuration"},{"location":"web/","text":"Web Interface \u00b6 The data that Quevedo aims to manage are highly visual, and therefore a visual interface can be very useful. Indeed, in the case of annotation, being able to see the target of annotation is fundamental. It is also a task which may be shared between a team, or conducted by people who are not data scientists or engineers and don't feel comfortable with code and a command line interface. Quevedo provides a web interface which can be used to visualize, manage and annotate data in a Quevedo dataset. The web interface has the advantage that is graphical, and it can also be run on a server or some shared computer accesible via the internet so that collaborators can work on the dataset without any infrastructure needs on their part (beyond a modern browser). To use the web interface locally, just run quevedo web . This will launch the server in a local port and open a browser window at the appropriate location. To quit the server, just press Ctrl+C in the terminal window. For more options see the rest of this document, and for usage of the web interface see here . Note The web interface for Quevedo is not intended to be used as a permanent, production website, but rather to provide access to collaborators during a project. Configuration \u00b6 Some options for the web interface can be configured in the dataset configuration file . Since some of these settings may be sensitive, they can be set in the local configuration file if the dataset is going to be distributed publicly. The main configuration is set under the heading web , and the following options can be set: Server options \u00b6 host , port : IP address and port to bind the server to. mount_path : path under which the application will be mounted. secret_key : secret string to sign session cookies. You can generate a random one for your installation with python -c 'from secrets import token_hex; print(token_hex(16))' . Interface options \u00b6 lang : the language for messages in the web interface. Supported values for now are en (english) or es (spanish). public : If true, no login will be required. If false, access will only be provided to logged in users. Users \u00b6 To create a user (needed if the dataset interface is not set to public ) add a heading [web.users.<user_name>] , with the following options: password : hex digest of the sha1 hash of the password for the user. You can generate the hash with the following code: python -c 'import hashlib; print(hashlib.new(\"sha1\", \"thepassword\".encode(\"utf8\")).hexdigest());' . read : subsets that the user has read access to. Can be ALL , NONE , or a list of subsets to allow access to. These strings are actually regexes , so any subset matching them will be available. write : subsets that the user has write access to. Follows the same syntax of read . Write access means adding annotations to a subset, and saving modified annotations to the server (the annotation can be changed locally, but not saved). Assuming we have the sets spanish_a , spanish_b and english_a : read = [ \"spanish\", \"english\" ] will allow access to all sets. read = [ \"spanish_a\" ] will only allow access to the spanish_a set. read = [ \"_a\" ] will allow access to the spanish_a and english_a sets. You can use ^ , $ , and other regex syntax to be more specific. Warning This system of managing users is not very sophisticated, intended to prevent mistakes or unintentional leaks of data rather than actual security. Please don't put here your email or bank passwords, nor ask your collaborators to provide them to you.","title":"Web Interface"},{"location":"web/#web-interface","text":"The data that Quevedo aims to manage are highly visual, and therefore a visual interface can be very useful. Indeed, in the case of annotation, being able to see the target of annotation is fundamental. It is also a task which may be shared between a team, or conducted by people who are not data scientists or engineers and don't feel comfortable with code and a command line interface. Quevedo provides a web interface which can be used to visualize, manage and annotate data in a Quevedo dataset. The web interface has the advantage that is graphical, and it can also be run on a server or some shared computer accesible via the internet so that collaborators can work on the dataset without any infrastructure needs on their part (beyond a modern browser). To use the web interface locally, just run quevedo web . This will launch the server in a local port and open a browser window at the appropriate location. To quit the server, just press Ctrl+C in the terminal window. For more options see the rest of this document, and for usage of the web interface see here . Note The web interface for Quevedo is not intended to be used as a permanent, production website, but rather to provide access to collaborators during a project.","title":"Web Interface"},{"location":"web/#configuration","text":"Some options for the web interface can be configured in the dataset configuration file . Since some of these settings may be sensitive, they can be set in the local configuration file if the dataset is going to be distributed publicly. The main configuration is set under the heading web , and the following options can be set:","title":"Configuration"},{"location":"web/#server-options","text":"host , port : IP address and port to bind the server to. mount_path : path under which the application will be mounted. secret_key : secret string to sign session cookies. You can generate a random one for your installation with python -c 'from secrets import token_hex; print(token_hex(16))' .","title":"Server options"},{"location":"web/#interface-options","text":"lang : the language for messages in the web interface. Supported values for now are en (english) or es (spanish). public : If true, no login will be required. If false, access will only be provided to logged in users.","title":"Interface options"},{"location":"web/#users","text":"To create a user (needed if the dataset interface is not set to public ) add a heading [web.users.<user_name>] , with the following options: password : hex digest of the sha1 hash of the password for the user. You can generate the hash with the following code: python -c 'import hashlib; print(hashlib.new(\"sha1\", \"thepassword\".encode(\"utf8\")).hexdigest());' . read : subsets that the user has read access to. Can be ALL , NONE , or a list of subsets to allow access to. These strings are actually regexes , so any subset matching them will be available. write : subsets that the user has write access to. Follows the same syntax of read . Write access means adding annotations to a subset, and saving modified annotations to the server (the annotation can be changed locally, but not saved). Assuming we have the sets spanish_a , spanish_b and english_a : read = [ \"spanish\", \"english\" ] will allow access to all sets. read = [ \"spanish_a\" ] will only allow access to the spanish_a set. read = [ \"_a\" ] will allow access to the spanish_a and english_a sets. You can use ^ , $ , and other regex syntax to be more specific. Warning This system of managing users is not very sophisticated, intended to prevent mistakes or unintentional leaks of data rather than actual security. Please don't put here your email or bank passwords, nor ask your collaborators to provide them to you.","title":"Users"},{"location":"web_use/","text":"Using the web interface \u00b6 Dataset overview \u00b6 The main page of Quevedo's web interface presents an overview of the dataset, with the different subsets of data listed as folders. On top, general dataset information (from the configuration file) is listed. Data subsets are divided into logogram and grapheme sets, and the number of images in each is noted. Icons are actually Unicode Emojis, so they may differ between platforms. To browse a subset, click on the folder icon. A new (empty) subset can be created with the \"Create new\" button. Subset listing \u00b6 Each subset has its own listing, where the images contained can be quickly previewed. To go back to the general overview, click on the dataset title on the top left or on the \"back to list\" icon. At the end of the listing, an \"Upload new\" button allows adding images to the dataset (for a quicker way, see the command add_images . Clicking on an image, or the \"edit\" icon underneath, takes you to the annotation page. Grapheme annotation \u00b6 The grapheme annotation page shows, under the heading \"Annotation\", the image to annotate to the left, and the tags to the right. The tag headers are the ones set in the dataset configuration file under the option tag_schema , and the values are to be input by the user. On top of this, the metadata associated with this annotation can be edited. Below the annotation, any quick guide text set for annotators in the option annotation_help is displayed. The header contains a number of buttons for navigation and access to annotation functions. The links allow you to navigate up to the overview or subset listing, and the arrows after the annotation id navigate to the previous or next annotation. There is also an undo button that lets you revert any changes from this session (even after saving, but not after navigating away). The save icon sends your changes to the server to be stored in the dataset. In the top right, a list of functions can be selected, and then run using the gears button. The functions will do some transformation on the annotation, and send it to you to be previewed. If the changes are OK, you can click the save button to store them permanently. Note If you are a collaborator, please ask the lead of the project what each of these functions do and when to use them. The functions available are of two kinds: Trained networks \u00b6 When editing graphemes, any neural networks which have been already trained and which have the task classify will be listed. When run, the annotation image will be fed to the neural network, the prediction decoded, and the new tags sent to the web interface. This can be used to both visually check the networks, and to bootstrap manual annotation by using the networks output as a first step. User scripts \u00b6 Any user script under the scripts directory which has a filename starting with grapheme will be listed and available for collaborators to use. Please note that any code in the script will be able to be run by collaborators, so if there are potentially dangerous operations or modifications in the script, don't make it available in the web interface (by changing the name) or properly advise your collaborators. Logogram annotation \u00b6 The page for logogram annotation is very similar to the grapheme annotation page, but the actual annotation area is more complicated. On the right, instead of a list of tags, there is a table. Each row corresponds to a different grapheme found within the logogram, and the columns are the tags from the tag_schema . You can move right and left with Tab and Shift+Tab , and up and down with the arrow keys in the keyboard. To add a grapheme, click on the logogram image and drag the appearing rectangle until it covers the full grapheme area. You can redo the rectangle while this grapheme is selected, and you can always modify the rectangle for a grapheme selecting it again by clicking on its row. To finish the rectangle and deselect, click outside of the logogram image or press Enter . You can remove graphemes by clicking on the Trash button at the right of each row. You can also change the color of the grapheme rectangle with the button on the left of each row, but please note that these colors are not stored by Quevedo, and are only a visual aid to annotation while on the web interface. As with graphemes before, changes can be undone, and must be sent to the server to be stored with the Save button. The networks offered in the functions list on the top right will be those which have the task detect , and the scripts available will be those with filenames starting with logogram .","title":"Using the web interface"},{"location":"web_use/#using-the-web-interface","text":"","title":"Using the web interface"},{"location":"web_use/#dataset-overview","text":"The main page of Quevedo's web interface presents an overview of the dataset, with the different subsets of data listed as folders. On top, general dataset information (from the configuration file) is listed. Data subsets are divided into logogram and grapheme sets, and the number of images in each is noted. Icons are actually Unicode Emojis, so they may differ between platforms. To browse a subset, click on the folder icon. A new (empty) subset can be created with the \"Create new\" button.","title":"Dataset overview"},{"location":"web_use/#subset-listing","text":"Each subset has its own listing, where the images contained can be quickly previewed. To go back to the general overview, click on the dataset title on the top left or on the \"back to list\" icon. At the end of the listing, an \"Upload new\" button allows adding images to the dataset (for a quicker way, see the command add_images . Clicking on an image, or the \"edit\" icon underneath, takes you to the annotation page.","title":"Subset listing"},{"location":"web_use/#grapheme-annotation","text":"The grapheme annotation page shows, under the heading \"Annotation\", the image to annotate to the left, and the tags to the right. The tag headers are the ones set in the dataset configuration file under the option tag_schema , and the values are to be input by the user. On top of this, the metadata associated with this annotation can be edited. Below the annotation, any quick guide text set for annotators in the option annotation_help is displayed. The header contains a number of buttons for navigation and access to annotation functions. The links allow you to navigate up to the overview or subset listing, and the arrows after the annotation id navigate to the previous or next annotation. There is also an undo button that lets you revert any changes from this session (even after saving, but not after navigating away). The save icon sends your changes to the server to be stored in the dataset. In the top right, a list of functions can be selected, and then run using the gears button. The functions will do some transformation on the annotation, and send it to you to be previewed. If the changes are OK, you can click the save button to store them permanently. Note If you are a collaborator, please ask the lead of the project what each of these functions do and when to use them. The functions available are of two kinds:","title":"Grapheme annotation"},{"location":"web_use/#trained-networks","text":"When editing graphemes, any neural networks which have been already trained and which have the task classify will be listed. When run, the annotation image will be fed to the neural network, the prediction decoded, and the new tags sent to the web interface. This can be used to both visually check the networks, and to bootstrap manual annotation by using the networks output as a first step.","title":"Trained networks"},{"location":"web_use/#user-scripts","text":"Any user script under the scripts directory which has a filename starting with grapheme will be listed and available for collaborators to use. Please note that any code in the script will be able to be run by collaborators, so if there are potentially dangerous operations or modifications in the script, don't make it available in the web interface (by changing the name) or properly advise your collaborators.","title":"User scripts"},{"location":"web_use/#logogram-annotation","text":"The page for logogram annotation is very similar to the grapheme annotation page, but the actual annotation area is more complicated. On the right, instead of a list of tags, there is a table. Each row corresponds to a different grapheme found within the logogram, and the columns are the tags from the tag_schema . You can move right and left with Tab and Shift+Tab , and up and down with the arrow keys in the keyboard. To add a grapheme, click on the logogram image and drag the appearing rectangle until it covers the full grapheme area. You can redo the rectangle while this grapheme is selected, and you can always modify the rectangle for a grapheme selecting it again by clicking on its row. To finish the rectangle and deselect, click outside of the logogram image or press Enter . You can remove graphemes by clicking on the Trash button at the right of each row. You can also change the color of the grapheme rectangle with the button on the left of each row, but please note that these colors are not stored by Quevedo, and are only a visual aid to annotation while on the web interface. As with graphemes before, changes can be undone, and must be sent to the server to be stored with the Save button. The networks offered in the functions list on the top right will be those which have the task detect , and the scripts available will be those with filenames starting with logogram .","title":"Logogram annotation"}],"index":{"fieldVectors":[["title/",[0,5.062]],["text/",[1,0.908,2,0.723,3,2.461,4,2.685,5,2.337,6,0.778,7,1.357,8,1.823,9,2.811,10,1.917,11,0.869,12,2.08,13,1.917,14,2.811,15,1.489,16,3.14,17,4.059,18,3.683,19,1.798,20,1.349,21,2.157,22,2.157,23,2.381,24,2.147,25,2.157,26,1.75,27,2.542,28,1.742,29,0.754,30,1.917,31,1.669,32,0.776,33,1.349,34,1.603,35,0.305,36,1.66,37,0.746,38,1.948,39,1.595,40,1.669,41,0.951,42,0.998,43,1.742,44,1.166,45,0.998,46,1.233,47,2.157,48,0.776,49,0.551,50,2.08,51,3.397,52,1.603,53,2.542,54,2.542,55,4.783,56,1.308,57,2.811,58,2.542,59,1.544,60,2.542,61,2.542,62,0.564,63,2.542,64,2.542,65,1.489,66,2.542,67,0.737,68,2.026,69,1.397,70,2.956,71,4.91,72,1.742,73,2.381,74,2.956,75,1.244,76,1.872,77,1.105,78,1.303,79,2.472,80,2.542,81,1.917,82,0.564,83,2.08,84,1.466,85,2.542,86,1.917,87,1.489,88,1.27,89,0.885,90,1.244,91,1.397,92,1.135,93,1.669,94,2.219,95,1.823,96,1.669,97,2.542,98,3.58,99,1.823,100,2.157,101,2.542,102,1.233,103,2.542,104,4.783,105,2.147,106,1.742,107,1.349,108,2.542,109,1.742,110,2.157,111,2.542,112,1.742,113,2.542,114,2.542,115,2.542,116,2.542,117,2.542,118,2.542,119,3.919,120,2.542,121,2.542,122,2.542,123,2.542,124,2.157,125,2.542,126,1.439,127,2.157,128,2.542,129,2.542,130,2.542,131,2.542,132,2.542,133,2.157,134,2.542,135,1.742,136,1.669,137,2.542,138,2.542,139,2.542,140,2.542,141,2.542,142,2.542,143,2.542,144,2.542,145,2.542]],["title/#quevedo",[1,0.537]],["text/#quevedo",[1,0.817,2,0.668,3,2.907,4,3.871,5,2.456,6,0.717,7,1.93,8,4.052,9,4.052,10,4.26,11,1.253,12,2.998,13,4.26,14,4.052,15,3.31,16,3.709,17,4.795,18,3.871,19,2.591,20,2.998,21,4.795,22,4.795,23,3.431,24,3.095]],["title/#features",[25,3.797]],["text/#features",[2,0.494,5,2.88,6,0.84,7,1.533,9,3.876,11,1.199,12,2.867,14,3.876,26,2.413,27,5.403,28,3.702,29,1.603,30,4.075,31,3.548,32,1.311,33,2.867,34,3.409,35,0.649,36,2.289,37,0.773,38,1.716,39,1.603,40,3.548,41,2.021,42,2.122,43,3.702,44,2.479,45,2.122,46,2.621,47,4.586,48,1.07,49,1.172,50,2.349]],["title/#installation",[51,2.302]],["text/#installation",[1,0.851,2,0.726,3,2.715,37,0.616,38,1.675,39,1.565,48,1.045,50,2.294,51,3.915,52,3.328,53,5.276,54,5.276,55,7.086,56,2.715,57,3.785,58,5.276,59,3.205,60,5.276,61,5.276,62,1.17,63,5.276,64,5.276,65,3.092,66,5.276,67,1.53,68,4.206,69,1.881]],["title/#development",[70,3.374]],["text/#development",[1,0.919,2,0.634,4,3.992,5,2.533,19,2.672,37,0.68,51,2.998,70,4.394,71,6.758,72,3.992,73,3.539,74,4.394,75,1.85,76,2.577]],["title/#usage",[77,1.945]],["text/#usage",[1,0.913,2,0.677,6,0.899,24,2.89,38,2.25,39,1.565,51,2.715,57,3.785,69,1.881,75,1.675,76,1.837,78,2.17,79,4.117,80,5.276,81,3.979,82,1.17,83,3.463,84,2.441,85,5.276,86,3.979,87,3.092,88,2.635,89,1.837,90,2.072,91,2.327]],["title/#dependencies",[73,2.718]],["text/#dependencies",[1,0.696,2,0.53,3,2.982,18,3.971,23,3.52,36,2.455,37,0.806,50,2.52,71,5.294,74,4.371,92,2.588,93,3.805,94,3.281,95,4.157,96,3.805,97,5.795,98,5.294,99,4.157,100,4.919,101,5.795,102,2.812,103,5.795]],["title/#about",[]],["text/#about",[1,0.77,2,0.586,16,4.211,17,4.355,18,4.395,26,2.291,37,0.599,38,1.629,39,1.522,94,2.905,98,4.686,104,6.997,105,3.514,106,3.515,107,2.723,108,5.13,109,3.515,110,4.355,111,5.13,112,3.515,113,5.13,114,5.13,115,5.13,116,5.13,117,5.13,118,5.13,119,6.414,120,5.13,121,5.13,122,5.13,123,5.13,124,4.355,125,5.13,126,2.905,127,4.355,128,5.13,129,5.13,130,5.13,131,5.13,132,5.13]],["title/#visse-team",[17,2.877,133,2.877]],["text/#visse-team",[134,6.145,135,4.211,136,4.035,137,6.145,138,6.145,139,6.145,140,6.145,141,6.145,142,6.145,143,6.145,144,6.145,145,6.145]],["title/api/",[146,3.21]],["text/api/",[1,0.386,2,0.749,5,0.26,6,0.759,7,1.843,11,1.14,16,0.393,19,0.513,20,0.836,23,0.363,24,0.328,29,1.72,32,0.925,35,0.907,36,1.791,37,0.622,42,0.235,43,0.41,45,0.439,48,1.307,49,0.697,50,0.486,56,0.308,57,0.429,59,0.363,62,1.116,65,0.351,67,1.315,69,0.705,73,0.363,75,1.288,78,1.635,82,1.14,83,0.318,84,1.373,89,1.203,92,0.267,95,0.429,102,0.29,107,0.318,109,1.079,146,0.429,147,1.584,148,0.41,149,1.022,150,0.451,151,1.254,152,1.993,153,2.12,154,0.923,155,0.655,156,0.282,157,0.598,158,1.419,159,2.197,160,0.892,161,0.844,162,0.253,163,0.267,164,2.707,165,0.508,166,0.598,167,2.088,168,0.598,169,1.118,170,1.118,171,0.598,172,0.598,173,0.598,174,1.299,175,0.598,176,0.598,177,0.598,178,0.598,179,0.598,180,0.598,181,0.598,182,0.598,183,0.598,184,1.255,185,1.674,186,0.949,187,0.598,188,1.678,189,1.978,190,0.508,191,1.118,192,0.598,193,0.598,194,2.129,195,1.241,196,0.339,197,0.613,198,2.197,199,1.76,200,1.908,201,0.633,202,1.492,203,0.598,204,1.862,205,1.022,206,1.928,207,1.566,208,1.577,209,1.337,210,1.559,211,1.022,212,2.56,213,1.022,214,1.022,215,1.022,216,2.11,217,1.863,218,0.96,219,1.577,220,1.022,221,1.022,222,3.497,223,2.244,224,0.363,225,0.685,226,1.763,227,0.99,228,1.134,229,1.299,230,0.451,231,2.11,232,1.889,233,1.832,234,0.393,235,0.677,236,0.677,237,0.706,238,0.892,239,0.613,240,0.598,241,0.559,242,1.438,243,1.438,244,0.499,245,0.598,246,0.508,247,1.098,248,0.863,249,0.508,250,0.677,251,0.802,252,1.022,253,0.598,254,0.363,255,1.188,256,0.351,257,0.451,258,0.598,259,0.655,260,1.185,261,0.598,262,1.337,263,0.706,264,0.598,265,0.598,266,0.351,267,1.157,268,1.337,269,0.351,270,0.844,271,1.492,272,0.339,273,2.403,274,0.41,275,0.328,276,2.225,277,1.188,278,2.021,279,2.977,280,2.258,281,1.079,282,1.337,283,1.559,284,1.475,285,1.616,286,2.477,287,2.516,288,1.628,289,2.178,290,2.178,291,1.908,292,2.404,293,0.892,294,1.763,295,0.677,296,0.677,297,0.598,298,1.034,299,0.282,300,0.673,301,1.782,302,1.782,303,1.782,304,0.589,305,1.12,306,1.337,307,1.188,308,1.188,309,1.337,310,1.337,311,0.787,312,1.079,313,1.022,314,2.027,315,1.022,316,1.419,317,1.577,318,0.677,319,0.451,320,1.677,321,0.677,322,0.677,323,1.492,324,0.451,325,0.598,326,0.598,327,1.118,328,1.118,329,1.118,330,0.598,331,0.508,332,0.598,333,0.598,334,0.598,335,0.598,336,0.508,337,0.393,338,0.598,339,0.451,340,0.598,341,0.508,342,1.463,343,1.079,344,0.787,345,0.377,346,0.508,347,0.508,348,0.598,349,0.598,350,2.086,351,0.598,352,0.766,353,1.034,354,0.477,355,0.451,356,0.706,357,0.598,358,0.598,359,1.022,360,0.722,361,1.337,362,1.022,363,1.492,364,0.892,365,1.018,366,0.594,367,1.079,368,1.807,369,0.677,370,0.706,371,0.598,372,0.41,373,0.706,374,0.655,375,0.508,376,0.598,377,0.451,378,0.677,379,0.508,380,0.508,381,0.679,382,0.41,383,0.598,384,0.508,385,0.844,386,0.598,387,0.949,388,0.451,389,0.477,390,0.598,391,0.41,392,0.598,393,0.598,394,0.451,395,0.274,396,0.508,397,0.598]],["title/api/#reference",[146,3.21]],["text/api/#reference",[]],["title/api/#datasets",[6,0.568]],["text/api/#datasets",[1,0.693,2,0.698,5,1.892,6,0.874,19,1.996,29,1.291,35,0.693,37,0.508,42,1.709,59,2.644,69,1.552,78,1.918,147,2.969,148,2.982,149,3.975,150,3.282,151,2.052,152,1.75,153,3.469,154,2.55,155,2.55,156,2.052,157,4.352,158,3.122,159,2.576,160,3.469,161,3.282,162,1.844,163,1.943,164,2.174,165,3.694,166,4.352,167,2.969,168,4.352,169,5.768,170,5.768,171,4.352,172,4.352,173,4.352,174,3.788,175,4.352,176,4.352,177,4.352,178,4.352,179,4.352,180,4.352,181,4.352,182,4.352,183,4.352,184,0.965,185,1.963,186,4.896,187,4.352,188,3.639,189,6.89,190,3.694,191,5.768,192,4.352,193,4.352]],["title/api/#quevedodatasetdataset",[6,0.568]],["text/api/#quevedodatasetdataset",[1,0.616,2,0.757,6,0.93,11,1.139,29,2.076,35,0.88,48,1.173,49,0.795,67,1.718,75,2.037,78,2.245,82,0.813,84,1.371,89,1.277,151,1.729,152,1.558,153,2.923,159,1.637,164,3.373,194,2.52,195,1.946,196,2.076,197,2.009,198,1.637,199,2.812,200,2.631,201,2.076,202,2.766,203,3.667,204,1.682,205,3.349,206,2.27,207,2.724,208,2.923,209,3.112,210,3.008,211,3.349,212,2.313,213,3.349,214,3.349,215,3.349,216,3.37,217,4.092,218,2.49,219,2.923,220,3.349,221,3.349,222,2.923]],["title/api/#quevedodatasetdatasetcreate",[78,1.487]],["text/api/#quevedodatasetdatasetcreate",[1,0.763,6,0.806,75,2.018,78,2.113,152,1.928,204,2.915]],["title/api/#quevedodatasetdatasetlist_networks",[220,4.087]],["text/api/#quevedodatasetdatasetlist_networks",[6,0.797,48,1.434,67,1.823,89,2.523,152,1.907,223,3.335]],["title/api/#quevedodatasetdatasetget_network",[209,3.797]],["text/api/#quevedodatasetdatasetget_network",[2,0.535,48,1.519,49,1.27,62,1.299,67,2.017,147,2.686,151,2.762,152,1.777,198,2.615,206,2.841,210,3.432,223,3.689,224,3.557,225,2.546]],["title/api/#quevedodatasetdatasetget_single",[211,4.087]],["text/api/#quevedodatasetdatasetget_single",[2,0.668,29,2.166,35,0.931,152,1.714,153,5.424,164,3.398,167,3.501,198,2.522,206,2.165,210,3.987,212,3.564,223,2.998,226,4.26,227,2.393,228,2.741,229,3.709]],["title/api/#quevedodatasetdatasetnew_single",[221,4.087]],["text/api/#quevedodatasetdatasetnew_single",[2,0.685,29,1.976,35,0.899,57,3.914,62,1.21,75,1.732,78,2.391,152,2.182,164,3.327,167,2.808,198,2.436,199,2.989,204,2.503,206,2.091,207,3.535,223,2.895,226,4.115,230,4.115,231,3.582,232,2.808,233,2.895,234,3.582]],["title/api/#quevedodatasetdatasetget_annotations",[208,3.566]],["text/api/#quevedodatasetdatasetget_annotations",[2,0.671,6,0.654,29,2.242,35,0.925,65,3.02,73,3.131,82,1.427,152,1.564,153,5.128,164,3.667,167,3.31,198,2.301,206,1.975,223,2.735,225,2.241,226,3.887,232,2.652,237,4.058,238,5.128,239,3.524,240,5.154,241,2.574,242,4.708,243,4.708,244,2.301,245,5.154]],["title/api/#quevedodatasetdatasetget_subsets",[213,4.087]],["text/api/#quevedodatasetdatasetget_subsets",[2,0.626,6,0.724,29,2.176,35,0.822,84,2.134,89,1.987,152,1.732,164,3.419,167,2.937,198,2.548,202,4.304,206,2.623,214,5.212,223,3.028,226,4.304,228,2.769,246,4.844,247,2.356,248,3.126,249,4.844]],["title/api/#quevedodatasetdatasetcreate_subset",[205,4.087]],["text/api/#quevedodatasetdatasetcreate_subset",[2,0.651,29,2.111,35,0.788,75,2.259,78,2.366,82,1.181,152,1.616,160,4.246,164,3.279,167,2.741,194,2.092,198,2.378,199,3.898,206,2.516,207,3.484,223,2.826,225,2.316,226,4.017,251,3.821,252,4.865,253,5.326,254,3.235,255,4.017,256,3.121,257,4.017,258,5.326]],["title/api/#quevedodatasetdatasetis_train",[219,3.566]],["text/api/#quevedodatasetdatasetis_train",[11,1.41,35,0.763,152,1.928,216,4.173,217,5.066,218,3.083]],["title/api/#quevedodatasetdatasetis_test",[215,4.087]],["text/api/#quevedodatasetdatasetis_test",[11,1.418,35,0.767,216,4.197,217,5.095,218,3.101]],["title/api/#annotations",[35,0.537]],["text/api/#annotations",[1,0.642,2,0.68,35,0.79,37,0.625,45,2.102,92,2.39,159,3.184,164,2.673,167,2.754,184,1.582,195,2.84,241,2.673,242,6.014,243,6.014,247,2.21,259,3.136,260,1.809,261,5.351,262,4.542,263,3.376,264,5.351,265,5.351,266,3.136,267,2.863,268,4.542,269,3.136]],["title/api/#quevedoannotationannotationannotation",[35,0.537]],["text/api/#quevedoannotationannotationannotation",[2,0.745,6,0.505,7,1.973,29,1.181,32,1.225,35,0.93,36,2.62,62,1.205,69,1.419,84,1.489,152,1.648,159,1.777,184,0.883,185,1.354,194,2.731,195,2.112,198,1.777,199,2.18,200,2.855,204,1.826,210,2.332,212,3.902,222,4.331,228,1.931,231,2.613,260,1.01,270,4.097,271,3.002,272,2.254,273,3.64,274,2.727,275,2.18,276,4.664,277,3.002,278,2.727,279,3.567,280,4.611,281,2.727,282,3.378,283,3.183,284,3.427,285,2.18,286,2.855,287,2.727,288,1.877,289,2.511,290,2.511,291,2.855,292,2.795,293,2.254,294,3.002]],["title/api/#quevedoannotationannotationannotationupdate",[292,2.302]],["text/api/#quevedoannotationannotationannotationupdate",[2,0.624,35,0.911,82,1.514,84,2.123,152,2.071,159,2.535,198,2.535,217,4.526,267,2.469,273,3.11,284,3.582,285,3.11,292,2.922,293,3.864,294,4.282,297,5.677,298,4.481,299,2.678,300,1.932]],["title/api/#quevedoannotationannotationannotationto_dict",[291,3.21]],["text/api/#quevedoannotationannotationannotationto_dict",[32,1.273,35,0.772,152,1.95,273,3.522]],["title/api/#quevedoannotationannotationannotationsave",[288,2.11]],["text/api/#quevedoannotationannotationannotationsave",[84,2.404,152,1.95,289,4.055,290,4.055]],["title/api/#quevedoannotationannotationannotationcreate_from",[231,2.938]],["text/api/#quevedoannotationannotationannotationcreate_from",[2,0.654,6,0.861,7,2.182,32,0.95,35,0.859,36,2.605,37,0.56,62,1.364,82,1.505,109,3.289,147,2.202,151,2.264,159,2.143,185,1.633,194,1.885,198,2.143,204,2.202,223,2.547,227,2.034,229,3.152,232,2.47,233,2.547,278,3.289,279,4.038,285,2.63,286,4.411,287,4.214,288,2.264,289,3.028,290,3.028,292,2.47,294,3.62,300,1.633,304,1.795,305,2.718,306,4.074,307,3.62,308,3.62,309,4.074,310,4.074,311,2.397,312,3.289]],["title/api/#quevedoannotationgraphemegrapheme",[184,0.992]],["text/api/#quevedoannotationgraphemegrapheme",[2,0.749,7,1.933,29,1.257,32,1.264,35,0.922,36,2.4,62,0.94,84,1.585,152,1.719,184,1.257,185,2.172,194,2.225,200,3.039,204,1.944,212,4.028,222,4.517,228,2.055,231,2.782,232,2.18,233,2.248,271,3.195,273,3.104,276,4.274,277,3.195,278,2.903,279,3.72,280,4.81,281,2.903,282,3.596,283,3.321,284,2.673,285,2.321,286,3.039,287,2.903,288,1.998,289,2.673,290,2.673,291,3.039,292,2.916,314,3.575,315,3.87,316,3.039,317,3.377]],["title/api/#quevedoannotationannotationannotationsave_1",[288,2.11]],["text/api/#quevedoannotationannotationannotationsave_1",[84,2.404,152,1.95,289,4.055,290,4.055]],["title/api/#quevedoannotationannotationannotationcreate_from_1",[231,2.938]],["text/api/#quevedoannotationannotationannotationcreate_from_1",[2,0.654,6,0.861,7,2.182,32,0.95,35,0.859,36,2.605,37,0.56,62,1.364,82,1.505,109,3.289,147,2.202,151,2.264,152,1.457,185,1.633,194,1.885,198,2.143,204,2.202,223,2.547,227,2.034,229,3.152,232,2.47,233,2.547,278,3.289,279,4.038,285,2.63,286,4.411,287,4.214,288,2.264,289,3.028,290,3.028,292,2.47,294,3.62,300,1.633,304,1.795,305,2.718,306,4.074,307,3.62,308,3.62,309,4.074,310,4.074,311,2.397,312,3.289]],["title/api/#quevedoannotationgraphemegraphemeupdate",[292,2.302]],["text/api/#quevedoannotationgraphemegraphemeupdate",[2,0.646,82,1.334,152,1.825,184,1.334,185,2.403,198,2.685,207,3.191,232,3.094,233,3.191,292,3.094,314,3.794,316,4.314,317,4.794,319,4.535]],["title/api/#quevedoannotationgraphemegraphemeto_dict",[291,3.21]],["text/api/#quevedoannotationgraphemegraphemeto_dict",[32,1.273,35,0.772,159,2.87,273,3.522]],["title/api/#quevedoannotationlogogramlogogram",[260,1.135]],["text/api/#quevedoannotationlogogramlogogram",[2,0.748,7,1.922,20,2.215,29,1.238,32,1.255,35,0.908,36,2.376,62,0.926,84,1.561,89,1.453,152,1.702,154,2.446,184,1.503,194,2.203,197,2.286,200,2.994,204,1.915,212,3.997,222,4.472,228,2.025,231,2.74,232,2.148,233,2.215,260,1.423,273,3.073,276,4.231,277,3.147,278,2.859,279,3.683,280,4.761,281,2.859,282,3.542,283,3.287,284,2.633,285,2.286,286,2.994,287,2.859,288,1.968,289,2.633,290,2.633,291,2.994,292,2.887,314,3.539,315,3.812,316,2.994,317,3.327,320,2.994]],["title/api/#quevedoannotationannotationannotationsave_2",[288,2.11]],["text/api/#quevedoannotationannotationannotationsave_2",[84,2.404,152,1.95,289,4.055,290,4.055]],["title/api/#quevedoannotationannotationannotationcreate_from_2",[231,2.938]],["text/api/#quevedoannotationannotationannotationcreate_from_2",[2,0.654,6,0.861,7,2.182,32,0.95,35,0.859,36,2.605,37,0.56,62,1.364,82,1.505,109,3.289,147,2.202,151,2.264,152,1.457,185,1.633,194,1.885,198,2.143,204,2.202,223,2.547,227,2.034,229,3.152,232,2.47,233,2.547,278,3.289,279,4.038,285,2.63,286,4.411,287,4.214,288,2.264,289,3.028,290,3.028,292,2.47,294,3.62,300,1.633,304,1.795,305,2.718,306,4.074,307,3.62,308,3.62,309,4.074,310,4.074,311,2.397,312,3.289]],["title/api/#quevedoannotationlogogramlogogramupdate",[292,2.302]],["text/api/#quevedoannotationlogogramlogogramupdate",[2,0.675,82,1.286,84,2.168,89,2.018,152,1.758,184,1.533,198,2.588,202,5.211,204,2.659,232,2.982,233,3.075,248,3.175,260,1.47,263,3.656,268,4.919,292,2.982,314,3.656,316,4.157,317,4.62]],["title/api/#quevedoannotationlogogramlogogramto_dict",[291,3.21]],["text/api/#quevedoannotationlogogramlogogramto_dict",[32,1.273,35,0.772,159,2.87,273,3.522]],["title/api/#quevedoannotationlogogramboundgrapheme",[268,3.797]],["text/api/#quevedoannotationlogogramboundgrapheme",[2,0.708,7,2.007,16,3.06,20,2.473,32,0.923,35,0.724,37,0.544,78,1.549,147,2.138,154,2.731,184,1.695,185,2.053,188,3.806,200,3.343,231,3.06,232,2.398,233,2.473,260,1.859,262,3.955,267,2.026,271,4.55,278,3.193,287,3.193,320,4.328,323,3.515,324,3.515,325,4.66,326,4.66,327,6.033,328,6.033,329,6.033,330,4.66,331,3.955,332,4.66,333,4.66,334,4.66,335,4.66,336,3.955,337,3.06,338,4.66,339,3.515,340,4.66]],["title/api/#networks",[48,0.886]],["text/api/#networks",[1,0.768,11,1.133,19,2.343,23,3.102,24,2.798,37,0.596,43,3.499,45,2.006,48,1.562,49,1.108,147,2.343,152,1.55,155,2.993,158,3.664,159,3.268,161,3.852,167,3.291,184,1.133,195,2.71,209,4.335,244,2.28,247,2.109,252,4.665,259,2.993,260,1.296,298,3.353,314,4.035,341,4.335,342,2.164,343,3.499,344,2.551,345,3.222,346,4.335,347,4.335,348,5.107,349,5.107]],["title/api/#quevedonetworknetworknetwork",[48,0.886]],["text/api/#quevedonetworknetworknetwork",[2,0.751,6,0.657,7,1.054,11,1.559,35,0.815,37,0.792,48,1.528,49,1.294,50,1.616,62,1.149,67,1.968,69,1.325,75,1.18,78,1.235,89,1.294,152,1.81,158,2.666,159,1.659,174,2.44,184,0.824,185,1.264,194,2.035,195,1.972,200,2.666,201,2.104,204,1.705,206,1.985,208,2.962,216,3.402,219,2.962,260,0.943,262,3.154,267,1.616,273,2.036,279,2.44,342,2.527,350,3.03,351,3.716,352,3.55,353,2.44,354,2.962,355,2.802,356,3.268,357,3.716,358,3.716,359,3.394,360,1.705,361,3.154,362,3.394,363,3.907,364,2.962,365,1.912,366,1.972,367,2.546,368,3.394]],["title/api/#quevedonetworknetworknetworkis_prepared",[362,4.087]],["text/api/#quevedonetworknetworknetworkis_prepared",[48,1.244,49,1.363,62,1.394,67,1.823,152,1.907,216,4.126,363,4.739,364,5.009]],["title/api/#quevedonetworknetworknetworkis_trained",[219,3.566]],["text/api/#quevedonetworknetworknetworkis_trained",[11,1.394,37,0.733,48,1.244,67,1.823,152,1.907,216,4.126,350,2.806,363,4.739]],["title/api/#quevedonetworknetworknetworkget_annotations",[208,3.566]],["text/api/#quevedonetworknetworknetworkget_annotations",[2,0.642,11,1.32,35,0.896,37,0.694,48,1.178,49,1.29,82,1.32,89,2.072,152,1.805,198,2.656,223,3.157,342,2.973,353,3.906,370,3.753]],["title/api/#quevedonetworknetworknetworkprepare",[366,2.374]],["text/api/#quevedonetworknetworknetworkprepare",[11,1.613,37,0.653,48,1.107,50,2.432,62,1.613,69,1.994,75,2.147,78,1.859,107,2.968,152,1.697,174,3.672,227,2.369,251,4.012,305,3.166,342,2.369,350,2.497,367,3.832,371,5.592,372,3.832,373,3.528,374,3.963,375,4.747,376,5.592,377,4.218]],["title/api/#quevedonetworknetworknetworktrain",[11,0.992]],["text/api/#quevedonetworknetworknetworktrain",[2,0.533,11,1.537,48,1.153,67,1.69,82,1.537,152,1.768,194,2.288,198,2.601,204,2.672,255,4.394,367,3.992,379,4.945,380,4.945,381,4.21,382,3.992,383,5.825,384,4.945,385,5.227]],["title/api/#quevedonetworknetworknetworkpredict",[350,1.998]],["text/api/#quevedonetworknetworknetworkpredict",[2,0.471,7,1.989,11,1.143,20,2.735,37,0.602,48,1.388,62,1.143,67,1.495,89,1.795,149,4.708,152,1.564,159,2.872,184,1.143,185,1.754,188,4.058,194,2.024,198,2.301,206,1.975,223,2.735,247,2.895,248,2.824,267,2.241,273,2.824,279,3.384,320,3.698,343,3.532,344,2.574,350,3.374,365,3.31,373,3.252,386,5.154,387,5.46,388,3.887]],["title/api/#quevedonetworknetworknetworktest",[342,1.895]],["text/api/#quevedonetworknetworknetworktest",[2,0.517,35,0.817,37,0.852,48,1.347,56,2.907,83,2.998,102,2.741,152,2.216,292,2.907,342,2.393,350,3.038,361,4.795,365,2.907,368,6.215,370,3.564,389,4.503,390,5.649,391,3.871,392,5.649,393,5.649]],["title/api/#quevedonetworknetworknetworkauto_annotate",[359,4.087]],["text/api/#quevedonetworknetworknetworkauto_annotate",[2,0.511,35,0.873,37,0.848,48,1.496,158,4.012,184,1.241,185,2.301,198,2.497,199,3.064,255,4.218,320,4.012,343,3.832,344,2.793,350,2.497,353,3.672,360,3.103,361,4.747,394,4.218,395,2.566,396,4.747,397,5.592]],["title/cli/",[39,0.809,90,0.866,398,1.721]],["text/cli/",[1,0.747,2,0.607,4,0.692,5,1.296,6,0.827,7,1.654,8,0.724,9,0.724,11,1.447,12,0.958,15,0.591,22,0.857,26,0.451,29,1.386,32,0.819,33,0.536,35,0.685,37,0.745,38,1.484,39,0.727,41,0.675,42,0.396,44,0.463,45,1.625,46,1.663,48,1.197,49,1.178,52,1.545,57,0.724,62,1.237,67,1.355,69,0.874,75,1.554,76,1.705,77,2.482,78,1.553,79,1.545,82,1.529,83,0.536,84,0.916,86,1.848,87,1.436,88,0.504,90,1.554,91,2.036,94,0.571,95,0.724,105,0.989,106,0.692,107,1.582,135,1.679,136,1.958,147,1.124,151,0.852,152,0.548,156,0.476,159,0.806,162,0.765,163,1.701,164,0.504,174,1.609,184,1.432,185,0.343,194,1.737,199,2.087,201,2.157,204,0.828,206,0.692,207,2.195,212,1.139,218,2.471,225,1.491,227,1.038,228,1.189,232,0.519,233,0.536,234,1.186,238,1.439,239,0.553,241,0.504,244,2.186,246,3.233,247,1.416,248,0.553,251,0.724,254,1.811,256,1.747,257,2.873,260,1.6,266,0.591,267,0.785,272,1.022,275,0.989,276,0.761,281,0.692,283,1.058,293,3.232,300,1.942,304,1.905,305,1.022,311,0.504,313,1.649,319,2.873,323,0.761,331,0.857,336,0.857,342,1.98,350,2.186,353,0.663,360,0.463,365,2.129,366,1.819,370,1.139,374,0.591,381,1.097,385,1.362,398,1.139,399,1.009,400,1.009,401,2.043,402,1.186,403,1.649,404,0.761,405,1.009,406,0.663,407,0.857,408,2.079,409,1.009,410,0.805,411,3.301,412,2.882,413,3,414,2.77,415,1.545,416,1.439,417,0.989,418,3.03,419,1.237,420,1.649,421,1.679,422,1.295,423,1.649,424,1.679,425,2.139,426,2.043,427,1.545,428,1.545,429,0.805,430,0.761,431,2.079,432,0.637,433,1.757,434,0.571,435,0.761,436,0.692,437,1.009,438,0.857,439,1.009,440,1.009,441,0.857,442,1.009,443,2.251,444,1.848,445,1.806,446,1.806,447,1.848,448,0.805,449,1.679,450,0.958,451,1.009,452,0.663,453,1.533,454,0.857,455,0.857,456,2.377,457,1.022,458,1.806,459,1.009,460,1.009,461,0.613,462,1.009,463,1.237,464,1.806,465,2.45,466,1.009,467,0.692,468,1.009,469,1.806,470,0.857,471,0.761,472,1.009,473,1.009,474,1.439,475,0.724,476,1.009,477,1.009,478,0.857,479,0.637,480,0.571,481,1.009,482,0.761,483,1.009,484,0.663,485,0.761,486,0.761,487,0.857,488,1.009,489,1.009,490,1.009,491,0.805,492,1.806,493,1.009,494,1.009,495,0.857,496,3.233,497,2.91,498,0.761,499,1.009,500,0.857,501,1.009,502,1.058,503,0.857,504,0.663,505,0.663,506,1.009,507,0.663,508,0.761,509,0.663,510,1.533,511,2.079,512,1.009,513,1.097,514,1.009,515,1.009,516,1.009,517,0.857,518,1.009,519,1.009,520,0.761,521,0.857,522,0.536,523,0.857,524,0.761,525,1.009,526,1.009]],["title/cli/#command-line-interface",[39,0.809,90,0.866,398,1.721]],["text/cli/#command-line-interface",[1,0.746,4,2.336,5,2.12,6,0.943,7,1.614,8,2.446,9,2.446,11,1.561,12,1.809,26,1.522,32,1.127,35,0.683,37,0.821,38,1.548,39,1.012,41,1.275,45,1.339,46,1.654,48,1.425,49,1.057,62,1.082,67,1.983,69,1.216,75,1.548,76,2.163,77,1.483,78,1.892,79,3.59,82,1.082,84,1.275,86,2.572,90,1.548,91,1.216,107,3.02,147,1.564,162,1.444,163,1.522,184,1.082,194,1.915,199,1.868,201,2.761,204,1.564,218,2.366,225,1.483,244,2.541,260,1.237,272,1.931,293,1.931,304,1.824,313,4.454,342,2.066,350,2.177,366,2.587,399,3.41,400,3.41,401,3.9,402,2.239,403,3.115,404,2.572,405,3.41,406,2.239,407,2.894,408,2.894,409,3.41,410,2.718,411,1.931,412,2.366,413,2.509,414,1.654,415,2.151,416,2.718,417,1.868,418,3.341,419,2.336,420,3.115,421,2.336,422,2.446,423,3.115,424,2.336,425,2.446,426,2.336,427,2.151,428,2.151]],["title/cli/#config",[201,2.533]],["text/cli/#config",[1,0.671,6,0.709,37,0.653,49,1.467,62,1.241,77,2.432,82,1.5,87,3.277,90,1.776,91,1.994,94,3.166,201,3.166,304,2.092,360,2.566,370,3.528,411,3.166,412,2.713,413,2.878,414,2.713,417,3.064,429,4.458,430,4.218,431,6.171,432,3.528,433,4.012,434,3.166]],["title/cli/#info",[86,3.374]],["text/cli/#info",[1,0.734,6,0.775,77,2.658,82,1.582,84,2.286,86,4.61,91,2.179,244,2.729,412,2.965,413,3.145,414,2.965,420,5.583]],["title/cli/#create",[78,1.487]],["text/cli/#create",[1,0.856,6,0.775,77,2.658,78,2.37,82,1.582,91,2.179,204,2.804,412,2.965,413,3.145,414,2.965]],["title/cli/#add_images",[415,2.822]],["text/cli/#add_images",[1,0.535,6,0.565,7,2.222,52,2.811,69,1.589,75,1.86,77,1.938,82,1.3,91,1.589,95,3.197,136,2.926,156,2.102,163,3.226,184,1.3,194,1.75,199,2.441,207,3.109,212,3.696,225,1.938,246,6.295,254,2.707,256,2.611,257,4.419,260,1.486,275,3.21,281,3.053,300,2.366,304,2.191,319,4.419,411,3.318,412,2.162,413,2.293,414,2.162,415,2.811,416,3.552,435,3.361,436,3.053,437,4.456,438,3.782,439,4.456,440,4.456,441,3.782,442,4.456,443,2.926,444,3.361,445,5.859,446,5.859]],["title/cli/#split",[218,2.171]],["text/cli/#split",[1,0.445,2,0.589,6,0.755,11,1.147,15,2.17,29,1.099,35,0.814,37,0.841,41,1.385,49,1.398,62,1.147,76,1.29,77,1.61,82,1.321,90,1.176,91,1.321,136,3.394,162,1.569,164,1.85,184,1.321,218,3.496,225,1.61,228,2.889,238,2.952,247,2.134,260,1.51,267,2.247,293,4.328,300,2.306,304,1.385,323,2.793,336,3.143,342,2.19,374,2.17,411,2.927,412,1.797,413,1.906,414,1.797,425,4.271,426,3.542,433,3.708,443,3.394,447,3.898,448,2.952,449,3.542,450,1.965,451,3.703,452,2.432,453,4.387,454,3.143,455,3.143,456,2.952,457,2.097,458,5.169,459,3.703,460,3.703,461,2.25,462,3.703,463,2.538,464,5.169,465,5.954,466,3.703,467,2.538,468,3.703,469,5.169,470,3.143]],["title/cli/#extract",[418,3.066]],["text/cli/#extract",[1,0.586,29,2.136,35,0.821,77,2.124,82,1.379,84,1.827,90,1.551,91,1.742,135,3.347,184,1.734,199,2.676,207,3.3,227,2.069,234,3.207,238,3.893,247,2.017,254,2.967,256,2.862,257,4.689,260,1.735,266,2.862,304,2.326,319,4.689,353,3.207,411,3.521,412,2.37,413,2.513,414,2.37,418,5.095,444,3.684,456,3.893,471,3.684,472,4.884,473,4.884,474,3.893]],["title/cli/#generate",[244,1.998]],["text/cli/#generate",[1,0.55,11,1.472,29,1.969,32,0.908,33,2.432,37,0.775,45,2.344,49,0.994,62,1.017,77,1.993,78,1.524,82,1.324,90,1.455,91,1.634,135,3.141,184,1.56,199,3.27,207,3.522,234,3.01,244,3.255,251,3.288,254,2.784,256,2.686,257,4.502,260,1.931,293,3.758,300,1.56,304,2.232,319,4.502,411,3.38,412,2.224,413,2.359,414,2.224,419,3.141,426,3.141,444,3.457,456,3.654,474,3.654,475,3.288,476,4.584,477,4.584,478,3.891,479,2.892,480,2.595]],["title/cli/#prepare",[366,2.374]],["text/cli/#prepare",[1,0.655,2,0.499,6,0.692,11,1.478,37,0.637,48,1.319,49,1.183,62,1.478,69,1.945,75,1.732,77,2.372,78,1.814,82,1.478,91,1.945,105,2.989,159,2.436,174,4.722,185,1.856,194,2.143,206,2.091,227,2.311,366,2.895,401,3.738,402,3.582,412,2.647,413,2.808,414,2.647,456,4.349,481,5.456]],["title/cli/#train",[11,0.992]],["text/cli/#train",[1,0.652,2,0.496,11,1.702,48,1.315,49,1.178,62,1.204,67,1.575,75,1.724,76,2.313,77,2.361,78,1.805,82,1.473,90,1.724,91,1.936,199,2.974,227,2.3,366,2.881,381,4.035,385,5.01,412,2.634,413,2.794,414,2.634,447,4.095,482,4.095,483,5.429,484,3.565,485,4.095]],["title/cli/#predict",[350,1.998]],["text/cli/#predict",[1,0.707,7,2.108,11,1.306,37,0.687,48,1.166,52,3.714,67,1.708,77,2.56,82,1.547,91,2.099,194,2.312,350,3.318,412,2.856,413,3.029,414,2.856]],["title/cli/#test",[342,1.895]],["text/cli/#test",[1,0.505,2,0.621,11,1.411,12,2.231,22,3.569,35,0.505,37,0.491,48,1.403,62,1.411,67,1.22,75,2.02,77,1.828,82,1.251,83,2.231,88,2.1,90,1.335,91,1.499,106,2.881,135,2.881,159,1.877,218,2.04,225,1.828,247,1.736,254,2.554,272,2.381,283,3.304,300,1.431,304,1.573,342,2.879,350,3.035,365,3.835,370,2.652,398,2.652,403,3.841,408,3.569,412,2.735,413,2.164,414,2.04,427,3.557,428,3.557,486,3.171,487,3.569,488,4.204,489,4.204,490,4.204,491,3.352,492,5.638,493,4.204,494,4.204,495,3.569,496,6.192,497,6.016,498,3.171,499,4.204,500,3.569,501,4.204]],["title/cli/#web",[38,1.421]],["text/cli/#web",[1,0.555,2,0.423,5,2.609,6,0.845,35,0.72,37,0.539,38,2.379,39,1.371,42,1.815,44,2.12,49,1.301,62,1.331,76,1.61,77,2.01,82,1.331,87,3.517,91,1.648,105,2.532,147,2.12,151,2.83,184,1.025,194,2.357,201,2.617,225,2.01,241,2.308,248,2.532,256,2.708,260,1.172,311,2.308,331,3.923,408,3.923,411,3.773,412,2.242,413,2.378,414,2.242,443,3.035,502,3.517,503,3.923,504,3.035,505,3.035,506,4.622,507,3.035,508,3.486,509,3.035,510,5.093,511,5.656,512,4.622,513,3.645,514,4.622,515,4.622]],["title/cli/#run_script",[424,3.066]],["text/cli/#run_script",[1,0.74,6,0.782,29,1.43,32,0.955,45,2.814,46,3.477,52,3.041,57,3.458,75,1.531,76,2.148,77,2.096,82,1.368,90,1.531,91,1.719,136,3.165,147,2.212,152,1.871,184,1.508,194,1.893,206,1.847,232,2.481,233,2.558,239,2.641,247,1.991,260,1.725,276,3.636,300,2.438,305,3.491,411,3.849,412,2.339,413,2.481,414,2.339,424,3.303,443,3.165,449,3.303,463,3.303,516,4.821,517,4.092,518,4.821,519,4.821,520,3.636]],["title/cli/#migrate",[421,3.066]],["text/cli/#migrate",[1,0.689,6,0.728,32,1.36,35,0.689,77,2.494,82,1.523,91,2.045,107,3.044,201,3.248,412,2.783,413,2.952,414,2.783,421,3.93,422,4.115,423,5.239,450,3.044,457,3.248,521,4.868,522,3.044,523,4.868,524,4.326,525,5.736,526,5.736]],["title/concepts/",[1,0.407,6,0.43]],["text/concepts/",[1,0.79,2,0.738,3,0.759,4,1.724,5,1.094,6,0.822,7,1.689,8,1.805,10,1.113,11,0.558,12,0.783,20,0.783,28,1.724,29,0.747,32,0.864,34,2.076,35,0.765,36,2.364,37,0.651,38,0.468,39,0.438,41,2.162,44,2.003,45,0.988,46,2.462,48,1.005,49,0.714,59,0.896,62,1.386,67,0.428,69,0.526,73,1.529,75,1.698,84,1.455,91,0.897,99,1.058,106,1.011,124,1.252,126,1.863,154,1.475,155,1.475,156,0.696,162,2.265,164,1.257,167,1.295,184,1.53,185,1.819,186,1.252,188,0.931,195,2.064,197,2.391,206,1.673,210,1.475,227,1.648,228,1.221,230,1.113,237,0.931,241,0.737,247,2.096,254,0.896,259,1.928,260,1.692,266,0.865,267,0.642,269,0.865,270,1.113,273,1.379,274,1.011,275,0.808,277,1.113,281,1.724,283,1.928,284,0.931,285,0.808,299,0.696,300,0.502,304,1.231,308,1.113,311,0.737,341,1.252,355,1.113,360,1.155,364,1.176,372,1.724,373,2.076,381,0.896,387,2.136,395,0.677,406,2.553,416,1.176,418,1.011,428,0.931,432,1.588,436,2.665,452,2.161,454,1.252,457,1.425,467,1.011,471,1.113,478,1.252,479,0.931,486,1.113,500,1.252,513,2.362,527,2.793,528,1.252,529,1.475,530,2.933,531,1.252,532,2.785,533,2.79,534,2.299,535,3.006,536,1.379,537,3.552,538,3.006,539,2.517,540,1.252,541,1.475,542,1.475,543,3.291,544,1.252,545,1.475,546,1.475,547,1.252,548,1.475,549,1.475,550,1.475,551,1.475,552,1.475,553,1.475,554,1.475,555,1.475,556,2.517,557,1.113,558,3.987,559,2.299,560,2.517,561,3.291,562,1.475,563,2.006,564,1.805,565,1.475,566,1.475,567,1.475,568,1.475,569,1.475,570,0.835,571,1.475,572,1.475,573,1.475,574,1.113,575,1.724,576,1.475,577,1.113,578,1.475,579,1.475,580,1.475,581,1.113,582,1.475,583,1.475,584,1.252,585,1.252,586,1.475,587,1.252,588,1.113,589,1.113,590,1.475,591,1.113,592,1.113,593,1.011,594,1.475,595,1.475,596,1.475,597,1.898,598,1.011,599,1.252,600,1.252,601,2.299,602,1.252,603,1.475,604,1.113,605,1.252,606,2.652,607,2.558,608,3.291,609,1.113,610,1.475,611,1.475,612,2.299,613,0.865,614,1.475,615,0.969,616,1.475,617,1.475,618,2.136,619,1.475,620,1.475,621,1.011,622,1.475,623,2.517,624,2.517,625,2.517,626,1.475,627,1.475,628,2.517,629,1.475,630,1.475,631,1.252,632,1.475,633,2.299,634,1.475,635,2.006,636,1.252,637,1.011]],["title/concepts/#quevedo-datasets",[1,0.407,6,0.43]],["text/concepts/#quevedo-datasets",[1,0.559,2,0.716,6,0.591,7,2.007,8,3.343,10,3.515,35,0.559,36,2.997,37,0.544,44,2.138,91,1.662,162,2.834,195,2.473,237,2.94,270,3.515,285,2.553,373,2.94,513,2.831,527,3.955,528,3.955,529,4.66,530,4.55,531,3.955,532,2.731,533,3.343,534,4.257,535,5.511,536,2.553,537,6.111,538,5.511,539,6.033,540,3.955,541,4.66,542,4.66,543,6.69,544,3.955,545,4.66,546,4.66,547,3.955,548,4.66,549,4.66,550,4.66,551,4.66,552,4.66,553,4.66,554,4.66]],["title/concepts/#logograms-and-graphemes",[184,0.752,260,0.86]],["text/concepts/#logograms-and-graphemes",[1,0.796,2,0.363,5,1.724,6,0.503,7,1.882,8,2.845,32,0.785,34,2.502,36,2.296,37,0.463,41,1.483,44,2.486,62,0.88,73,2.409,106,2.718,126,2.246,155,2.324,162,2.296,164,2.707,167,2.041,184,1.701,186,3.366,188,2.502,195,2.105,206,1.52,259,2.324,260,1.862,269,2.324,277,2.991,304,1.483,355,2.991,360,1.819,364,3.162,452,2.604,471,2.991,478,3.366,513,3.75,530,4.087,532,3.618,534,3.623,535,3.623,537,3.623,538,3.623,555,3.966,556,5.419,557,2.991,558,5.639,559,3.623,560,5.419,561,6.173,562,3.966,563,4.32,564,2.845,565,3.966,566,3.966,567,3.966,568,3.966,569,3.966,570,2.246,571,3.966,572,3.966,573,3.966,574,2.991,575,3.713,576,3.966,577,2.991,578,3.966,579,3.966,580,3.966,581,2.991,582,3.966,583,3.966,584,3.366,585,3.366]],["title/concepts/#annotation-of-logograms-and-graphemes",[35,0.327,184,0.605,260,0.692]],["text/concepts/#annotation-of-logograms-and-graphemes",[1,0.488,6,0.699,32,0.805,35,0.841,36,1.723,37,0.475,38,1.291,39,1.207,41,2.508,44,2.529,45,1.597,59,2.47,84,2.339,99,2.918,126,2.303,154,3.23,156,1.918,162,1.723,184,1.603,185,2.557,195,2.158,197,3.02,206,1.558,210,3.23,227,1.723,241,2.031,247,2.276,260,1.833,266,2.383,267,1.768,273,3.02,275,2.228,284,2.566,304,2.062,308,3.067,311,2.031,341,3.452,360,1.866,373,3.478,387,4.679,406,2.67,452,2.67,457,2.303,486,3.067,527,3.452,532,3.23,533,2.918,536,2.228,558,5.035,564,2.918,586,4.067,587,3.452,588,3.067,589,3.067,590,4.067,591,3.067,592,3.067,593,2.787,594,4.067,595,4.067,596,3.23,597,4.158,598,2.787,599,3.452,600,3.452]],["title/concepts/#dataset-structure",[6,0.43,34,2.138]],["text/concepts/#dataset-structure",[1,0.757,2,0.757,3,1.404,4,1.869,5,1.186,6,0.76,7,1.417,11,0.918,12,1.448,20,1.448,28,2.834,29,1.227,32,0.819,34,1.721,35,0.757,36,1.156,37,0.651,41,2.086,45,1.071,46,3.06,48,1.298,49,0.897,62,1.563,67,0.791,69,0.973,73,1.657,75,2.081,84,1.02,124,2.315,126,1.544,162,1.752,167,1.404,184,0.918,195,1.448,197,2.737,206,1.915,227,2.117,228,2.007,230,2.057,247,2.475,254,1.657,259,2.424,260,1.049,281,2.834,283,2.928,299,1.286,300,0.928,381,1.657,395,1.251,406,1.791,416,2.174,418,1.869,428,1.721,432,2.609,436,3.424,454,2.315,457,1.544,467,1.869,479,1.721,500,2.315,527,2.315,533,1.957,559,2.492,601,2.492,602,2.315,603,2.728,604,2.057,605,2.315,606,1.657,607,1.598,608,4.996,609,2.057,610,2.728,611,2.728,612,2.492,613,1.598,614,2.728,615,1.791,616,2.728,617,2.728,618,3.511,619,2.728,620,2.728,621,1.869,622,2.728,623,4.136,624,4.136,625,4.136,626,2.728,627,2.728,628,4.136,629,2.728,630,2.728,631,2.315,632,2.728]],["title/concepts/#interaction-with-git-and-dvc",[606,1.657,607,1.599,633,2.492]],["text/concepts/#interaction-with-git-and-dvc",[1,0.847,2,0.478,4,3.581,6,0.936,32,1.035,35,0.627,36,2.214,37,0.757,41,1.955,46,2.536,49,1.134,62,1.439,75,1.66,91,1.864,155,3.063,274,3.581,372,4.446,406,4.26,436,3.581,452,3.432,533,3.749,601,4.774,606,4.286,607,4.135,612,4.774,633,4.774,634,5.226,635,5.172,636,4.436,637,3.581]],["title/config/",[6,0.43,49,0.735]],["text/config/",[1,0.611,2,0.757,3,1.345,6,0.712,10,0.825,11,0.702,13,0.825,14,0.785,16,0.718,19,0.502,20,1.387,23,0.665,24,1.733,25,1.647,26,1.412,29,1.188,30,0.825,31,1.274,32,0.518,33,1.03,34,0.69,35,0.674,37,0.744,38,1.376,39,0.938,41,1.183,42,0.762,45,0.43,48,0.858,49,1.4,50,1.574,51,0.998,52,0.69,62,1.276,65,1.137,67,0.317,72,1.329,75,0.347,76,0.381,78,0.364,82,1.08,83,1.921,84,0.726,87,0.641,88,1.306,89,1.608,90,0.616,91,0.39,92,0.866,94,0.62,95,0.785,100,1.647,102,0.941,107,1.03,110,0.929,112,0.75,146,0.785,147,0.502,148,0.75,151,0.516,156,0.516,159,0.866,162,0.822,163,1.167,167,0.563,184,1.432,185,2.324,188,0.69,190,0.929,194,0.43,195,0.581,197,1.063,201,0.62,202,0.825,206,1.002,210,1.137,218,1.268,224,1.179,225,1.884,227,0.464,228,0.941,234,0.718,237,0.69,239,0.599,241,1.808,244,1.788,247,1.079,248,0.599,249,0.929,259,0.641,260,0.918,267,1.574,271,1.971,273,1.733,274,0.75,275,1.063,283,0.641,284,1.649,293,2.454,299,1.888,300,0.889,304,1.498,320,0.785,337,1.274,342,0.822,344,1.58,346,0.929,356,2.283,360,0.502,363,0.825,370,0.69,374,0.641,377,0.825,391,0.75,395,1.199,402,1.274,404,0.825,411,0.62,417,1.063,419,1.329,421,0.75,422,0.785,430,0.825,431,0.929,432,1.224,434,1.099,436,2.167,444,0.825,448,1.547,449,0.75,461,1.179,475,0.785,480,0.62,484,1.274,502,0.641,507,0.718,508,0.825,509,0.718,513,0.665,522,0.581,532,1.532,533,0.785,536,1.983,544,1.647,557,0.825,570,0.62,575,0.75,577,0.825,592,0.825,596,1.854,597,0.825,613,2.539,615,1.274,621,1.329,637,0.75,638,1.094,639,0.929,640,0.929,641,1.094,642,1.392,643,1.094,644,2.167,645,1.094,646,1.094,647,1.094,648,1.647,649,0.929,650,1.772,651,0.785,652,2.084,653,2.084,654,0.929,655,1.547,656,2.388,657,1.094,658,1.463,659,1.094,660,0.929,661,0.929,662,1.647,663,1.094,664,0.929,665,1.094,666,0.929,667,0.718,668,2.388,669,2.388,670,0.929,671,1.094,672,0.825,673,1.094,674,2.219,675,2.219,676,0.929,677,1.94,678,1.94,679,0.929,680,1.094,681,0.825,682,1.094,683,0.825,684,0.872,685,0.929,686,1.094,687,0.929,688,1.094,689,1.094,690,1.094,691,1.647,692,1.094,693,1.094,694,0.929,695,0.929,696,1.094,697,0.929,698,0.929,699,1.094,700,1.716,701,1.921,702,1.94,703,0.929,704,2.084,705,1.094,706,0.929,707,1.094,708,1.547,709,1.094,710,1.971,711,1.094,712,1.094,713,0.872,714,0.929,715,1.094,716,1.094,717,0.872,718,1.94,719,1.094,720,0.929,721,0.929,722,1.094,723,0.929,724,0.929,725,0.929,726,2.084,727,1.463,728,0.929,729,0.929,730,0.929,731,0.929,732,1.094,733,1.094,734,0.929,735,0.929,736,0.929,737,1.094,738,1.94,739,1.94,740,1.647,741,1.094,742,1.094,743,1.094,744,1.94,745,1.94,746,1.094,747,1.094,748,2.614,749,2.73,750,2.614,751,1.647,752,1.094,753,1.094,754,1.647,755,0.929,756,2.084,757,1.647,758,1.94,759,1.094,760,0.929,761,0.825,762,1.094]],["title/config/#dataset-configuration",[6,0.43,49,0.735]],["text/config/#dataset-configuration",[1,0.83,2,0.457,6,0.8,13,3.766,20,3.346,23,3.033,49,1.624,62,1.661,87,2.926,90,1.585,92,2.229,94,2.827,100,5.352,151,2.355,201,2.827,206,1.913,241,2.494,395,2.291,411,2.827,417,3.454,430,3.766,431,4.238,432,3.978,436,4.32,513,3.033,613,3.695,615,3.278,621,4.32,637,3.421,638,4.993,639,4.238,640,4.238,641,4.993,642,4.523,643,4.993]],["title/config/#local-configuration",[49,0.735,644,2.322]],["text/config/#local-configuration",[1,0.777,6,0.821,16,3.416,37,0.607,38,1.652,39,1.543,41,2.42,42,2.043,49,1.527,50,2.262,51,2.677,62,1.435,72,4.433,82,1.435,84,1.946,112,3.565,148,3.565,197,2.85,237,3.282,274,3.565,448,4.147,502,3.048,613,3.048,644,4.433,645,5.202,646,5.202,647,5.202,648,5.491,649,4.415,650,4.752,651,3.732,652,4.147,653,4.147,654,4.415,655,4.147]],["title/config/#annotation-schema",[35,0.407,596,1.986]],["text/config/#annotation-schema",[1,0.647,2,0.36,3,2.027,6,0.78,19,1.807,20,2.09,25,4.578,26,1.758,34,2.484,35,0.832,37,0.629,41,2.017,49,0.854,62,1.364,75,1.25,76,1.372,82,0.874,84,1.473,89,2.413,90,1.25,107,2.09,147,1.807,163,1.758,184,1.655,185,2.538,195,2.09,202,2.97,206,1.509,210,2.308,227,1.668,241,3.072,247,2.227,259,2.308,260,1.368,271,4.639,273,3.624,275,2.157,283,2.308,284,2.484,299,1.857,320,2.825,356,3.402,370,2.484,374,2.308,377,2.97,421,2.698,422,2.825,436,3.695,444,2.97,449,2.698,461,3.276,522,2.09,532,3.16,533,2.825,544,4.578,596,2.308,597,2.97,656,4.926,657,3.938,658,2.97,659,3.938,660,3.343,661,3.343,662,4.578,663,3.938,664,3.343,665,3.938,666,3.343]],["title/config/#other-options",[82,0.992]],["text/config/#other-options",[2,0.724,11,1.317,30,3.429,31,2.985,32,0.9,33,2.413,35,0.546,37,0.849,38,2.099,39,1.761,45,1.786,48,1.309,49,1.577,50,2.875,51,2.34,67,1.319,82,1.555,83,3.859,88,2.271,89,1.583,102,2.206,218,2.88,225,1.977,244,2.952,260,1.153,267,1.977,293,4.117,300,1.547,342,1.926,346,3.859,419,3.115,667,2.985,668,5.423,669,5.423]],["title/config/#default-configuration",[49,0.735,225,1.474]],["text/config/#default-configuration",[1,0.411,2,0.764,3,1.354,6,0.571,10,1.173,11,0.584,14,1.116,24,2.205,26,1.528,29,1.45,31,1.021,32,0.521,33,0.825,35,0.587,37,0.726,38,1.086,39,0.461,42,0.611,48,0.797,49,0.873,50,0.676,52,0.981,62,0.893,65,1.542,78,0.517,82,0.345,88,1.315,89,0.917,91,0.555,92,0.695,95,1.116,102,0.755,107,0.825,110,1.32,146,1.116,156,0.734,159,1.175,162,1.115,163,1.175,167,0.8,184,1.41,185,2.353,188,0.981,190,1.32,194,0.611,197,0.852,206,0.596,210,0.911,218,0.755,224,1.599,225,1.958,228,1.277,234,1.021,239,0.852,241,0.777,244,1.528,247,0.642,248,0.852,249,1.32,260,0.668,267,1.75,275,0.852,284,1.66,293,1.49,299,2.123,300,0.896,304,1.828,337,1.728,342,0.659,344,2.011,356,2.159,360,0.714,363,1.173,391,1.066,395,1.208,402,1.728,404,1.173,419,1.066,434,1.49,448,1.24,475,1.116,480,0.881,484,1.728,507,1.021,508,1.173,509,1.021,532,0.911,536,2.466,557,1.173,570,0.881,575,1.066,577,1.173,592,1.173,596,1.542,613,2.359,615,1.021,644,1.066,650,1.421,652,2.098,653,2.098,655,1.24,656,1.421,658,1.173,668,1.421,669,1.421,670,1.32,671,1.555,672,1.173,673,1.555,674,2.904,675,2.904,676,1.32,677,2.632,678,2.632,679,1.32,680,1.555,681,1.173,682,1.555,683,1.173,684,1.24,685,1.32,686,1.555,687,1.32,688,1.555,689,1.555,690,1.555,691,2.234,692,1.555,693,1.555,694,1.32,695,1.32,696,1.555,697,1.32,698,1.32,699,1.555,700,2.247,701,2.445,702,2.632,703,1.32,704,2.728,705,1.555,706,1.32,707,1.555,708,2.098,709,1.555,710,2.581,711,1.555,712,1.555,713,1.24,714,1.32,715,1.555,716,1.555,717,1.24,718,2.632,719,1.555,720,1.32,721,1.32,722,1.555,723,1.32,724,1.32,725,1.32,726,2.728,727,1.985,728,1.32,729,1.32,730,1.32,731,1.32,732,1.555,733,1.555,734,1.32,735,1.32,736,1.32,737,1.555,738,2.632,739,2.632,740,2.234,741,1.555,742,1.555,743,1.555,744,2.632,745,2.632,746,1.555,747,1.555,748,3.422,749,3.396,750,3.422,751,2.234,752,1.555,753,1.555,754,2.234,755,1.32,756,2.728,757,2.234,758,2.632,759,1.555,760,1.32,761,1.173,762,1.555]],["title/dev/",[1,0.407,102,1.644]],["text/dev/",[1,0.876,2,0.702,3,2.444,5,1.689,6,0.891,7,0.713,11,0.557,15,1.473,19,2.451,21,3.297,24,1.377,26,1.735,28,1.722,29,0.746,32,0.94,35,0.828,36,1.065,37,0.788,38,1.508,39,1.409,41,1.453,42,2.269,45,1.526,46,3.275,48,0.769,56,1.293,59,2.36,65,1.473,67,1.127,69,1.385,75,1.508,76,1.861,88,1.94,89,0.875,90,1.697,91,1.385,92,1.735,94,1.423,96,1.65,102,1.885,126,1.423,146,1.803,147,1.782,151,1.185,152,0.763,156,1.832,159,1.735,162,2.012,163,2.727,165,2.133,185,1.616,196,2.689,223,2.835,224,1.527,234,1.65,272,1.423,275,2.128,288,2.52,292,1.293,298,1.65,305,1.423,311,1.94,316,1.803,352,3.661,360,1.782,365,1.293,374,1.473,382,2.662,394,1.895,395,2.179,398,1.585,415,1.585,424,3.254,430,1.895,498,1.895,502,1.473,504,1.65,522,1.334,524,1.895,536,1.377,564,1.803,574,1.895,575,1.722,588,1.895,593,1.722,613,1.473,621,1.722,700,2.551,720,2.133,727,1.895,763,2.513,764,2.787,765,2.133,766,1.803,767,2.513,768,2.513,769,4.031,770,2.133,771,2.513,772,2.513,773,2.513,774,3.885,775,2.133,776,2.133,777,2.513,778,2.513,779,3.885,780,2.513,781,2.513,782,2.513,783,3.885,784,2.133,785,2.513,786,3.885,787,2.513,788,2.513,789,2.133,790,2.513,791,2.513,792,2.513,793,1.334,794,1.65,795,1.65,796,2.513,797,2.513,798,2.133,799,2.513,800,1.895,801,2.513,802,2.133,803,2.513,804,2.133]],["title/dev/#quevedo-as-a-library",[1,0.407,102,1.644]],["text/dev/#quevedo-as-a-library",[1,0.832,3,2.998,5,2.533,6,0.939,19,2.672,37,0.809,42,2.288,46,2.826,76,2.029,88,2.91,90,1.85,92,2.601,147,2.672,196,3.298,398,3.675,430,4.394,502,3.414,763,5.825]],["title/dev/#call-from-python",[3,1.744,305,1.919]],["text/dev/#call-from-python",[1,0.879,2,0.638,3,2.628,5,2.221,6,0.886,19,2.934,24,2.798,26,2.28,32,1.011,37,0.815,41,1.91,48,1.011,59,3.102,67,1.481,75,1.622,88,2.551,91,1.821,102,2.478,146,3.664,152,1.55,159,2.856,162,2.709,163,3.268,272,2.892,352,3.499,382,3.499,613,2.993,621,3.499,720,4.335,764,3.664,765,4.335,766,3.664,767,5.107,768,5.107]],["title/dev/#user-scripts",[42,1.331,46,1.644]],["text/dev/#user-scripts",[1,0.73,2,0.695,6,0.819,7,0.925,11,0.723,15,1.911,19,1.496,26,1.456,28,2.234,29,0.967,32,0.935,35,0.883,37,0.648,38,1.762,39,1.647,41,1.22,42,2.18,45,1.854,46,3.369,48,0.646,56,1.678,59,1.981,65,1.911,67,0.946,69,1.684,75,1.499,76,1.933,89,1.136,90,1.762,91,1.163,92,1.456,96,2.141,147,1.496,151,1.538,156,2.227,162,1.381,163,2.108,165,2.768,185,1.888,196,2.673,223,3.229,224,1.981,234,2.141,275,2.587,288,2.869,292,1.678,298,2.141,311,2.358,352,3.803,360,2.166,365,1.678,374,1.911,382,2.234,394,2.459,395,1.496,415,2.057,424,3.803,498,2.459,504,2.141,524,2.459,536,1.786,564,2.339,574,2.459,575,2.234,588,2.459,593,2.234,700,3.1,727,2.459,764,2.339,769,4.711,770,2.768,771,3.261,772,3.261,773,3.261,774,4.721,775,2.768,776,2.768,777,3.261,778,3.261,779,4.721,780,3.261,781,3.261,782,3.261,783,4.721,784,2.768,785,3.261,786,4.721,787,3.261,788,3.261,789,2.768,790,3.261,791,3.261,792,3.261,793,1.73,794,2.141,795,2.141,796,3.261,797,3.261]],["title/dev/#modifying-quevedo",[1,0.407,395,1.555]],["text/dev/#modifying-quevedo",[1,0.84,2,0.541,21,5.938,36,2.507,37,0.691,94,3.351,126,3.351,316,4.245,395,2.715,522,3.14,798,5.023,799,5.918,800,4.463,801,5.918,802,5.023,803,5.918,804,5.023]],["title/guide/",[6,0.43,74,2.556]],["text/guide/",[1,0.832,2,0.705,5,0.509,6,0.638,7,0.584,11,1.442,12,1.761,15,1.206,19,1.264,23,0.711,24,0.641,26,0.522,28,0.802,29,1.122,30,1.552,31,1.809,32,1.302,33,1.092,34,0.738,35,0.691,36,1.167,37,0.768,38,0.875,39,0.611,40,0.768,41,1.788,42,0.459,43,0.802,44,0.537,45,1.637,46,1.337,48,1.038,49,0.82,50,1.198,51,1.059,56,2.145,62,1.163,65,0.686,67,1.305,69,1.604,72,0.802,74,0.882,75,1.324,76,1.952,78,1.495,79,2.63,81,0.882,84,0.77,88,1.028,90,2.011,91,0.417,92,0.919,93,0.768,102,0.568,106,0.802,107,1.462,109,1.41,112,0.802,126,0.662,135,1.888,136,1.351,150,0.882,151,0.552,154,0.686,156,1.3,158,0.839,162,1.167,163,1.861,164,1.028,184,0.839,185,0.398,196,0.662,198,0.522,199,0.641,201,0.662,204,1.264,207,1.092,218,2.32,224,2.015,225,0.509,227,0.496,228,0.999,229,0.768,237,1.298,241,0.584,244,1.23,256,2.216,259,0.686,260,1.33,263,1.298,266,0.686,269,0.686,272,0.662,283,0.686,293,2.707,299,2.121,300,1.418,304,1.031,305,0.662,312,0.802,323,1.552,324,0.882,337,1.351,339,0.882,342,2.375,345,2.093,347,0.993,350,0.522,355,0.882,360,1.264,365,1.946,366,2.006,367,0.802,372,2.273,375,1.747,377,0.882,381,0.711,382,2.273,391,0.802,394,0.882,395,0.537,401,3.445,402,1.809,406,1.351,415,1.298,417,0.641,418,2.591,419,0.802,421,0.802,422,0.839,424,1.41,425,2.38,426,0.802,428,1.298,432,0.738,433,0.839,434,1.56,435,0.882,441,0.993,443,2.178,449,1.41,450,0.621,455,0.993,457,0.662,461,1.25,463,1.41,467,0.802,474,2.197,479,1.298,480,2.141,482,0.882,485,0.882,487,0.993,495,0.993,496,0.993,498,0.882,502,0.686,505,0.768,517,1.747,522,1.462,523,0.993,536,0.641,574,1.552,581,0.882,585,0.993,587,0.993,589,0.882,591,0.882,593,0.802,596,1.206,598,0.802,600,0.993,602,0.993,604,0.882,605,1.747,606,3.185,607,3.762,613,0.686,615,0.768,635,2.645,636,0.993,637,0.802,640,0.993,642,1.476,660,0.993,664,0.993,667,0.768,684,1.641,710,0.882,755,0.993,761,0.882,764,0.839,765,0.993,766,0.839,769,0.993,770,0.993,784,0.993,793,1.761,795,0.768,800,0.882,805,0.993,806,2.904,807,0.993,808,1.17,809,0.993,810,1.17,811,1.17,812,1.17,813,1.17,814,1.17,815,0.993,816,2.058,817,1.17,818,1.17,819,1.17,820,1.17,821,3.209,822,1.17,823,2.816,824,1.17,825,1.17,826,1.17,827,1.476,828,0.993,829,1.17,830,1.17,831,1.17,832,1.17,833,1.17,834,0.993,835,0.933,836,1.17,837,0.993,838,2.517,839,1.17,840,0.738,841,0.993,842,1.17,843,1.17,844,1.17,845,1.17,846,1.17,847,2.645,848,0.993,849,1.17,850,2.517,851,1.17,852,1.17,853,0.839,854,1.17,855,0.993,856,1.17,857,1.17,858,1.17,859,1.17,860,1.17,861,1.17,862,1.17,863,1.17,864,1.17,865,1.17,866,0.882,867,1.17,868,2.058,869,0.993,870,0.993,871,1.17,872,0.993,873,1.17,874,1.17,875,1.17,876,1.17,877,1.17,878,1.17,879,1.17,880,0.933,881,1.17,882,1.17,883,1.17,884,2.058,885,1.17,886,2.058,887,1.17,888,1.17,889,1.17,890,1.17,891,2.058,892,0.993,893,1.17,894,1.17,895,0.768,896,1.17,897,0.993]],["title/guide/#building-a-dataset",[6,0.43,74,2.556]],["text/guide/#building-a-dataset",[1,0.863,2,0.401,5,1.907,6,0.824,24,2.403,31,4.265,32,1.368,37,0.758,41,1.64,45,2.277,51,2.257,69,1.564,72,3.005,78,1.928,90,2.063,91,1.564,92,1.958,93,2.88,107,2.328,109,3.973,156,3.064,162,1.858,163,1.958,237,3.658,263,2.767,339,3.308,342,1.858,345,3.658,375,4.922,377,3.308,382,3.973,480,2.483,522,3.077,523,3.723,574,4.373,585,3.723,604,3.308,605,4.922,606,2.664,607,2.57,613,2.57,635,3.496,793,3.077,805,3.723,806,4.198,807,3.723,808,4.386,809,3.723,810,4.386,811,4.386,812,4.386,813,4.386,814,4.386,815,3.723]],["title/guide/#create-repo",[78,1.127,765,2.877]],["text/guide/#create-repo",[1,0.709,2,0.703,6,0.572,32,0.893,35,0.709,37,0.769,43,3.09,49,0.978,56,2.321,62,1.31,69,1.608,75,1.875,76,1.571,78,2.189,79,3.726,81,3.401,84,1.687,90,2.219,150,3.401,201,2.553,204,3.021,256,3.461,299,2.127,300,1.534,345,2.845,367,3.09,394,3.401,395,2.069,402,2.961,417,2.471,432,2.845,450,2.393,517,5.013,589,3.401,596,2.643,606,4.406,607,3.859,635,5.25,769,3.828,816,5.906,817,4.51,818,4.51,819,4.51,820,4.51,821,5.013]],["title/guide/#add-data",[32,0.671,299,1.598]],["text/guide/#add-data",[1,0.586,2,0.658,29,2.136,32,1.231,34,3.081,36,2.634,37,0.726,75,1.974,76,1.701,90,1.551,136,3.207,163,3.054,164,3.105,184,1.083,224,4.155,241,2.439,256,2.862,260,1.735,299,2.932,372,3.347,402,3.207,415,3.922,443,4.082,461,2.967,463,3.347,480,2.765,587,4.146,606,3.777,607,3.644,684,3.893,755,4.146,806,2.967,821,4.146,822,4.884,823,4.146,824,4.884,825,4.884]],["title/guide/#automatically-process-the-data",[32,0.54,45,1.071,360,1.251]],["text/guide/#automatically-process-the-data",[1,0.616,2,0.69,7,1.819,19,2.942,23,3.117,29,1.522,37,0.599,42,2.015,45,2.015,46,3.395,56,2.64,75,1.629,76,1.787,78,1.706,90,1.629,163,2.291,185,1.746,199,2.811,229,3.369,260,1.302,299,2.42,355,3.869,360,2.354,424,4.395,443,3.369,449,3.515,536,2.811,602,4.355,607,3.007,660,4.355,823,4.355,826,5.13,827,3.681,828,4.355,829,5.13,830,5.13,831,5.13,832,5.13,833,5.13]],["title/guide/#annotate-the-data",[32,0.671,35,0.407]],["text/guide/#annotate-the-data",[1,0.749,2,0.66,6,0.622,32,1.357,35,0.866,36,2.078,37,0.728,38,2.176,39,1.85,44,2.25,49,1.064,56,2.524,62,1.088,69,1.749,84,1.835,90,1.558,151,2.314,163,2.19,256,2.875,260,1.582,299,2.941,300,1.669,324,3.7,480,2.778,596,2.875,606,3.787,607,3.654,615,3.221,764,3.519,795,3.221,821,5.292,834,4.164,835,3.91,836,4.905,837,4.164,838,5.695,839,4.905,840,3.095,841,4.164]],["title/guide/#augment-the-data",[32,0.671,33,1.799]],["text/guide/#augment-the-data",[1,0.825,2,0.697,6,0.548,11,0.958,15,2.531,26,1.928,32,0.855,33,2.292,35,0.518,45,1.696,62,1.273,76,2.245,79,2.724,90,2.047,112,2.959,135,4.417,154,2.531,158,3.098,162,1.829,184,1.43,228,2.095,244,2.878,259,2.531,260,1.456,272,2.445,360,1.981,365,2.222,372,2.959,401,2.959,418,4.9,419,2.959,463,2.959,474,5.139,598,2.959,600,3.665,607,4.19,636,3.665,770,3.665,793,3.046,800,3.257,806,2.623,823,4.871,827,3.098,842,4.318,843,4.318,844,4.318,845,4.318,846,4.318,847,4.575,848,3.665,849,4.318,850,3.944,851,4.318,852,4.318]],["title/guide/#splits-and-folds",[218,1.644,293,1.919]],["text/guide/#splits-and-folds",[1,0.818,2,0.548,6,0.476,11,1.564,12,3.182,15,2.199,30,3.935,32,1.033,35,0.72,37,0.795,40,2.464,41,2.547,49,0.814,56,2.685,62,1.157,65,2.199,69,1.86,76,1.307,90,1.657,92,1.676,107,2.769,126,2.125,136,2.464,184,0.833,207,2.769,218,3.509,225,1.632,228,1.821,260,0.952,293,4.095,300,1.775,304,1.404,323,3.935,337,3.425,342,2.885,345,2.368,347,3.186,406,2.464,421,2.572,422,2.692,425,4.649,426,2.572,433,2.692,443,2.464,449,2.572,455,3.186,457,2.125,461,2.28,467,2.572,479,2.368,485,2.831,487,3.186,505,2.464,522,1.992,640,3.186,664,3.186,684,2.992,710,2.831,853,2.692,854,3.753,855,3.186,856,3.753,857,3.753,858,3.753,859,3.753,860,3.753,861,3.753,862,3.753,863,3.753,864,3.753,865,3.753,866,2.831,867,3.753,868,5.217]],["title/guide/#train-and-test-the-neural-network",[11,0.506,48,0.452,67,0.662,342,0.967]],["text/guide/#train-and-test-the-neural-network",[1,0.816,2,0.709,11,1.618,12,1.777,28,2.294,32,0.663,35,0.402,37,0.562,41,1.8,45,1.315,48,1.345,49,1.044,50,2.093,51,1.723,62,1.25,67,1.787,69,1.194,76,2.145,79,3.554,88,2.404,90,1.789,106,2.294,198,1.495,224,2.034,256,1.962,260,0.849,263,2.112,266,1.962,269,1.962,283,1.962,300,1.637,304,1.8,305,1.896,312,2.294,342,2.764,350,1.495,365,2.477,366,3.463,372,3.298,382,3.298,391,2.294,401,4.907,402,2.199,428,3.036,434,3.19,435,2.525,441,2.842,479,2.112,480,2.725,495,2.842,496,2.842,593,2.294,607,3.824,637,2.294,642,2.402,667,2.199,761,2.525,766,2.402,784,2.842,806,2.034,838,3.059,847,3.837,850,4.396,869,2.842,870,2.842,871,3.348,872,2.842,873,3.348,874,3.348,875,3.348,876,3.348,877,3.348,878,3.348,879,3.348,880,2.669,881,3.348,882,3.348,883,3.348,884,4.813,885,3.348,886,4.813,887,3.348,888,3.348]],["title/guide/#exploitation",[889,4.474]],["text/guide/#exploitation",[1,0.616,2,0.469,6,0.651,11,1.552,19,2.354,32,1.385,35,0.616,37,0.817,48,1.385,50,2.231,56,2.64,67,1.86,69,1.829,75,1.629,76,1.787,102,2.489,162,2.173,196,2.905,227,2.173,365,3.301,381,3.117,406,3.369,482,3.869,498,3.869,502,3.007,581,3.869,591,3.869,642,3.681,806,3.117,890,5.13,891,6.414,892,4.355,893,5.13,894,5.13,895,3.369,896,5.13,897,4.355]],["title/nets/",[48,0.671,67,0.983]],["text/nets/",[1,0.7,2,0.72,5,0.377,6,0.514,7,1.524,9,0.621,11,1.464,12,1.147,13,0.653,14,0.621,15,0.922,20,0.46,26,2.023,29,1.119,32,0.937,33,1.636,35,0.568,36,0.367,37,0.77,38,0.5,39,0.641,40,1.419,41,1.517,42,0.618,43,0.594,44,1.414,45,1.044,47,0.735,48,1.434,49,1.219,50,2.491,51,1.368,56,1.586,59,0.526,62,1.091,67,1.63,68,1.723,69,0.948,70,1.186,72,0.594,73,1.313,75,0.979,76,0.548,77,0.377,78,0.883,79,0.546,81,0.653,82,1.091,83,0.835,87,0.922,89,1.074,90,1.198,91,0.309,92,1.541,93,0.569,94,0.49,99,1.129,102,1.967,105,0.862,107,0.46,126,0.891,147,1.219,150,0.653,154,0.508,155,1.266,156,0.409,159,0.702,161,1.63,162,0.915,163,0.387,167,0.446,174,1.419,184,1.369,185,2.016,188,0.546,194,0.618,195,0.46,197,0.475,204,0.397,206,1.181,210,1.266,218,0.763,224,0.526,225,1.5,227,0.666,232,0.81,233,0.835,239,1.89,241,0.433,244,0.387,247,0.65,248,1.456,251,0.621,254,0.526,260,1.093,263,1.363,266,0.508,267,1.5,269,0.922,272,0.891,285,0.475,288,0.742,298,0.569,299,0.742,300,1.38,304,0.994,305,0.49,307,0.653,311,0.433,312,0.594,314,1.363,324,0.653,337,1.033,339,0.653,342,1.462,343,1.821,344,2.684,345,0.546,350,1.541,353,1.033,354,1.723,356,0.546,360,0.991,365,1.112,366,1.636,367,0.594,373,0.546,374,0.508,380,0.735,381,1.313,384,0.735,385,1.186,388,2.602,391,1.078,395,0.991,396,0.735,398,0.546,401,1.078,404,0.653,407,0.735,410,1.254,417,0.862,425,0.621,426,1.078,427,1.676,428,1.363,429,1.254,432,0.546,433,0.621,434,2.136,450,1.147,452,1.033,457,0.891,461,0.526,463,1.078,471,0.653,475,1.55,479,0.992,480,0.49,482,0.653,484,0.569,486,1.186,491,1.254,497,0.735,502,0.922,507,1.745,509,0.569,513,0.526,520,0.653,524,0.653,528,0.735,530,1.186,532,1.266,536,0.862,540,0.735,557,0.653,564,0.621,570,0.49,575,1.078,577,0.653,584,0.735,591,0.653,592,0.653,596,1.266,598,0.594,604,0.653,606,0.526,609,0.653,615,1.033,618,0.735,621,0.594,631,0.735,637,0.594,639,0.735,642,0.621,649,0.735,651,1.906,661,0.735,666,0.735,667,2.265,670,0.735,672,2.004,675,0.735,676,0.735,679,0.735,681,0.653,687,0.735,691,0.735,694,0.735,695,0.735,697,1.335,698,0.735,700,1.033,701,1.872,703,0.735,704,2.118,706,1.834,708,1.254,710,1.186,713,1.254,714,1.335,717,1.254,721,0.735,749,0.653,754,1.335,756,1.254,761,0.653,764,1.129,766,1.129,789,0.735,793,1.41,794,0.569,795,0.569,798,0.735,800,0.653,805,0.735,806,0.956,807,0.735,828,0.735,834,0.735,835,1.254,847,0.691,853,1.129,866,0.653,870,0.735,880,1.254,892,0.735,895,0.569,897,0.735,898,0.866,899,1.335,900,0.866,901,0.866,902,1.573,903,0.866,904,1.437,905,0.866,906,1.573,907,0.866,908,0.866,909,1.437,910,0.866,911,0.866,912,0.866,913,0.866,914,0.866,915,1.437,916,0.866,917,0.866,918,0.866,919,0.866,920,1.573,921,1.974,922,0.866,923,0.866,924,1.437,925,1.437,926,1.254,927,0.866,928,0.866,929,0.866,930,0.866,931,0.866,932,0.866,933,1.573,934,0.866,935,0.866,936,0.866,937,0.866,938,0.866,939,0.866,940,0.866,941,0.866,942,0.866,943,0.866,944,0.866,945,0.866,946,0.866,947,0.866,948,0.866,949,0.866,950,1.834,951,0.866,952,0.866,953,0.866,954,0.866,955,0.735,956,0.735,957,0.866,958,0.866,959,0.866,960,1.129,961,0.866,962,0.866,963,0.866,964,0.866,965,1.974,966,0.866,967,1.437,968,0.866,969,0.866,970,0.866,971,1.437,972,1.437,973,0.866,974,3.442,975,0.866,976,0.866,977,0.866,978,0.866,979,0.866,980,0.866,981,0.866,982,0.653,983,0.866,984,0.735,985,0.866,986,0.866,987,1.437,988,0.866,989,0.866,990,1.437,991,0.866,992,0.866,993,0.866,994,0.866,995,0.866,996,0.866,997,0.735,998,0.866,999,0.866,1000,0.866,1001,0.866,1002,0.866,1003,0.866,1004,0.735,1005,0.866,1006,0.866,1007,0.866,1008,0.866,1009,0.735,1010,0.866,1011,0.866,1012,0.735,1013,0.866,1014,0.735,1015,0.653,1016,0.621,1017,0.735,1018,2.657,1019,3.772,1020,0.866,1021,0.866,1022,1.573,1023,0.866,1024,0.866,1025,0.691,1026,0.866,1027,0.866,1028,2.256,1029,0.866,1030,0.866,1031,0.866,1032,0.866,1033,1.573,1034,1.573,1035,0.866,1036,0.866,1037,0.866,1038,0.866,1039,0.866,1040,0.866,1041,0.866,1042,0.866,1043,0.866,1044,0.866,1045,0.866,1046,0.866,1047,0.866,1048,0.866,1049,0.866,1050,0.866,1051,0.866,1052,0.866,1053,0.866,1054,0.866,1055,0.866,1056,0.866,1057,0.866,1058,0.866,1059,0.866,1060,0.866]],["title/nets/#neural-networks",[48,0.671,67,0.983]],["text/nets/#neural-networks",[1,0.707,6,0.57,7,1.864,13,3.388,14,3.222,15,2.632,26,2.006,37,0.687,41,1.68,44,2.702,45,2.313,48,0.889,67,1.303,68,3.581,70,3.388,92,2.006,99,3.222,126,2.543,147,2.061,156,2.118,184,1.307,195,2.384,260,1.14,263,2.834,304,1.68,307,3.388,314,2.834,324,3.388,360,2.061,404,3.388,427,2.834,507,2.949,513,2.728,528,3.812,532,3.452,564,3.222,609,3.388,615,3.867,621,3.078,651,4.715,666,3.812,681,3.388,853,3.222,898,4.492,899,5,900,4.492,901,4.492,902,5.89,903,4.492,904,4.103,905,4.492,906,5.89,907,4.492,908,4.492,909,4.103,910,4.492,911,4.492,912,4.492,913,4.492,914,4.492,915,4.103,916,4.492,917,4.492,918,4.492,919,4.492]],["title/nets/#darknet",[50,1.945]],["text/nets/#darknet",[1,0.608,5,2.201,6,0.642,11,1.543,15,2.966,26,2.839,36,2.144,37,0.591,45,1.988,48,1.444,49,1.379,50,2.765,62,1.123,67,2.017,68,5.069,69,1.805,70,3.817,92,2.26,94,2.866,102,2.455,285,2.772,350,2.26,360,2.322,366,2.686,427,3.193,484,3.323,507,3.323,667,3.323,793,2.686,807,4.296,915,4.623,920,6.359,921,4.623,922,5.061,923,5.061,924,4.623,925,4.623,926,4.034,927,5.061]],["title/nets/#installation",[51,2.302]],["text/nets/#installation",[1,0.659,2,0.674,11,1.217,26,1.803,32,0.799,33,2.143,37,0.727,49,0.876,50,3.207,51,3.206,56,3.206,62,0.896,69,1.956,72,2.767,73,3.332,75,1.742,81,3.045,82,1.217,92,2.449,93,2.651,102,3.243,150,3.045,161,4.137,194,1.586,206,1.547,225,1.756,232,2.078,248,2.212,263,2.547,300,2.274,345,2.547,391,3.759,410,3.219,417,2.212,450,2.143,584,3.427,606,2.453,618,3.427,637,2.767,667,4.091,793,2.143,798,3.427,835,3.219,870,3.427,897,3.427,921,5.011,926,3.219,928,4.037,929,4.037,930,4.037,931,4.037,932,4.037,933,5.486,934,4.037,935,4.037,936,4.037,937,4.037,938,4.037,939,4.037,940,4.037,941,4.037,942,4.037,943,4.037,944,4.037,945,4.037,946,4.037,947,4.037,948,4.037,949,4.037,950,3.427]],["title/nets/#network-configuration",[48,0.671,49,0.735]],["text/nets/#network-configuration",[1,0.835,2,0.566,6,0.689,7,1.129,11,1.474,12,2.112,32,1.076,35,0.478,37,0.465,41,2.313,48,1.455,49,1.557,50,1.731,62,1.474,67,1.794,78,1.323,82,1.205,87,2.332,91,1.419,102,1.931,105,2.18,126,2.254,155,2.332,162,1.686,163,1.777,167,2.048,174,2.613,197,2.18,204,1.826,241,1.988,248,2.18,266,2.332,267,1.731,299,2.562,300,1.354,311,1.988,339,3.002,344,1.988,365,2.048,366,2.112,381,2.418,395,1.826,427,2.511,428,2.511,432,2.511,434,2.254,475,2.855,502,3.183,530,3.002,575,3.722,591,3.002,639,3.378,670,3.378,672,3.002,675,3.378,701,2.418,704,3.173,764,3.897,789,3.378,805,3.378,895,2.613,909,3.636,950,3.378,951,3.98,952,3.98,953,3.98,954,3.98,955,3.378,956,3.378,957,3.98,958,3.98,959,3.98,960,3.897,961,3.98,962,3.98,963,3.98]],["title/nets/#classifier",[344,2.235]],["text/nets/#classifier",[1,0.655,2,0.499,6,0.692,7,1.547,11,1.21,29,1.619,32,1.08,37,0.778,48,1.424,83,2.895,155,3.197,159,2.975,161,4.115,184,1.478,337,3.582,344,3.592,491,4.349,557,4.115,649,4.631,672,4.115,679,4.631,701,3.314,749,4.115,766,3.914,964,5.456,965,4.984,966,5.456,967,4.984]],["title/nets/#detector",[343,3.066]],["text/nets/#detector",[1,0.574,2,0.437,7,1.356,32,0.946,37,0.716,41,2.533,48,1.522,49,1.037,62,1.06,73,2.903,92,2.134,147,3.106,154,2.801,155,2.801,184,1.36,188,3.015,218,2.319,260,1.556,269,2.801,343,4.202,344,2.387,366,2.536,388,4.625,417,2.618,434,3.472,461,2.903,479,3.015,491,3.81,530,3.605,570,2.706,672,4.625,756,3.81,766,3.429,806,2.903,834,4.057,880,3.81,965,5.602,967,4.366,968,4.78,969,4.78,970,4.78,971,4.366,972,4.366,973,4.78,974,4.057,975,4.78]],["title/nets/#tag-selection",[185,1.153,239,1.857]],["text/nets/#tag-selection",[1,0.586,2,0.695,6,0.62,11,1.083,12,2.592,26,2.181,35,0.586,37,0.726,40,3.207,48,1.354,89,1.701,162,2.069,184,1.083,185,2.66,210,4.008,225,2.124,239,3.406,247,2.017,267,2.124,343,3.347,354,4.957,388,4.689,475,4.461,479,3.081,480,2.765,536,2.676,596,3.644,676,4.146,806,2.967,880,3.893,976,4.884,977,4.884,978,4.884,979,4.884,980,4.884,981,4.884,982,3.684]],["title/nets/#annotation-selection",[35,0.407,239,1.857]],["text/nets/#annotation-selection",[1,0.548,2,0.417,11,1.321,26,2.958,29,1.766,32,0.904,35,0.795,37,0.85,48,1.442,49,0.99,56,2.349,67,1.324,82,1.013,89,2.307,99,3.275,184,1.321,185,2.388,206,1.749,224,2.773,239,3.261,248,3.261,251,3.275,260,1.158,267,2.88,300,1.553,314,2.88,342,2.522,344,2.28,353,2.997,452,2.997,457,2.585,596,2.675,604,3.443,706,5.623,708,3.639,710,4.49,828,3.875,835,3.639,950,3.875,983,4.565,984,3.875,985,4.565,986,4.565,987,4.17,988,4.565,989,4.565,990,4.17]],["title/nets/#data-augmentation",[32,0.671,33,1.799]],["text/nets/#data-augmentation",[1,0.507,2,0.583,7,2.072,9,3.028,11,1.254,26,1.884,32,1.262,33,2.999,37,0.66,40,3.711,42,1.658,44,1.936,48,1.348,49,1.226,50,2.458,62,0.936,82,1.414,92,1.884,107,2.24,184,1.254,225,1.835,244,1.884,260,1.071,269,2.473,300,1.923,314,2.662,337,2.771,344,2.108,353,2.771,360,1.936,373,2.662,395,2.593,426,3.873,450,2.24,452,2.771,457,2.39,507,2.771,520,3.183,532,2.473,536,2.312,577,3.183,592,3.183,687,3.582,703,3.582,713,3.364,714,4.797,717,3.364,754,4.797,866,3.183,892,3.582,904,3.855,971,3.855,987,3.855,990,3.855,991,4.22,992,4.22,993,4.22,994,4.22,995,4.22,996,4.22,997,3.582,998,4.22,999,4.22,1000,4.22,1001,4.22,1002,4.22,1003,4.22,1004,3.582,1005,4.22]],["title/nets/#usage",[77,1.945]],["text/nets/#usage",[]],["title/nets/#at-the-command-line",[90,1.076,398,2.138]],["text/nets/#at-the-command-line",[1,0.754,2,0.674,6,0.63,7,0.991,11,1.657,12,1.855,20,1.855,35,0.42,37,0.827,41,1.307,44,1.603,45,1.373,48,1.434,49,0.758,50,2.158,59,2.123,62,1.393,67,1.822,69,1.246,75,1.832,76,1.217,78,1.918,79,2.205,82,1.28,83,1.855,87,2.048,90,2.188,105,1.915,174,3.258,206,2.211,218,1.696,225,2.158,227,1.481,233,1.855,254,2.123,263,2.205,272,2.81,304,1.856,305,1.979,312,2.395,342,2.661,350,2.804,365,1.799,366,2.633,367,2.395,374,2.048,380,2.967,381,3.014,384,2.967,385,3.743,401,3.4,407,2.967,427,2.205,428,3.13,429,2.786,450,1.855,463,3.4,471,2.636,482,2.636,486,3.743,497,2.967,507,2.295,524,2.636,631,2.967,642,2.507,661,2.967,667,2.295,700,2.295,756,2.786,761,2.636,847,2.786,853,2.507,974,2.967,1006,3.495,1007,3.495,1008,3.495,1009,2.967,1010,3.495,1011,3.495]],["title/nets/#at-the-web-interface",[38,1.076,39,1.005]],["text/nets/#at-the-web-interface",[2,0.478,7,1.482,11,1.159,35,0.779,37,0.757,38,1.66,39,1.925,42,2.053,44,2.398,48,1.461,67,2.047,76,1.82,89,1.82,184,1.439,260,1.646,288,3.06,304,1.955,344,2.61,350,2.334,365,2.689,410,4.166,434,2.959,598,3.581,793,3.443,794,3.432,795,3.432,1012,4.436,1013,5.226,1014,4.436,1015,3.942,1016,3.749,1017,4.436]],["title/nets/#example-configuration",[49,0.735,162,1.436]],["text/nets/#example-configuration",[2,0.756,7,0.82,11,1.273,26,1.29,29,1.703,32,0.572,33,1.534,35,0.519,37,0.337,43,1.98,47,2.453,48,0.572,49,0.627,50,2.25,56,1.487,67,0.838,82,0.641,102,2.096,184,1.586,185,2.274,194,1.135,225,1.257,227,1.224,232,1.487,233,1.534,247,1.193,260,1.096,267,1.257,298,1.897,344,3.22,354,2.304,356,1.823,388,3.258,396,2.453,425,2.073,429,2.304,433,2.073,434,2.929,509,1.897,540,2.453,651,2.073,667,1.897,691,2.453,694,2.453,695,2.453,697,3.667,698,2.453,700,1.897,701,3.143,704,4.124,708,2.304,713,2.304,717,2.304,721,2.453,800,2.18,924,2.64,925,2.64,972,2.64,974,5.472,1018,5.741,1019,6.682,1020,2.89,1021,2.89,1022,4.32,1023,2.89,1024,2.89,1025,2.304,1026,2.89,1027,2.89,1028,4.873,1029,2.89,1030,2.89,1031,2.89,1032,2.89,1033,4.32,1034,4.32,1035,2.89,1036,2.89,1037,2.89,1038,2.89,1039,2.89,1040,2.89,1041,2.89,1042,2.89,1043,2.89,1044,2.89,1045,2.89,1046,2.89,1047,2.89,1048,2.89,1049,2.89,1050,2.89,1051,2.89,1052,2.89,1053,2.89,1054,2.89,1055,2.89,1056,2.89,1057,2.89,1058,2.89,1059,2.89,1060,2.89]],["title/web/",[38,1.076,39,1.005]],["text/web/",[1,0.639,2,0.728,3,1.747,5,1.848,6,0.675,16,1.391,18,1.451,19,1.558,23,1.287,24,1.86,29,1.578,32,0.962,35,0.682,37,0.621,38,2.083,39,2.025,40,1.391,42,2.342,44,1.95,49,1.154,51,1.09,52,1.336,62,0.753,65,1.241,69,1.211,76,1.183,77,0.921,78,0.704,82,1.26,83,2.255,87,1.241,88,1.696,89,0.738,90,0.673,93,3.192,94,1.199,105,1.86,112,1.451,127,1.798,133,1.798,148,1.451,151,2.293,155,1.241,156,1.601,163,1.516,164,1.058,194,0.832,196,3.621,229,1.391,244,1.516,267,0.921,270,1.597,274,2.327,288,1.601,298,1.391,299,0.999,300,2.176,304,0.792,311,2.428,345,1.336,373,1.336,389,2.707,395,0.972,398,1.336,414,1.028,427,1.336,435,1.597,450,1.124,457,1.199,461,1.287,470,1.798,484,2.229,502,1.241,505,2.229,508,1.597,509,2.79,510,1.798,511,2.882,513,1.287,520,1.597,522,1.124,532,1.241,536,2.328,547,1.798,570,1.199,581,1.597,588,1.597,613,3.327,644,3.331,648,1.798,652,2.707,653,3.388,655,2.707,658,2.561,662,1.798,700,1.391,701,1.287,723,1.798,724,1.798,725,1.798,726,2.707,727,1.597,728,1.798,729,1.798,730,1.798,731,1.798,734,1.798,735,1.798,736,1.798,740,2.882,749,1.597,751,1.798,775,2.882,793,1.124,802,1.798,804,1.798,809,1.798,815,1.798,827,1.52,837,1.798,840,3.582,848,1.798,866,1.597,895,2.229,960,2.436,982,1.597,1015,1.597,1025,2.707,1061,2.118,1062,2.118,1063,2.118,1064,2.118,1065,2.118,1066,2.118,1067,2.118,1068,2.118,1069,2.118,1070,2.118,1071,3.205,1072,2.118,1073,3.395,1074,2.118,1075,2.118,1076,2.118,1077,2.118,1078,2.118,1079,1.798,1080,2.118,1081,2.118,1082,2.118,1083,1.798,1084,2.118,1085,2.118,1086,2.118,1087,2.118,1088,1.798,1089,2.118,1090,3.101,1091,2.118,1092,2.118,1093,2.118,1094,2.118,1095,2.118,1096,2.118,1097,4.861,1098,2.118,1099,3.395,1100,2.118,1101,2.118,1102,2.118,1103,2.118,1104,2.118,1105,2.118,1106,2.118,1107,1.798]],["title/web/#web-interface",[38,1.076,39,1.005]],["text/web/#web-interface",[1,0.831,2,0.492,5,2.339,6,0.683,16,2.577,18,2.689,19,1.8,23,2.384,24,2.15,32,1.216,35,0.737,37,0.771,38,2.27,39,2.171,44,2.816,69,1.399,76,1.874,77,1.706,82,0.871,83,3.258,87,2.3,88,1.96,90,1.246,94,2.222,127,3.331,133,3.331,151,2.537,155,2.3,156,1.851,164,1.96,196,2.222,229,2.577,274,3.686,345,2.476,389,3.128,398,2.476,427,2.476,457,2.222,505,2.577,509,2.577,511,4.567,520,2.96,547,3.331,570,2.222,581,2.96,588,2.96,644,3.686,701,2.384,802,3.331,837,3.331,840,3.873,848,3.331,866,2.96,982,2.96,1015,2.96,1061,3.924,1062,3.924,1063,3.924,1064,3.924,1065,3.924,1066,3.924,1067,3.924,1068,3.924,1069,3.924,1070,3.924,1071,4.058,1072,3.924,1073,5.38,1074,3.924,1075,3.924,1076,3.924,1077,3.924,1078,3.924,1079,3.331,1080,3.924,1081,3.924,1082,3.924]],["title/web/#configuration",[49,0.97]],["text/web/#configuration",[2,0.622,6,0.863,38,2.16,39,1.676,49,1.644,62,1.509,82,1.509,93,3.709,105,3.095,112,3.871,148,3.871,300,2.579,644,3.871,648,4.795,960,4.052,1083,4.795,1084,5.649]],["title/web/#server-options",[82,0.752,840,2.138]],["text/web/#server-options",[2,0.704,3,2.835,51,2.835,105,3.018,163,2.46,194,2.164,244,2.46,270,4.155,304,2.061,470,4.677,484,3.618,502,3.229,508,4.155,509,4.401,510,4.677,652,5.343,658,4.155,723,4.677,729,4.677,730,4.677,731,4.677,840,3.476,1085,5.51,1086,5.51,1087,5.51,1088,4.677,1089,5.51]],["title/web/#interface-options",[39,1.005,82,0.752]],["text/web/#interface-options",[2,0.632,38,1.84,39,1.719,40,3.805,42,2.276,52,3.656,151,2.733,196,3.281,267,2.52,414,2.812,435,4.371,513,3.52,700,3.805,724,4.919,725,4.919,726,4.62,727,4.371,728,4.919,1025,4.62,1090,5.294,1091,5.795,1092,5.795]],["title/web/#users",[42,1.757]],["text/web/#users",[2,0.74,3,1.821,5,1.539,6,0.449,19,1.624,24,1.939,29,1.977,32,0.701,35,0.697,37,0.413,39,1.05,42,2.617,65,2.074,69,1.262,78,1.177,82,0.785,88,1.768,89,1.233,93,3.815,151,1.669,156,1.669,163,1.58,196,4.028,244,1.58,288,2.361,298,2.324,299,1.669,300,2.268,311,3.155,373,2.233,389,2.821,395,1.624,450,1.878,461,2.15,484,2.324,505,2.324,522,1.878,532,2.074,536,3.183,613,4.055,644,2.425,653,4.631,655,3.991,658,2.669,662,3.004,726,2.821,734,3.004,735,3.004,736,3.004,740,4.25,749,2.669,751,3.004,775,4.25,793,1.878,804,3.004,809,3.004,815,3.004,827,2.539,840,2.233,895,3.287,960,2.539,1025,2.821,1071,2.669,1090,3.233,1093,3.539,1094,3.539,1095,3.539,1096,3.539,1097,6.316,1098,3.539,1099,5.007,1100,3.539,1101,3.539,1102,3.539,1103,3.539,1104,3.539,1105,3.539,1106,3.539,1107,3.004]],["title/web_use/",[37,0.318,38,0.866,39,0.809]],["text/web_use/",[1,0.226,2,0.624,6,0.721,7,1.682,11,0.686,18,1.292,19,0.865,20,1.001,29,1.686,31,1.238,32,0.612,35,0.866,37,0.628,38,1.591,39,1.486,41,1.469,42,1.542,44,1.418,46,2.611,48,1.066,49,0.67,62,0.686,67,0.896,75,0.599,76,1.367,78,1.027,82,0.686,83,1.001,84,0.705,88,0.942,89,2.301,90,0.599,92,0.842,96,3.895,105,2.151,148,1.292,154,1.105,156,0.889,160,1.503,184,1.515,185,1.705,196,1.068,197,1.693,206,0.723,207,2.409,212,1.19,216,1.238,227,1.923,228,1.499,230,1.422,237,1.95,239,2.151,241,0.942,244,1.38,247,2.222,248,1.033,255,1.422,259,1.105,260,1.442,266,1.105,267,0.82,269,1.811,272,1.068,275,1.693,285,1.033,288,2.141,299,0.889,300,1.336,304,0.705,311,1.544,344,0.942,350,0.842,352,3.688,356,1.95,370,1.19,374,1.105,379,1.601,395,0.865,411,1.068,412,0.915,415,1.19,417,2.151,434,1.068,438,2.623,447,2.331,450,2.856,453,1.601,467,1.292,480,1.068,485,1.422,503,1.601,504,3.29,505,1.238,521,1.601,522,2.084,531,1.601,563,2.464,570,2.571,589,1.422,593,1.292,597,1.422,598,1.292,599,1.601,609,1.422,651,1.353,654,1.601,674,1.601,681,1.422,683,3.779,685,1.601,701,1.877,757,1.601,760,1.601,776,1.601,793,2.409,794,3.29,795,3.534,806,1.146,827,1.353,840,1.95,841,1.601,853,1.353,855,1.601,869,1.601,872,1.601,895,2.029,899,1.601,926,1.503,955,1.601,956,1.601,960,1.353,982,1.422,984,1.601,997,2.623,1004,1.601,1009,1.601,1012,1.601,1014,1.601,1015,1.422,1016,4.406,1017,1.601,1028,1.601,1071,3.424,1079,1.601,1083,1.601,1088,1.601,1107,1.601,1108,3.619,1109,3.09,1110,1.886,1111,1.886,1112,1.886,1113,1.886,1114,2.823,1115,3.09,1116,3.854,1117,1.886,1118,1.886,1119,1.886,1120,1.886,1121,4.54,1122,1.886,1123,1.886,1124,1.886,1125,1.886,1126,3.09,1127,1.886,1128,1.886,1129,1.886,1130,1.886,1131,2.823,1132,1.886,1133,1.886,1134,3.09,1135,1.886,1136,4.54,1137,1.886,1138,1.886,1139,1.886,1140,1.886,1141,1.886,1142,1.886,1143,1.886,1144,5.01,1145,1.886,1146,1.886,1147,1.886,1148,1.886,1149,1.886,1150,1.886]],["title/web_use/#using-the-web-interface",[37,0.318,38,0.866,39,0.809]],["text/web_use/#using-the-web-interface",[]],["title/web_use/#dataset-overview",[6,0.43,1108,2.702]],["text/web_use/#dataset-overview",[6,0.811,7,1.449,29,2.171,32,1.266,38,1.622,39,1.515,41,2.392,49,1.108,62,1.133,78,2.126,84,1.91,89,2.227,96,3.353,148,3.499,184,1.133,207,3.394,228,2.478,244,2.28,247,2.109,260,1.296,300,1.738,503,4.335,504,3.353,531,4.335,570,2.892,651,3.664,683,4.823,794,3.353,855,4.335,895,3.353,982,3.852,984,4.335,1016,3.664,1108,4.071,1109,6.395,1110,5.107,1111,5.107,1112,5.107]],["title/web_use/#subset-listing",[29,1.005,89,1.18]],["text/web_use/#subset-listing",[2,0.482,6,0.828,7,2.01,29,1.565,35,0.633,83,2.8,89,2.468,90,1.675,96,4.285,197,2.89,207,2.8,244,2.356,247,2.178,266,3.092,311,2.635,415,3.328,417,2.89,467,3.615,504,3.464,609,3.979,674,4.478,683,4.922,794,3.464,827,3.785,1016,3.785,1083,4.478,1108,4.206,1113,5.276,1114,4.819,1115,6.526,1116,4.478,1117,5.276,1118,5.276,1119,5.276]],["title/web_use/#grapheme-annotation",[35,0.407,184,0.752]],["text/web_use/#grapheme-annotation",[2,0.36,6,0.684,7,1.117,18,2.698,29,1.168,31,2.586,35,0.919,37,0.629,42,1.547,49,0.854,62,0.874,76,1.372,82,1.196,89,1.878,96,2.586,105,2.954,184,0.874,185,1.835,196,2.23,197,2.157,212,2.484,227,2.285,228,1.911,239,2.157,247,1.626,259,2.308,267,1.712,269,2.308,285,2.157,288,2.901,300,1.835,304,1.473,311,1.967,352,4.748,356,2.484,411,2.23,412,1.911,417,2.157,450,3.264,485,2.97,504,2.586,522,2.09,563,3.139,570,2.23,593,2.698,597,2.97,654,3.343,681,2.97,683,2.97,685,3.343,793,2.09,794,3.541,795,3.541,840,2.484,872,3.343,899,3.343,926,3.139,955,3.343,960,2.825,997,4.578,1004,3.343,1016,4.746,1071,2.97,1079,3.343,1088,3.343,1107,3.343,1108,3.139,1114,3.597,1116,3.343,1120,3.938,1121,6.615,1122,3.938,1123,3.938,1124,3.938,1125,3.938,1126,5.393,1127,3.938,1128,3.938,1129,3.938]],["title/web_use/#trained-networks",[11,0.752,48,0.671]],["text/web_use/#trained-networks",[7,1.547,11,1.21,35,0.8,37,0.778,38,1.732,39,1.619,44,2.503,48,1.483,67,1.932,76,1.9,89,1.9,160,4.349,184,1.21,185,1.856,207,2.895,216,3.582,241,2.725,344,2.725,350,2.436,417,2.989,480,3.089,598,3.738,701,3.314,806,3.314,1009,4.631,1012,4.631,1017,4.631,1130,5.456,1131,4.984]],["title/web_use/#user-scripts",[42,1.331,46,1.644]],["text/web_use/#user-scripts",[19,2.528,37,0.643,38,1.749,39,1.634,42,2.164,46,3.646,75,1.749,76,1.919,89,1.919,92,2.46,105,3.018,156,2.599,184,1.222,206,2.111,275,3.018,447,4.155,450,2.924,521,4.677,522,2.924,570,3.12,757,4.677,793,3.557,841,4.677,869,4.677,1071,5.448,1132,5.51,1133,5.51]],["title/web_use/#logogram-annotation",[35,0.407,260,0.86]],["text/web_use/#logogram-annotation",[1,0.451,2,0.623,7,1.48,20,1.992,35,0.778,38,1.192,39,1.113,41,1.404,44,1.722,46,1.821,48,0.743,88,1.874,89,1.817,96,4.255,154,2.199,184,1.661,185,1.775,227,2.21,230,2.831,237,3.291,239,2.858,247,2.476,248,2.056,255,2.831,260,1.728,269,2.199,272,2.125,275,2.056,288,1.77,299,1.77,352,2.572,356,2.368,370,2.368,374,2.199,379,3.186,395,1.722,434,2.125,438,4.428,447,2.831,450,2.769,453,3.186,504,3.425,505,2.464,522,1.992,563,2.992,570,2.125,589,2.831,599,3.186,701,2.28,760,3.186,776,3.186,793,1.992,794,2.464,795,4.255,840,2.368,853,2.692,895,2.464,956,3.186,1014,3.186,1015,2.831,1016,4.302,1028,3.186,1116,4.428,1131,3.428,1134,5.217,1135,3.753,1136,6.481,1137,3.753,1138,3.753,1139,3.753,1140,3.753,1141,3.753,1142,3.753,1143,3.753,1144,6.811,1145,3.753,1146,3.753,1147,3.753,1148,3.753,1149,3.753,1150,3.753]]],"fields":["title","text"],"invertedIndex":[["",{"_index":2,"text":{"":{},"#about":{},"#dependencies":{},"#development":{},"#features":{},"#installation":{},"#quevedo":{},"#usage":{},"api/":{},"api/#annotations":{},"api/#datasets":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationannotationannotationupdate":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationgraphemegraphemeupdate":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramupdate":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedodatasetdatasetget_network":{},"api/#quevedodatasetdatasetget_single":{},"api/#quevedodatasetdatasetget_subsets":{},"api/#quevedodatasetdatasetnew_single":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"api/#quevedonetworknetworknetworkget_annotations":{},"api/#quevedonetworknetworknetworkpredict":{},"api/#quevedonetworknetworknetworktest":{},"api/#quevedonetworknetworknetworktrain":{},"cli/":{},"cli/#prepare":{},"cli/#split":{},"cli/#test":{},"cli/#train":{},"cli/#web":{},"concepts/":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#annotation-schema":{},"config/#dataset-configuration":{},"config/#default-configuration":{},"config/#other-options":{},"dev/":{},"dev/#call-from-python":{},"dev/#modifying-quevedo":{},"dev/#user-scripts":{},"guide/":{},"guide/#add-data":{},"guide/#annotate-the-data":{},"guide/#augment-the-data":{},"guide/#automatically-process-the-data":{},"guide/#building-a-dataset":{},"guide/#create-repo":{},"guide/#exploitation":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#annotation-selection":{},"nets/#at-the-command-line":{},"nets/#at-the-web-interface":{},"nets/#classifier":{},"nets/#data-augmentation":{},"nets/#detector":{},"nets/#example-configuration":{},"nets/#installation":{},"nets/#network-configuration":{},"nets/#tag-selection":{},"web/":{},"web/#configuration":{},"web/#interface-options":{},"web/#server-options":{},"web/#users":{},"web/#web-interface":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#subset-listing":{}},"title":{}}],["0",{"_index":323,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{},"cli/":{},"cli/#split":{},"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["0,1,2,3,4,5,6,7",{"_index":692,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["0.1",{"_index":193,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["0.2",{"_index":189,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["0.3",{"_index":191,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["0.4",{"_index":753,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["0.5",{"_index":1030,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["0.6",{"_index":190,"text":{"api/":{},"api/#datasets":{},"config/":{},"config/#default-configuration":{}},"title":{}}],["0.8",{"_index":718,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["0001",{"_index":1051,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["0782",{"_index":1052,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["1",{"_index":337,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{},"config/":{},"config/#default-configuration":{},"guide/":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#classifier":{},"nets/#data-augmentation":{}},"title":{}}],["1.1.0",{"_index":63,"text":{"":{},"#installation":{}},"title":{}}],["1.json",{"_index":625,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["1.png",{"_index":624,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["1/0",{"_index":716,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["10",{"_index":691,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#example-configuration":{}},"title":{}}],["195908774",{"_index":1054,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["2",{"_index":973,"text":{"nets/":{},"nets/#detector":{}},"title":{}}],["2.json",{"_index":627,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["2.png",{"_index":626,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["200",{"_index":744,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["2017",{"_index":1042,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["2018",{"_index":1057,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["28",{"_index":550,"text":{"concepts/":{},"concepts/#quevedo-datasets":{}},"title":{}}],["3",{"_index":95,"text":{"":{},"#dependencies":{},"api/":{},"cli/":{},"cli/#add_images":{},"config/":{},"config/#default-configuration":{}},"title":{}}],["3.0",{"_index":108,"text":{"":{},"#about":{}},"title":{}}],["3.7",{"_index":53,"text":{"":{},"#installation":{}},"title":{}}],["300",{"_index":745,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["32",{"_index":172,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["500",{"_index":742,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["5000",{"_index":722,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["6",{"_index":1047,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["60",{"_index":1046,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["7",{"_index":551,"text":{"concepts/":{},"concepts/#quevedo-datasets":{}},"title":{}}],["8",{"_index":439,"text":{"cli/":{},"cli/#add_images":{}},"title":{}}],["8,9",{"_index":693,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["80",{"_index":409,"text":{"cli/":{},"cli/#command-line-interface":{}},"title":{}}],["8090",{"_index":698,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#example-configuration":{}},"title":{}}],["84\u201390",{"_index":1048,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["_a",{"_index":1100,"text":{"web/":{},"web/#users":{}},"title":{}}],["_all_",{"_index":455,"text":{"cli/":{},"cli/#split":{},"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["a.meta['annotation_d",{"_index":787,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["a.meta['author",{"_index":786,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["a.tag",{"_index":790,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["abil",{"_index":952,"text":{"nets/":{},"nets/#network-configuration":{}},"title":{}}],["abort",{"_index":253,"text":{"api/":{},"api/#quevedodatasetdatasetcreate_subset":{}},"title":{}}],["abov",{"_index":562,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["accentu",{"_index":1034,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["accept",{"_index":988,"text":{"nets/":{},"nets/#annotation-selection":{}},"title":{}}],["acces",{"_index":127,"text":{"":{},"#about":{},"web/":{},"web/#web-interface":{}},"title":{}}],["access",{"_index":196,"text":{"api/":{},"api/#quevedodatasetdataset":{},"dev/":{},"dev/#quevedo-as-a-library":{},"dev/#user-scripts":{},"guide/":{},"guide/#exploitation":{},"web/":{},"web/#interface-options":{},"web/#users":{},"web/#web-interface":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["accident",{"_index":571,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["accord",{"_index":355,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{},"concepts/":{},"concepts/#logograms-and-graphemes":{},"guide/":{},"guide/#automatically-process-the-data":{}},"title":{}}],["accute_acc",{"_index":192,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["achiev",{"_index":987,"text":{"nets/":{},"nets/#annotation-selection":{},"nets/#data-augmentation":{}},"title":{}}],["acm",{"_index":1045,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["act",{"_index":856,"text":{"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["actual",{"_index":895,"text":{"guide/":{},"guide/#exploitation":{},"nets/":{},"nets/#network-configuration":{},"web/":{},"web/#users":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#logogram-annotation":{}},"title":{}}],["ad",{"_index":827,"text":{"guide/":{},"guide/#augment-the-data":{},"guide/#automatically-process-the-data":{},"web/":{},"web/#users":{},"web_use/":{},"web_use/#subset-listing":{}},"title":{}}],["add",{"_index":299,"text":{"api/":{},"api/#quevedoannotationannotationannotationupdate":{},"concepts/":{},"concepts/#dataset-structure":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"guide/":{},"guide/#add-data":{},"guide/#annotate-the-data":{},"guide/#automatically-process-the-data":{},"guide/#create-repo":{},"nets/":{},"nets/#network-configuration":{},"web/":{},"web/#users":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{"guide/#add-data":{}}}],["add_imag",{"_index":415,"text":{"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#add-data":{},"web_use/":{},"web_use/#subset-listing":{}},"title":{"cli/#add_images":{}}}],["addit",{"_index":618,"text":{"concepts/":{},"concepts/#dataset-structure":{},"nets/":{},"nets/#installation":{}},"title":{}}],["addition",{"_index":99,"text":{"":{},"#dependencies":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"nets/":{},"nets/#annotation-selection":{},"nets/#neural-networks":{}},"title":{}}],["address",{"_index":1086,"text":{"web/":{},"web/#server-options":{}},"title":{}}],["adequ",{"_index":916,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["adopt",{"_index":864,"text":{"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["advantag",{"_index":588,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"dev/":{},"dev/#user-scripts":{},"web/":{},"web/#web-interface":{}},"title":{}}],["advis",{"_index":1133,"text":{"web_use/":{},"web_use/#user-scripts":{}},"title":{}}],["affect",{"_index":404,"text":{"cli/":{},"cli/#command-line-interface":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#neural-networks":{}},"title":{}}],["afgs@ucm.",{"_index":138,"text":{"":{},"#visse-team":{}},"title":{}}],["afterward",{"_index":405,"text":{"cli/":{},"cli/#command-line-interface":{}},"title":{}}],["again",{"_index":853,"text":{"guide/":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#neural-networks":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["aid",{"_index":956,"text":{"nets/":{},"nets/#network-configuration":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["aim",{"_index":1061,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["alberto",{"_index":139,"text":{"":{},"#visse-team":{}},"title":{}}],["alex",{"_index":1037,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["alexey",{"_index":928,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["alexnet",{"_index":964,"text":{"nets/":{},"nets/#classifier":{}},"title":{}}],["algorithm",{"_index":15,"text":{"":{},"#quevedo":{},"cli/":{},"cli/#split":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#augment-the-data":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#darknet":{},"nets/#neural-networks":{}},"title":{}}],["ali",{"_index":1056,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["allow",{"_index":311,"text":{"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"cli/":{},"cli/#web":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"dev/":{},"dev/#user-scripts":{},"nets/":{},"nets/#network-configuration":{},"web/":{},"web/#users":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#subset-listing":{}},"title":{}}],["along",{"_index":565,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["alphabet",{"_index":446,"text":{"cli/":{},"cli/#add_images":{}},"title":{}}],["alreadi",{"_index":160,"text":{"api/":{},"api/#datasets":{},"api/#quevedodatasetdatasetcreate_subset":{},"web_use/":{},"web_use/#trained-networks":{}},"title":{}}],["alter",{"_index":1019,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["altern",{"_index":711,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["alway",{"_index":453,"text":{"cli/":{},"cli/#split":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["amount",{"_index":999,"text":{"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["analysi",{"_index":873,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["and/or",{"_index":820,"text":{"guide/":{},"guide/#create-repo":{}},"title":{}}],["angl",{"_index":713,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#data-augmentation":{},"nets/#example-configuration":{}},"title":{}}],["annot",{"_index":35,"text":{"":{},"#features":{},"api/":{},"api/#annotations":{},"api/#datasets":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationannotationannotationto_dict":{},"api/#quevedoannotationannotationannotationupdate":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationgraphemegraphemeto_dict":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramto_dict":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedodatasetdatasetget_single":{},"api/#quevedodatasetdatasetget_subsets":{},"api/#quevedodatasetdatasetis_test":{},"api/#quevedodatasetdatasetis_train":{},"api/#quevedodatasetdatasetnew_single":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"api/#quevedonetworknetworknetworkget_annotations":{},"api/#quevedonetworknetworknetworktest":{},"cli/":{},"cli/#command-line-interface":{},"cli/#extract":{},"cli/#migrate":{},"cli/#split":{},"cli/#test":{},"cli/#web":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"config/#other-options":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#annotate-the-data":{},"guide/#augment-the-data":{},"guide/#create-repo":{},"guide/#exploitation":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#annotation-selection":{},"nets/#at-the-command-line":{},"nets/#at-the-web-interface":{},"nets/#example-configuration":{},"nets/#network-configuration":{},"nets/#tag-selection":{},"web/":{},"web/#users":{},"web/#web-interface":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#subset-listing":{},"web_use/#trained-networks":{}},"title":{"api/#annotations":{},"api/#quevedoannotationannotationannotation":{},"concepts/#annotation-of-logograms-and-graphemes":{},"config/#annotation-schema":{},"guide/#annotate-the-data":{},"nets/#annotation-selection":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{}}}],["annotation.sav",{"_index":178,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["annotation_help",{"_index":685,"text":{"config/":{},"config/#default-configuration":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["annotationtarget",{"_index":226,"text":{"api/":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedodatasetdatasetget_single":{},"api/#quevedodatasetdatasetget_subsets":{},"api/#quevedodatasetdatasetnew_single":{}},"title":{}}],["anoth",{"_index":792,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["antonio",{"_index":134,"text":{"":{},"#visse-team":{}},"title":{}}],["any.whl[web",{"_index":66,"text":{"":{},"#installation":{}},"title":{}}],["anymor",{"_index":819,"text":{"guide/":{},"guide/#create-repo":{}},"title":{}}],["apart",{"_index":834,"text":{"guide/":{},"guide/#annotate-the-data":{},"nets/":{},"nets/#detector":{}},"title":{}}],["api",{"_index":767,"text":{"dev/":{},"dev/#call-from-python":{}},"title":{}}],["app",{"_index":512,"text":{"cli/":{},"cli/#web":{}},"title":{}}],["appear",{"_index":760,"text":{"config/":{},"config/#default-configuration":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["appli",{"_index":1013,"text":{"nets/":{},"nets/#at-the-web-interface":{}},"title":{}}],["applic",{"_index":502,"text":{"cli/":{},"cli/#web":{},"config/":{},"config/#local-configuration":{},"dev/":{},"dev/#quevedo-as-a-library":{},"guide/":{},"guide/#exploitation":{},"nets/":{},"nets/#network-configuration":{},"web/":{},"web/#server-options":{}},"title":{}}],["appropri",{"_index":229,"text":{"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedodatasetdatasetget_single":{},"guide/":{},"guide/#automatically-process-the-data":{},"web/":{},"web/#web-interface":{}},"title":{}}],["approxim",{"_index":867,"text":{"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["arch",{"_index":939,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["architectur",{"_index":965,"text":{"nets/":{},"nets/#classifier":{},"nets/#detector":{}},"title":{}}],["area",{"_index":1134,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["arg",{"_index":313,"text":{"api/":{},"cli/":{},"cli/#command-line-interface":{}},"title":{}}],["argument",{"_index":232,"text":{"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationgraphemegraphemeupdate":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramupdate":{},"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedodatasetdatasetnew_single":{},"cli/":{},"cli/#run_script":{},"nets/":{},"nets/#example-configuration":{},"nets/#installation":{}},"title":{}}],["arrang",{"_index":561,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["array",{"_index":307,"text":{"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"nets/":{},"nets/#neural-networks":{}},"title":{}}],["arrow",{"_index":563,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{}},"title":{}}],["artifact",{"_index":877,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["artifici",{"_index":419,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#generate":{},"config/":{},"config/#default-configuration":{},"config/#other-options":{},"guide/":{},"guide/#augment-the-data":{}},"title":{}}],["arxiv",{"_index":1058,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["arxiv:1804.02767",{"_index":1060,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["ask",{"_index":1107,"text":{"web/":{},"web/#users":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["asl",{"_index":545,"text":{"concepts/":{},"concepts/#quevedo-datasets":{}},"title":{}}],["aspect",{"_index":592,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["assign",{"_index":425,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#split":{},"guide/":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#example-configuration":{}},"title":{}}],["associ",{"_index":597,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"config/":{},"config/#annotation-schema":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["assum",{"_index":815,"text":{"guide/":{},"guide/#building-a-dataset":{},"web/":{},"web/#users":{}},"title":{}}],["atom",{"_index":556,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["attribut",{"_index":200,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedodatasetdataset":{},"api/#quevedonetworknetworknetwork":{}},"title":{}}],["augment",{"_index":33,"text":{"":{},"#features":{},"cli/":{},"cli/#generate":{},"config/":{},"config/#default-configuration":{},"config/#other-options":{},"guide/":{},"guide/#augment-the-data":{},"nets/":{},"nets/#data-augmentation":{},"nets/#example-configuration":{},"nets/#installation":{}},"title":{"guide/#augment-the-data":{},"nets/#data-augmentation":{}}}],["author",{"_index":659,"text":{"config/":{},"config/#annotation-schema":{}},"title":{}}],["auto_annot",{"_index":359,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{}},"title":{"api/#quevedonetworknetworknetworkauto_annotate":{}}}],["automat",{"_index":360,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"cli/":{},"cli/#config":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#augment-the-data":{},"guide/#automatically-process-the-data":{},"nets/":{},"nets/#darknet":{},"nets/#data-augmentation":{},"nets/#neural-networks":{}},"title":{"guide/#automatically-process-the-data":{}}}],["avail",{"_index":793,"text":{"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#augment-the-data":{},"guide/#building-a-dataset":{},"nets/":{},"nets/#at-the-web-interface":{},"nets/#darknet":{},"nets/#installation":{},"web/":{},"web/#users":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#user-scripts":{}},"title":{}}],["averag",{"_index":492,"text":{"cli/":{},"cli/#test":{}},"title":{}}],["avoid",{"_index":996,"text":{"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["away",{"_index":1125,"text":{"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["back",{"_index":1115,"text":{"web_use/":{},"web_use/#subset-listing":{}},"title":{}}],["backup",{"_index":523,"text":{"cli/":{},"cli/#migrate":{},"guide/":{},"guide/#building-a-dataset":{}},"title":{}}],["bank",{"_index":1106,"text":{"web/":{},"web/#users":{}},"title":{}}],["base",{"_index":314,"text":{"api/":{},"api/#networks":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationgraphemegraphemeupdate":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramupdate":{},"nets/":{},"nets/#annotation-selection":{},"nets/#data-augmentation":{},"nets/#neural-networks":{}},"title":{}}],["basic",{"_index":506,"text":{"cli/":{},"cli/#web":{}},"title":{}}],["be",{"_index":866,"text":{"guide/":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#data-augmentation":{},"web/":{},"web/#web-interface":{}},"title":{}}],["befor",{"_index":374,"text":{"api/":{},"api/#quevedonetworknetworknetworkprepare":{},"cli/":{},"cli/#split":{},"config/":{},"config/#annotation-schema":{},"dev/":{},"dev/#user-scripts":{},"nets/":{},"nets/#at-the-command-line":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["behaviour",{"_index":252,"text":{"api/":{},"api/#networks":{},"api/#quevedodatasetdatasetcreate_subset":{}},"title":{}}],["belong",{"_index":217,"text":{"api/":{},"api/#quevedoannotationannotationannotationupdate":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetis_test":{},"api/#quevedodatasetdatasetis_train":{}},"title":{}}],["below",{"_index":1120,"text":{"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["bengoechea",{"_index":145,"text":{"":{},"#visse-team":{}},"title":{}}],["best",{"_index":649,"text":{"config/":{},"config/#local-configuration":{},"nets/":{},"nets/#classifier":{}},"title":{}}],["better",{"_index":971,"text":{"nets/":{},"nets/#data-augmentation":{},"nets/#detector":{}},"title":{}}],["between",{"_index":982,"text":{"nets/":{},"nets/#tag-selection":{},"web/":{},"web/#web-interface":{},"web_use/":{},"web_use/#dataset-overview":{}},"title":{}}],["beyond",{"_index":581,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{},"guide/":{},"guide/#exploitation":{},"web/":{},"web/#web-interface":{}},"title":{}}],["binari",{"_index":667,"text":{"config/":{},"config/#other-options":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#darknet":{},"nets/#example-configuration":{},"nets/#installation":{}},"title":{}}],["binary_data",{"_index":286,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{}},"title":{}}],["binary_data=non",{"_index":302,"text":{"api/":{}},"title":{}}],["bind",{"_index":1087,"text":{"web/":{},"web/#server-options":{}},"title":{}}],["bit",{"_index":440,"text":{"cli/":{},"cli/#add_images":{}},"title":{}}],["bochkovskiy",{"_index":929,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["boilerpl",{"_index":772,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["bootstrap",{"_index":1017,"text":{"nets/":{},"nets/#at-the-web-interface":{},"web_use/":{},"web_use/#trained-networks":{}},"title":{}}],["both",{"_index":241,"text":{"api/":{},"api/#annotations":{},"api/#quevedodatasetdatasetget_annotations":{},"cli/":{},"cli/#web":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"config/":{},"config/#annotation-schema":{},"config/#dataset-configuration":{},"config/#default-configuration":{},"guide/":{},"guide/#add-data":{},"nets/":{},"nets/#network-configuration":{},"web_use/":{},"web_use/#trained-networks":{}},"title":{}}],["bother",{"_index":836,"text":{"guide/":{},"guide/#annotate-the-data":{}},"title":{}}],["bound",{"_index":320,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"api/#quevedonetworknetworknetworkpredict":{},"config/":{},"config/#annotation-schema":{}},"title":{}}],["boundari",{"_index":968,"text":{"nets/":{},"nets/#detector":{}},"title":{}}],["boundgraphem",{"_index":268,"text":{"api/":{},"api/#annotations":{},"api/#quevedoannotationlogogramlogogramupdate":{}},"title":{"api/#quevedoannotationlogogramboundgrapheme":{}}}],["box",{"_index":188,"text":{"api/":{},"api/#datasets":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedonetworknetworknetworkpredict":{},"concepts/":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#detector":{}},"title":{}}],["box=[0",{"_index":322,"text":{"api/":{}},"title":{}}],["brief",{"_index":962,"text":{"nets/":{},"nets/#network-configuration":{}},"title":{}}],["bright",{"_index":1001,"text":{"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["brows",{"_index":503,"text":{"cli/":{},"cli/#web":{},"web_use/":{},"web_use/#dataset-overview":{}},"title":{}}],["browser",{"_index":511,"text":{"cli/":{},"cli/#web":{},"web/":{},"web/#web-interface":{}},"title":{}}],["build",{"_index":74,"text":{"":{},"#dependencies":{},"#development":{},"guide/":{}},"title":{"guide/":{},"guide/#building-a-dataset":{}}}],["built",{"_index":161,"text":{"api/":{},"api/#datasets":{},"api/#networks":{},"nets/":{},"nets/#classifier":{},"nets/#installation":{}},"title":{}}],["bullet",{"_index":954,"text":{"nets/":{},"nets/#network-configuration":{}},"title":{}}],["button",{"_index":1016,"text":{"nets/":{},"nets/#at-the-web-interface":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#subset-listing":{}},"title":{}}],["byte",{"_index":306,"text":{"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{}},"title":{}}],["c",{"_index":484,"text":{"cli/":{},"cli/#train":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#darknet":{},"web/":{},"web/#server-options":{},"web/#users":{}},"title":{}}],["cach",{"_index":878,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["call",{"_index":305,"text":{"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedonetworknetworknetworkprepare":{},"cli/":{},"cli/#run_script":{},"dev/":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{"dev/#call-from-python":{}}}],["can't",{"_index":737,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["carri",{"_index":472,"text":{"cli/":{},"cli/#extract":{}},"title":{}}],["case",{"_index":457,"text":{"cli/":{},"cli/#migrate":{},"cli/#split":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"guide/":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#annotation-selection":{},"nets/#data-augmentation":{},"web/":{},"web/#web-interface":{}},"title":{}}],["cd",{"_index":81,"text":{"":{},"#usage":{},"guide/":{},"guide/#create-repo":{},"nets/":{},"nets/#installation":{}},"title":{}}],["ce8c9cd0316faac773645648ac827ff6",{"_index":732,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["center",{"_index":333,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{}},"title":{}}],["chain",{"_index":312,"text":{"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["chang",{"_index":450,"text":{"cli/":{},"cli/#migrate":{},"cli/#split":{},"guide/":{},"guide/#create-repo":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#data-augmentation":{},"nets/#installation":{},"web/":{},"web/#users":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#user-scripts":{}},"title":{}}],["channel",{"_index":437,"text":{"cli/":{},"cli/#add_images":{}},"title":{}}],["charact",{"_index":186,"text":{"api/":{},"api/#datasets":{},"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["characterist",{"_index":586,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{}},"title":{}}],["check",{"_index":216,"text":{"api/":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetis_test":{},"api/#quevedodatasetdatasetis_train":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkis_prepared":{},"api/#quevedonetworknetworknetworkis_trained":{},"web_use/":{},"web_use/#trained-networks":{}},"title":{}}],["checkbox",{"_index":682,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["choos",{"_index":703,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["chopin",{"_index":553,"text":{"concepts/":{},"concepts/#quevedo-datasets":{}},"title":{}}],["chosen",{"_index":456,"text":{"cli/":{},"cli/#extract":{},"cli/#generate":{},"cli/#prepare":{},"cli/#split":{}},"title":{}}],["class",{"_index":159,"text":{"api/":{},"api/#annotations":{},"api/#datasets":{},"api/#networks":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationupdate":{},"api/#quevedoannotationgraphemegraphemeto_dict":{},"api/#quevedoannotationlogogramlogogramto_dict":{},"api/#quevedodatasetdataset":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkpredict":{},"cli/":{},"cli/#prepare":{},"cli/#test":{},"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#call-from-python":{},"nets/":{},"nets/#classifier":{}},"title":{}}],["class\"/\"label",{"_index":976,"text":{"nets/":{},"nets/#tag-selection":{}},"title":{}}],["classess",{"_index":768,"text":{"dev/":{},"dev/#call-from-python":{}},"title":{}}],["classif",{"_index":388,"text":{"api/":{},"api/#quevedonetworknetworknetworkpredict":{},"nets/":{},"nets/#detector":{},"nets/#example-configuration":{},"nets/#tag-selection":{}},"title":{}}],["classifi",{"_index":344,"text":{"api/":{},"api/#networks":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"api/#quevedonetworknetworknetworkpredict":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#annotation-selection":{},"nets/#at-the-web-interface":{},"nets/#classifier":{},"nets/#data-augmentation":{},"nets/#detector":{},"nets/#example-configuration":{},"nets/#network-configuration":{},"web_use/":{},"web_use/#trained-networks":{}},"title":{"nets/#classifier":{}}}],["click",{"_index":96,"text":{"":{},"#dependencies":{},"dev/":{},"dev/#user-scripts":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#subset-listing":{}},"title":{}}],["clone",{"_index":931,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["cloud",{"_index":812,"text":{"guide/":{},"guide/#building-a-dataset":{}},"title":{}}],["cnn",{"_index":966,"text":{"nets/":{},"nets/#classifier":{}},"title":{}}],["coars",{"_index":1018,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["code",{"_index":19,"text":{"":{},"#development":{},"#quevedo":{},"api/":{},"api/#datasets":{},"api/#networks":{},"config/":{},"config/#annotation-schema":{},"dev/":{},"dev/#call-from-python":{},"dev/#quevedo-as-a-library":{},"dev/#user-scripts":{},"guide/":{},"guide/#automatically-process-the-data":{},"guide/#exploitation":{},"web/":{},"web/#users":{},"web/#web-interface":{},"web_use/":{},"web_use/#user-scripts":{}},"title":{}}],["collabor",{"_index":1071,"text":{"web/":{},"web/#users":{},"web/#web-interface":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#user-scripts":{}},"title":{}}],["collect",{"_index":901,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["color",{"_index":438,"text":{"cli/":{},"cli/#add_images":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["column",{"_index":1137,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["combin",{"_index":475,"text":{"cli/":{},"cli/#generate":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#network-configuration":{},"nets/#tag-selection":{}},"title":{}}],["come",{"_index":573,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["comfort",{"_index":1069,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["command",{"_index":90,"text":{"":{},"#usage":{},"cli/":{},"cli/#command-line-interface":{},"cli/#config":{},"cli/#extract":{},"cli/#generate":{},"cli/#run_script":{},"cli/#split":{},"cli/#test":{},"cli/#train":{},"config/":{},"config/#annotation-schema":{},"config/#dataset-configuration":{},"dev/":{},"dev/#quevedo-as-a-library":{},"dev/#user-scripts":{},"guide/":{},"guide/#add-data":{},"guide/#annotate-the-data":{},"guide/#augment-the-data":{},"guide/#automatically-process-the-data":{},"guide/#building-a-dataset":{},"guide/#create-repo":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{},"web/":{},"web/#web-interface":{},"web_use/":{},"web_use/#subset-listing":{}},"title":{"cli/":{},"cli/#command-line-interface":{},"nets/#at-the-command-line":{}}}],["command1",{"_index":399,"text":{"cli/":{},"cli/#command-line-interface":{}},"title":{}}],["command2",{"_index":400,"text":{"cli/":{},"cli/#command-line-interface":{}},"title":{}}],["comment",{"_index":670,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#network-configuration":{}},"title":{}}],["commit",{"_index":821,"text":{"guide/":{},"guide/#add-data":{},"guide/#annotate-the-data":{},"guide/#create-repo":{}},"title":{}}],["common",{"_index":661,"text":{"config/":{},"config/#annotation-schema":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["commun",{"_index":540,"text":{"concepts/":{},"concepts/#quevedo-datasets":{},"nets/":{},"nets/#example-configuration":{}},"title":{}}],["compar",{"_index":392,"text":{"api/":{},"api/#quevedonetworknetworknetworktest":{}},"title":{}}],["compil",{"_index":946,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["complet",{"_index":906,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["complex",{"_index":530,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{},"nets/":{},"nets/#detector":{},"nets/#network-configuration":{}},"title":{}}],["complic",{"_index":1028,"text":{"nets/":{},"nets/#example-configuration":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["complutens",{"_index":122,"text":{"":{},"#about":{}},"title":{}}],["compos",{"_index":583,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["composit",{"_index":8,"text":{"":{},"#quevedo":{},"cli/":{},"cli/#command-line-interface":{},"concepts/":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{}},"title":{}}],["comput",{"_index":427,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#test":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#darknet":{},"nets/#network-configuration":{},"nets/#neural-networks":{},"web/":{},"web/#web-interface":{}},"title":{}}],["concaten",{"_index":1032,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["conclus",{"_index":894,"text":{"guide/":{},"guide/#exploitation":{}},"title":{}}],["conduct",{"_index":1065,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["confid",{"_index":386,"text":{"api/":{},"api/#quevedonetworknetworknetworkpredict":{}},"title":{}}],["config",{"_index":201,"text":{"api/":{},"api/#quevedodatasetdataset":{},"api/#quevedonetworknetworknetwork":{},"cli/":{},"cli/#command-line-interface":{},"cli/#config":{},"cli/#migrate":{},"cli/#web":{},"config/":{},"config/#dataset-configuration":{},"guide/":{},"guide/#create-repo":{}},"title":{"cli/#config":{}}}],["config.local.toml",{"_index":650,"text":{"config/":{},"config/#default-configuration":{},"config/#local-configuration":{}},"title":{}}],["config.toml",{"_index":432,"text":{"cli/":{},"cli/#config":{},"concepts/":{},"concepts/#dataset-structure":{},"config/":{},"config/#dataset-configuration":{},"guide/":{},"guide/#create-repo":{},"nets/":{},"nets/#network-configuration":{}},"title":{}}],["config_vers",{"_index":690,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["configur",{"_index":49,"text":{"":{},"#features":{},"api/":{},"api/#networks":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetget_network":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkget_annotations":{},"api/#quevedonetworknetworknetworkis_prepared":{},"cli/":{},"cli/#command-line-interface":{},"cli/#config":{},"cli/#generate":{},"cli/#prepare":{},"cli/#split":{},"cli/#train":{},"cli/#web":{},"concepts/":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"config/":{},"config/#annotation-schema":{},"config/#dataset-configuration":{},"config/#default-configuration":{},"config/#local-configuration":{},"config/#other-options":{},"guide/":{},"guide/#annotate-the-data":{},"guide/#create-repo":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#annotation-selection":{},"nets/#at-the-command-line":{},"nets/#darknet":{},"nets/#data-augmentation":{},"nets/#detector":{},"nets/#example-configuration":{},"nets/#installation":{},"nets/#network-configuration":{},"web/":{},"web/#configuration":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{}},"title":{"config/":{},"config/#dataset-configuration":{},"config/#default-configuration":{},"config/#local-configuration":{},"nets/#example-configuration":{},"nets/#network-configuration":{},"web/#configuration":{}}}],["consist",{"_index":527,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#quevedo-datasets":{}},"title":{}}],["constitut",{"_index":534,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{}},"title":{}}],["contain",{"_index":197,"text":{"api/":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedodatasetdataset":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"config/":{},"config/#default-configuration":{},"config/#local-configuration":{},"nets/":{},"nets/#network-configuration":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#subset-listing":{}},"title":{}}],["content",{"_index":294,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationannotationannotationupdate":{}},"title":{}}],["contrast",{"_index":994,"text":{"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["control",{"_index":251,"text":{"api/":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedonetworknetworknetworkprepare":{},"cli/":{},"cli/#generate":{},"nets/":{},"nets/#annotation-selection":{}},"title":{}}],["conveni",{"_index":430,"text":{"cli/":{},"cli/#config":{},"config/":{},"config/#dataset-configuration":{},"dev/":{},"dev/#quevedo-as-a-library":{}},"title":{}}],["convers",{"_index":665,"text":{"config/":{},"config/#annotation-schema":{}},"title":{}}],["convolut",{"_index":1044,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["cooki",{"_index":1089,"text":{"web/":{},"web/#server-options":{}},"title":{}}],["coordin",{"_index":327,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{}},"title":{}}],["copi",{"_index":109,"text":{"":{},"#about":{},"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"guide/":{},"guide/#building-a-dataset":{}},"title":{}}],["corner",{"_index":796,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["correspond",{"_index":230,"text":{"api/":{},"api/#quevedodatasetdatasetnew_single":{},"concepts/":{},"concepts/#dataset-structure":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["count",{"_index":249,"text":{"api/":{},"api/#quevedodatasetdatasetget_subsets":{},"config/":{},"config/#default-configuration":{}},"title":{}}],["cover",{"_index":1145,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["creat",{"_index":78,"text":{"":{},"#usage":{},"api/":{},"api/#datasets":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetnew_single":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkprepare":{},"cli/":{},"cli/#command-line-interface":{},"cli/#create":{},"cli/#generate":{},"cli/#prepare":{},"cli/#train":{},"config/":{},"config/#default-configuration":{},"guide/":{},"guide/#automatically-process-the-data":{},"guide/#building-a-dataset":{},"guide/#create-repo":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#network-configuration":{},"web/":{},"web/#users":{},"web_use/":{},"web_use/#dataset-overview":{}},"title":{"api/#quevedodatasetdatasetcreate":{},"cli/#create":{},"guide/#create-repo":{}}}],["create_from",{"_index":231,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedodatasetdatasetnew_single":{}},"title":{"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{}}}],["create_subset",{"_index":205,"text":{"api/":{},"api/#quevedodatasetdataset":{}},"title":{"api/#quevedodatasetdatasetcreate_subset":{}}}],["criterion",{"_index":708,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#annotation-selection":{},"nets/#example-configuration":{}},"title":{}}],["crop",{"_index":338,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{}},"title":{}}],["cross",{"_index":859,"text":{"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["csv",{"_index":497,"text":{"cli/":{},"cli/#test":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["ctrl+c",{"_index":1076,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["cuda",{"_index":921,"text":{"nets/":{},"nets/#darknet":{},"nets/#installation":{}},"title":{}}],["cudnn=1",{"_index":936,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["current",{"_index":410,"text":{"cli/":{},"cli/#command-line-interface":{},"nets/":{},"nets/#at-the-web-interface":{},"nets/#installation":{}},"title":{}}],["custom",{"_index":769,"text":{"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#create-repo":{}},"title":{}}],["d",{"_index":79,"text":{"":{},"#usage":{},"cli/":{},"cli/#command-line-interface":{},"guide/":{},"guide/#augment-the-data":{},"guide/#create-repo":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["danger",{"_index":521,"text":{"cli/":{},"cli/#migrate":{},"web_use/":{},"web_use/#user-scripts":{}},"title":{}}],["darknet",{"_index":50,"text":{"":{},"#dependencies":{},"#features":{},"#installation":{},"api/":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkprepare":{},"config/":{},"config/#default-configuration":{},"config/#local-configuration":{},"config/#other-options":{},"guide/":{},"guide/#exploitation":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#darknet":{},"nets/#data-augmentation":{},"nets/#example-configuration":{},"nets/#installation":{},"nets/#network-configuration":{}},"title":{"nets/#darknet":{}}}],["darknet'",{"_index":943,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["darknet.cfg",{"_index":630,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["darknet/darknet",{"_index":694,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#example-configuration":{}},"title":{}}],["darknet/libdarknet.so",{"_index":695,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#example-configuration":{}},"title":{}}],["darknet_final.weight",{"_index":631,"text":{"concepts/":{},"concepts/#dataset-structure":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["data",{"_index":32,"text":{"":{},"#features":{},"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationannotationannotationto_dict":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationgraphemegraphemeto_dict":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramto_dict":{},"cli/":{},"cli/#command-line-interface":{},"cli/#generate":{},"cli/#migrate":{},"cli/#run_script":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#default-configuration":{},"config/#other-options":{},"dev/":{},"dev/#call-from-python":{},"dev/#user-scripts":{},"guide/":{},"guide/#add-data":{},"guide/#annotate-the-data":{},"guide/#augment-the-data":{},"guide/#building-a-dataset":{},"guide/#create-repo":{},"guide/#exploitation":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#annotation-selection":{},"nets/#classifier":{},"nets/#data-augmentation":{},"nets/#detector":{},"nets/#example-configuration":{},"nets/#installation":{},"nets/#network-configuration":{},"web/":{},"web/#users":{},"web/#web-interface":{},"web_use/":{},"web_use/#dataset-overview":{}},"title":{"guide/#add-data":{},"guide/#annotate-the-data":{},"guide/#augment-the-data":{},"guide/#automatically-process-the-data":{},"nets/#data-augmentation":{}}}],["dataset",{"_index":6,"text":{"":{},"#features":{},"#quevedo":{},"#usage":{},"api/":{},"api/#datasets":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate":{},"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedodatasetdatasetget_subsets":{},"api/#quevedodatasetdatasetlist_networks":{},"api/#quevedonetworknetworknetwork":{},"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#config":{},"cli/#create":{},"cli/#info":{},"cli/#migrate":{},"cli/#prepare":{},"cli/#run_script":{},"cli/#split":{},"cli/#web":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#annotation-schema":{},"config/#dataset-configuration":{},"config/#default-configuration":{},"config/#local-configuration":{},"dev/":{},"dev/#call-from-python":{},"dev/#quevedo-as-a-library":{},"dev/#user-scripts":{},"guide/":{},"guide/#annotate-the-data":{},"guide/#augment-the-data":{},"guide/#building-a-dataset":{},"guide/#create-repo":{},"guide/#exploitation":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#classifier":{},"nets/#darknet":{},"nets/#network-configuration":{},"nets/#neural-networks":{},"nets/#tag-selection":{},"web/":{},"web/#configuration":{},"web/#users":{},"web/#web-interface":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{},"web_use/#subset-listing":{}},"title":{"api/#datasets":{},"api/#quevedodatasetdataset":{},"concepts/":{},"concepts/#dataset-structure":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#dataset-configuration":{},"guide/":{},"guide/#building-a-dataset":{},"web_use/#dataset-overview":{}}}],["dataset'",{"_index":348,"text":{"api/":{},"api/#networks":{}},"title":{}}],["dataset('path/to/the/dataset",{"_index":166,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["dataset>/networks/<network_name>/darknet_final.weight",{"_index":483,"text":{"cli/":{},"cli/#train":{}},"title":{}}],["dataset_nam",{"_index":816,"text":{"guide/":{},"guide/#create-repo":{}},"title":{}}],["dataset_root",{"_index":622,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["date",{"_index":778,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["date.today",{"_index":788,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["datetim",{"_index":777,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["de",{"_index":119,"text":{"":{},"#about":{}},"title":{}}],["deal",{"_index":764,"text":{"dev/":{},"dev/#call-from-python":{},"dev/#user-scripts":{},"guide/":{},"guide/#annotate-the-data":{},"nets/":{},"nets/#network-configuration":{}},"title":{}}],["decid",{"_index":709,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["decod",{"_index":1130,"text":{"web_use/":{},"web_use/#trained-networks":{}},"title":{}}],["deep",{"_index":47,"text":{"":{},"#features":{},"nets/":{},"nets/#example-configuration":{}},"title":{}}],["def",{"_index":779,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["default",{"_index":225,"text":{"api/":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedodatasetdatasetget_network":{},"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#split":{},"cli/#test":{},"cli/#web":{},"config/":{},"config/#default-configuration":{},"config/#other-options":{},"guide/":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#data-augmentation":{},"nets/#example-configuration":{},"nets/#installation":{},"nets/#tag-selection":{}},"title":{"config/#default-configuration":{}}}],["defin",{"_index":347,"text":{"api/":{},"api/#networks":{},"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["degre",{"_index":1000,"text":{"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["delet",{"_index":375,"text":{"api/":{},"api/#quevedonetworknetworknetworkprepare":{},"guide/":{},"guide/#building-a-dataset":{}},"title":{}}],["depend",{"_index":73,"text":{"":{},"#development":{},"api/":{},"api/#quevedodatasetdatasetget_annotations":{},"concepts/":{},"concepts/#dataset-structure":{},"concepts/#logograms-and-graphemes":{},"nets/":{},"nets/#detector":{},"nets/#installation":{}},"title":{"#dependencies":{}}}],["depth",{"_index":441,"text":{"cli/":{},"cli/#add_images":{},"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["deriv",{"_index":261,"text":{"api/":{},"api/#annotations":{}},"title":{}}],["describ",{"_index":657,"text":{"config/":{},"config/#annotation-schema":{}},"title":{}}],["descript",{"_index":675,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#network-configuration":{}},"title":{}}],["deselect",{"_index":1147,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["design",{"_index":576,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["desir",{"_index":462,"text":{"cli/":{},"cli/#split":{}},"title":{}}],["detail",{"_index":22,"text":{"":{},"#quevedo":{},"cli/":{},"cli/#test":{}},"title":{}}],["detect",{"_index":434,"text":{"cli/":{},"cli/#config":{},"config/":{},"config/#default-configuration":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-web-interface":{},"nets/#detector":{},"nets/#example-configuration":{},"nets/#network-configuration":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["detector",{"_index":343,"text":{"api/":{},"api/#networks":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"api/#quevedonetworknetworknetworkpredict":{},"nets/":{},"nets/#detector":{},"nets/#tag-selection":{}},"title":{"nets/#detector":{}}}],["determin",{"_index":828,"text":{"guide/":{},"guide/#automatically-process-the-data":{},"nets/":{},"nets/#annotation-selection":{}},"title":{}}],["develop",{"_index":70,"text":{"":{},"#development":{},"nets/":{},"nets/#darknet":{},"nets/#neural-networks":{}},"title":{"#development":{}}}],["diagram",{"_index":541,"text":{"concepts/":{},"concepts/#quevedo-datasets":{}},"title":{}}],["dict",{"_index":202,"text":{"api/":{},"api/#quevedoannotationlogogramlogogramupdate":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetget_subsets":{},"config/":{},"config/#annotation-schema":{}},"title":{}}],["dictionari",{"_index":273,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationto_dict":{},"api/#quevedoannotationannotationannotationupdate":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationgraphemegraphemeto_dict":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramto_dict":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkpredict":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"config/":{},"config/#annotation-schema":{}},"title":{}}],["differ",{"_index":41,"text":{"":{},"#features":{},"cli/":{},"cli/#command-line-interface":{},"cli/#split":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#annotation-schema":{},"config/#local-configuration":{},"dev/":{},"dev/#call-from-python":{},"dev/#user-scripts":{},"guide/":{},"guide/#building-a-dataset":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#detector":{},"nets/#network-configuration":{},"nets/#neural-networks":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#logogram-annotation":{}},"title":{}}],["difficulti",{"_index":898,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["digest",{"_index":1095,"text":{"web/":{},"web/#users":{}},"title":{}}],["digit",{"_index":900,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["dir",{"_index":818,"text":{"guide/":{},"guide/#create-repo":{}},"title":{}}],["directli",{"_index":59,"text":{"":{},"#installation":{},"api/":{},"api/#datasets":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"dev/":{},"dev/#call-from-python":{},"dev/#user-scripts":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["directori",{"_index":75,"text":{"":{},"#development":{},"#usage":{},"api/":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetnew_single":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkprepare":{},"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#prepare":{},"cli/#run_script":{},"cli/#test":{},"cli/#train":{},"concepts/":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"config/":{},"config/#annotation-schema":{},"dev/":{},"dev/#call-from-python":{},"dev/#user-scripts":{},"guide/":{},"guide/#add-data":{},"guide/#automatically-process-the-data":{},"guide/#create-repo":{},"guide/#exploitation":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#installation":{},"web_use/":{},"web_use/#user-scripts":{}},"title":{}}],["disabl",{"_index":1005,"text":{"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["disconnect",{"_index":907,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["discuss",{"_index":803,"text":{"dev/":{},"dev/#modifying-quevedo":{}},"title":{}}],["disk",{"_index":601,"text":{"concepts/":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{}},"title":{}}],["display",{"_index":681,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#neural-networks":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["distinguish",{"_index":264,"text":{"api/":{},"api/#annotations":{}},"title":{}}],["distribut",{"_index":112,"text":{"":{},"#about":{},"config/":{},"config/#local-configuration":{},"guide/":{},"guide/#augment-the-data":{},"web/":{},"web/#configuration":{}},"title":{}}],["divid",{"_index":855,"text":{"guide/":{},"guide/#splits-and-folds":{},"web_use/":{},"web_use/#dataset-overview":{}},"title":{}}],["do",{"_index":890,"text":{"guide/":{},"guide/#exploitation":{}},"title":{}}],["document",{"_index":23,"text":{"":{},"#dependencies":{},"#quevedo":{},"api/":{},"api/#networks":{},"config/":{},"config/#dataset-configuration":{},"guide/":{},"guide/#automatically-process-the-data":{},"web/":{},"web/#web-interface":{}},"title":{}}],["doesn't",{"_index":602,"text":{"concepts/":{},"concepts/#dataset-structure":{},"guide/":{},"guide/#automatically-process-the-data":{}},"title":{}}],["doi:10.1145/3065386",{"_index":1049,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["don't",{"_index":156,"text":{"api/":{},"api/#datasets":{},"cli/":{},"cli/#add_images":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#building-a-dataset":{},"nets/":{},"nets/#neural-networks":{},"web/":{},"web/#users":{},"web/#web-interface":{},"web_use/":{},"web_use/#user-scripts":{}},"title":{}}],["done",{"_index":684,"text":{"config/":{},"config/#default-configuration":{},"guide/":{},"guide/#add-data":{},"guide/#splits-and-folds":{}},"title":{}}],["dont_show",{"_index":696,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["down",{"_index":1141,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["download",{"_index":85,"text":{"":{},"#usage":{}},"title":{}}],["drag",{"_index":1143,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["dri",{"_index":882,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["ds",{"_index":165,"text":{"api/":{},"api/#datasets":{},"dev/":{},"dev/#user-scripts":{}},"title":{}}],["ds.get_network('grapheme_classifi",{"_index":176,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["ds.get_single(target.graph",{"_index":171,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["ds.new_single(target.logo",{"_index":181,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["due",{"_index":951,"text":{"nets/":{},"nets/#network-configuration":{}},"title":{}}],["dump",{"_index":309,"text":{"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{}},"title":{}}],["dure",{"_index":1082,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["dvc",{"_index":607,"text":{"concepts/":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"guide/":{},"guide/#add-data":{},"guide/#annotate-the-data":{},"guide/#augment-the-data":{},"guide/#automatically-process-the-data":{},"guide/#building-a-dataset":{},"guide/#create-repo":{},"guide/#train-and-test-the-neural-network":{}},"title":{"concepts/#interaction-with-git-and-dvc":{}}}],["d\u00edaz",{"_index":140,"text":{"":{},"#visse-team":{}},"title":{}}],["e",{"_index":433,"text":{"cli/":{},"cli/#config":{},"cli/#split":{},"guide/":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#example-configuration":{}},"title":{}}],["each",{"_index":247,"text":{"api/":{},"api/#annotations":{},"api/#networks":{},"api/#quevedodatasetdatasetget_subsets":{},"api/#quevedonetworknetworknetworkpredict":{},"cli/":{},"cli/#extract":{},"cli/#run_script":{},"cli/#split":{},"cli/#test":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"nets/":{},"nets/#example-configuration":{},"nets/#tag-selection":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#subset-listing":{}},"title":{}}],["eas",{"_index":110,"text":{"":{},"#about":{},"config/":{},"config/#default-configuration":{}},"title":{}}],["easili",{"_index":617,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["edit",{"_index":417,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#config":{},"config/":{},"config/#dataset-configuration":{},"guide/":{},"guide/#create-repo":{},"nets/":{},"nets/#detector":{},"nets/#installation":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#subset-listing":{},"web_use/#trained-networks":{}},"title":{}}],["editor",{"_index":431,"text":{"cli/":{},"cli/#config":{},"config/":{},"config/#dataset-configuration":{}},"title":{}}],["effici",{"_index":927,"text":{"nets/":{},"nets/#darknet":{}},"title":{}}],["email",{"_index":804,"text":{"dev/":{},"dev/#modifying-quevedo":{},"web/":{},"web/#users":{}},"title":{}}],["emoji",{"_index":1111,"text":{"web_use/":{},"web_use/#dataset-overview":{}},"title":{}}],["empti",{"_index":984,"text":{"nets/":{},"nets/#annotation-selection":{},"web_use/":{},"web_use/#dataset-overview":{}},"title":{}}],["en",{"_index":725,"text":{"config/":{},"config/#default-configuration":{},"web/":{},"web/#interface-options":{}},"title":{}}],["enabl",{"_index":934,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["encod",{"_index":308,"text":{"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{}},"title":{}}],["end",{"_index":467,"text":{"cli/":{},"cli/#split":{},"concepts/":{},"concepts/#dataset-structure":{},"guide/":{},"guide/#splits-and-folds":{},"web_use/":{},"web_use/#subset-listing":{}},"title":{}}],["engin",{"_index":1067,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["english",{"_index":1090,"text":{"web/":{},"web/#interface-options":{},"web/#users":{}},"title":{}}],["english_a",{"_index":1099,"text":{"web/":{},"web/#users":{}},"title":{}}],["enough",{"_index":642,"text":{"config/":{},"config/#dataset-configuration":{},"guide/":{},"guide/#exploitation":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["ensembl",{"_index":957,"text":{"nets/":{},"nets/#network-configuration":{}},"title":{}}],["ensur",{"_index":451,"text":{"cli/":{},"cli/#split":{}},"title":{}}],["enter",{"_index":599,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["entri",{"_index":149,"text":{"api/":{},"api/#datasets":{},"api/#quevedonetworknetworknetworkpredict":{}},"title":{}}],["enum",{"_index":265,"text":{"api/":{},"api/#annotations":{}},"title":{}}],["environ",{"_index":72,"text":{"":{},"#development":{},"config/":{},"config/#local-configuration":{},"guide/":{},"guide/#building-a-dataset":{},"nets/":{},"nets/#installation":{}},"title":{}}],["es",{"_index":1091,"text":{"web/":{},"web/#interface-options":{}},"title":{}}],["essenti",{"_index":646,"text":{"config/":{},"config/#local-configuration":{}},"title":{}}],["esteban",{"_index":141,"text":{"":{},"#visse-team":{}},"title":{}}],["es|en",{"_index":514,"text":{"cli/":{},"cli/#web":{}},"title":{}}],["etc",{"_index":660,"text":{"config/":{},"config/#annotation-schema":{},"guide/":{},"guide/#automatically-process-the-data":{}},"title":{}}],["eval",{"_index":871,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["evalu",{"_index":12,"text":{"":{},"#features":{},"#quevedo":{},"cli/":{},"cli/#command-line-interface":{},"cli/#test":{},"concepts/":{},"concepts/#dataset-structure":{},"guide/":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#network-configuration":{},"nets/#tag-selection":{}},"title":{}}],["even",{"_index":654,"text":{"config/":{},"config/#local-configuration":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["exampl",{"_index":162,"text":{"api/":{},"api/#datasets":{},"cli/":{},"cli/#command-line-interface":{},"cli/#split":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#call-from-python":{},"dev/#user-scripts":{},"guide/":{},"guide/#augment-the-data":{},"guide/#building-a-dataset":{},"guide/#exploitation":{},"nets/":{},"nets/#network-configuration":{},"nets/#tag-selection":{}},"title":{"nets/#example-configuration":{}}}],["except",{"_index":376,"text":{"api/":{},"api/#quevedonetworknetworknetworkprepare":{}},"title":{}}],["excerpt",{"_index":569,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["exclud",{"_index":710,"text":{"config/":{},"config/#default-configuration":{},"guide/":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#annotation-selection":{}},"title":{}}],["execut",{"_index":1007,"text":{"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["exist",{"_index":199,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetnew_single":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#extract":{},"cli/#generate":{},"cli/#train":{},"guide/":{},"guide/#automatically-process-the-data":{}},"title":{}}],["existing='a",{"_index":250,"text":{"api/":{}},"title":{}}],["exit",{"_index":413,"text":{"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#config":{},"cli/#create":{},"cli/#extract":{},"cli/#generate":{},"cli/#info":{},"cli/#migrate":{},"cli/#predict":{},"cli/#prepare":{},"cli/#run_script":{},"cli/#split":{},"cli/#test":{},"cli/#train":{},"cli/#web":{}},"title":{}}],["expect",{"_index":762,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["expens",{"_index":879,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["experi",{"_index":406,"text":{"cli/":{},"cli/#command-line-interface":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"guide/":{},"guide/#exploitation":{},"guide/#splits-and-folds":{}},"title":{}}],["experiment",{"_index":854,"text":{"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["exploit",{"_index":889,"text":{"guide/":{}},"title":{"guide/#exploitation":{}}}],["explor",{"_index":958,"text":{"nets/":{},"nets/#network-configuration":{}},"title":{}}],["exposur",{"_index":717,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#data-augmentation":{},"nets/#example-configuration":{}},"title":{}}],["extend",{"_index":316,"text":{"api/":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationgraphemegraphemeupdate":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramupdate":{},"dev/":{},"dev/#modifying-quevedo":{}},"title":{}}],["extens",{"_index":276,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"cli/":{},"cli/#run_script":{}},"title":{}}],["extern",{"_index":416,"text":{"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["extra",{"_index":57,"text":{"":{},"#installation":{},"#usage":{},"api/":{},"api/#quevedodatasetdatasetnew_single":{},"cli/":{},"cli/#run_script":{}},"title":{}}],["extra_arg",{"_index":516,"text":{"cli/":{},"cli/#run_script":{}},"title":{}}],["extract",{"_index":418,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#extract":{},"concepts/":{},"concepts/#dataset-structure":{},"guide/":{},"guide/#augment-the-data":{}},"title":{"cli/#extract":{}}}],["extracted_grapheme_set",{"_index":844,"text":{"guide/":{},"guide/#augment-the-data":{}},"title":{}}],["extracted_set",{"_index":852,"text":{"guide/":{},"guide/#augment-the-data":{}},"title":{}}],["f",{"_index":135,"text":{"":{},"#visse-team":{},"cli/":{},"cli/#extract":{},"cli/#generate":{},"cli/#test":{},"guide/":{},"guide/#augment-the-data":{}},"title":{}}],["facilit",{"_index":919,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["fact",{"_index":582,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["facultad",{"_index":118,"text":{"":{},"#about":{}},"title":{}}],["fals",{"_index":727,"text":{"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#user-scripts":{},"web/":{},"web/#interface-options":{}},"title":{}}],["farhadi",{"_index":1055,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["faster",{"_index":945,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["featur",{"_index":25,"text":{"":{},"config/":{},"config/#annotation-schema":{}},"title":{"#features":{}}}],["fed",{"_index":1012,"text":{"nets/":{},"nets/#at-the-web-interface":{},"web_use/":{},"web_use/#trained-networks":{}},"title":{}}],["feel",{"_index":1068,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["field",{"_index":914,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["file",{"_index":62,"text":{"":{},"#installation":{},"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedodatasetdatasetget_network":{},"api/#quevedodatasetdatasetnew_single":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkis_prepared":{},"api/#quevedonetworknetworknetworkpredict":{},"api/#quevedonetworknetworknetworkprepare":{},"cli/":{},"cli/#command-line-interface":{},"cli/#config":{},"cli/#generate":{},"cli/#prepare":{},"cli/#split":{},"cli/#test":{},"cli/#train":{},"cli/#web":{},"concepts/":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#annotation-schema":{},"config/#dataset-configuration":{},"config/#default-configuration":{},"config/#local-configuration":{},"guide/":{},"guide/#annotate-the-data":{},"guide/#augment-the-data":{},"guide/#create-repo":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#darknet":{},"nets/#data-augmentation":{},"nets/#detector":{},"nets/#installation":{},"nets/#network-configuration":{},"web/":{},"web/#configuration":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{}},"title":{}}],["filenam",{"_index":275,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"cli/":{},"cli/#add_images":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"dev/":{},"dev/#user-scripts":{},"web_use/":{},"web_use/#logogram-annotation":{},"web_use/#user-scripts":{}},"title":{}}],["filename.split('_",{"_index":782,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["filesystem",{"_index":290,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationannotationannotationsave":{},"api/#quevedoannotationannotationannotationsave_1":{},"api/#quevedoannotationannotationannotationsave_2":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{}},"title":{}}],["fill",{"_index":600,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"guide/":{},"guide/#augment-the-data":{}},"title":{}}],["filter",{"_index":706,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#annotation-selection":{}},"title":{}}],["final",{"_index":870,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#installation":{}},"title":{}}],["financ",{"_index":129,"text":{"":{},"#about":{}},"title":{}}],["find",{"_index":672,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#classifier":{},"nets/#detector":{},"nets/#network-configuration":{}},"title":{}}],["fine",{"_index":974,"text":{"nets/":{},"nets/#at-the-command-line":{},"nets/#detector":{},"nets/#example-configuration":{}},"title":{}}],["finer",{"_index":986,"text":{"nets/":{},"nets/#annotation-selection":{}},"title":{}}],["finish",{"_index":379,"text":{"api/":{},"api/#quevedonetworknetworknetworktrain":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["first",{"_index":480,"text":{"cli/":{},"cli/#generate":{},"config/":{},"config/#default-configuration":{},"guide/":{},"guide/#add-data":{},"guide/#annotate-the-data":{},"guide/#building-a-dataset":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#tag-selection":{},"web_use/":{},"web_use/#trained-networks":{}},"title":{}}],["firstmost",{"_index":518,"text":{"cli/":{},"cli/#run_script":{}},"title":{}}],["flag",{"_index":402,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#prepare":{},"config/":{},"config/#default-configuration":{},"guide/":{},"guide/#add-data":{},"guide/#create-repo":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["flask",{"_index":97,"text":{"":{},"#dependencies":{}},"title":{}}],["fli",{"_index":992,"text":{"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["flip",{"_index":714,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["focu",{"_index":10,"text":{"":{},"#quevedo":{},"concepts/":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#default-configuration":{}},"title":{}}],["fold",{"_index":293,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationupdate":{},"cli/":{},"cli/#command-line-interface":{},"cli/#generate":{},"cli/#split":{},"config/":{},"config/#default-configuration":{},"config/#other-options":{},"guide/":{},"guide/#splits-and-folds":{}},"title":{"guide/#splits-and-folds":{}}}],["fold=non",{"_index":296,"text":{"api/":{}},"title":{}}],["folder",{"_index":1109,"text":{"web_use/":{},"web_use/#dataset-overview":{}},"title":{}}],["follow",{"_index":93,"text":{"":{},"#dependencies":{},"guide/":{},"guide/#building-a-dataset":{},"nets/":{},"nets/#installation":{},"web/":{},"web/#configuration":{},"web/#users":{}},"title":{}}],["forcelayout",{"_index":101,"text":{"":{},"#dependencies":{}},"title":{}}],["fork",{"_index":798,"text":{"dev/":{},"dev/#modifying-quevedo":{},"nets/":{},"nets/#installation":{}},"title":{}}],["form",{"_index":324,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{},"guide/":{},"guide/#annotate-the-data":{},"nets/":{},"nets/#neural-networks":{}},"title":{}}],["format",{"_index":436,"text":{"cli/":{},"cli/#add_images":{},"concepts/":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"config/":{},"config/#annotation-schema":{},"config/#dataset-configuration":{}},"title":{}}],["found",{"_index":20,"text":{"":{},"#quevedo":{},"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedonetworknetworknetworkpredict":{},"concepts/":{},"concepts/#dataset-structure":{},"config/":{},"config/#annotation-schema":{},"config/#dataset-configuration":{},"nets/":{},"nets/#at-the-command-line":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["framework",{"_index":920,"text":{"nets/":{},"nets/#darknet":{}},"title":{}}],["freq",{"_index":752,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["fr\u00e9d\u00e9ric",{"_index":552,"text":{"concepts/":{},"concepts/#quevedo-datasets":{}},"title":{}}],["full",{"_index":272,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"cli/":{},"cli/#command-line-interface":{},"cli/#test":{},"dev/":{},"dev/#call-from-python":{},"guide/":{},"guide/#augment-the-data":{},"nets/":{},"nets/#at-the-command-line":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["function",{"_index":352,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{},"dev/":{},"dev/#call-from-python":{},"dev/#user-scripts":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{}},"title":{}}],["fund",{"_index":125,"text":{"":{},"#about":{}},"title":{}}],["fundaci\u00f3n",{"_index":131,"text":{"":{},"#about":{}},"title":{}}],["fundament",{"_index":1064,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["g",{"_index":136,"text":{"":{},"#visse-team":{},"cli/":{},"cli/#add_images":{},"cli/#run_script":{},"cli/#split":{},"guide/":{},"guide/#add-data":{},"guide/#splits-and-folds":{}},"title":{}}],["gear",{"_index":1127,"text":{"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["gener",{"_index":244,"text":{"api/":{},"api/#networks":{},"api/#quevedodatasetdatasetget_annotations":{},"cli/":{},"cli/#command-line-interface":{},"cli/#generate":{},"cli/#info":{},"config/":{},"config/#default-configuration":{},"config/#other-options":{},"guide/":{},"guide/#augment-the-data":{},"nets/":{},"nets/#data-augmentation":{},"web/":{},"web/#server-options":{},"web/#users":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#subset-listing":{}},"title":{"cli/#generate":{}}}],["generate.param",{"_index":748,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["generated_logogram_set",{"_index":846,"text":{"guide/":{},"guide/#augment-the-data":{}},"title":{}}],["geoffrey",{"_index":1041,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["get",{"_index":214,"text":{"api/":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetget_subsets":{}},"title":{}}],["get_annot",{"_index":208,"text":{"api/":{},"api/#quevedodatasetdataset":{},"api/#quevedonetworknetworknetwork":{}},"title":{"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedonetworknetworknetworkget_annotations":{}}}],["get_network",{"_index":209,"text":{"api/":{},"api/#networks":{},"api/#quevedodatasetdataset":{}},"title":{"api/#quevedodatasetdatasetget_network":{}}}],["get_singl",{"_index":211,"text":{"api/":{},"api/#quevedodatasetdataset":{}},"title":{"api/#quevedodatasetdatasetget_single":{}}}],["get_subset",{"_index":213,"text":{"api/":{},"api/#quevedodatasetdataset":{}},"title":{"api/#quevedodatasetdatasetget_subsets":{}}}],["get_tag",{"_index":351,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{}},"title":{}}],["git",{"_index":606,"text":{"concepts/":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"guide/":{},"guide/#add-data":{},"guide/#annotate-the-data":{},"guide/#building-a-dataset":{},"guide/#create-repo":{},"nets/":{},"nets/#installation":{}},"title":{"concepts/#interaction-with-git-and-dvc":{}}}],["github",{"_index":21,"text":{"":{},"#quevedo":{},"dev/":{},"dev/#modifying-quevedo":{}},"title":{}}],["give",{"_index":805,"text":{"guide/":{},"guide/#building-a-dataset":{},"nets/":{},"nets/#network-configuration":{}},"title":{}}],["given",{"_index":238,"text":{"api/":{},"api/#quevedodatasetdatasetget_annotations":{},"cli/":{},"cli/#extract":{},"cli/#split":{}},"title":{}}],["global",{"_index":403,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#test":{}},"title":{}}],["go",{"_index":1083,"text":{"web/":{},"web/#configuration":{},"web_use/":{},"web_use/#subset-listing":{}},"title":{}}],["goal",{"_index":478,"text":{"cli/":{},"cli/#generate":{},"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["goe",{"_index":525,"text":{"cli/":{},"cli/#migrate":{}},"title":{}}],["gpu",{"_index":938,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["gpu=1",{"_index":935,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["grain",{"_index":1022,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["graphem",{"_index":184,"text":{"api/":{},"api/#annotations":{},"api/#datasets":{},"api/#networks":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationgraphemegraphemeupdate":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramupdate":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"api/#quevedonetworknetworknetworkpredict":{},"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#extract":{},"cli/#generate":{},"cli/#run_script":{},"cli/#split":{},"cli/#web":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"guide/":{},"guide/#add-data":{},"guide/#augment-the-data":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#annotation-selection":{},"nets/#at-the-web-interface":{},"nets/#classifier":{},"nets/#data-augmentation":{},"nets/#detector":{},"nets/#example-configuration":{},"nets/#neural-networks":{},"nets/#tag-selection":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#trained-networks":{},"web_use/#user-scripts":{}},"title":{"api/#quevedoannotationgraphemegrapheme":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#logograms-and-graphemes":{},"web_use/#grapheme-annotation":{}}}],["grapheme'",{"_index":332,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{}},"title":{}}],["grapheme_set",{"_index":845,"text":{"guide/":{},"guide/#augment-the-data":{}},"title":{}}],["graphemes/extracted_set",{"_index":851,"text":{"guide/":{},"guide/#augment-the-data":{}},"title":{}}],["graphemes/logograms/set",{"_index":459,"text":{"cli/":{},"cli/#split":{}},"title":{}}],["graphemes=non",{"_index":321,"text":{"api/":{}},"title":{}}],["graphic",{"_index":837,"text":{"guide/":{},"guide/#annotate-the-data":{},"web/":{},"web/#web-interface":{}},"title":{}}],["group",{"_index":865,"text":{"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["guarante",{"_index":460,"text":{"cli/":{},"cli/#split":{}},"title":{}}],["guid",{"_index":31,"text":{"":{},"#features":{},"config/":{},"config/#default-configuration":{},"config/#other-options":{},"guide/":{},"guide/#building-a-dataset":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["h",{"_index":331,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{},"cli/":{},"cli/#web":{}},"title":{}}],["hand",{"_index":564,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#logograms-and-graphemes":{},"dev/":{},"dev/#user-scripts":{},"nets/":{},"nets/#neural-networks":{}},"title":{}}],["happen",{"_index":990,"text":{"nets/":{},"nets/#annotation-selection":{},"nets/#data-augmentation":{}},"title":{}}],["hard",{"_index":910,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["hash",{"_index":655,"text":{"config/":{},"config/#default-configuration":{},"config/#local-configuration":{},"web/":{},"web/#users":{}},"title":{}}],["hashlib",{"_index":734,"text":{"config/":{},"config/#default-configuration":{},"web/":{},"web/#users":{}},"title":{}}],["have",{"_index":810,"text":{"guide/":{},"guide/#building-a-dataset":{}},"title":{}}],["head",{"_index":960,"text":{"nets/":{},"nets/#network-configuration":{},"web/":{},"web/#configuration":{},"web/#users":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["header",{"_index":997,"text":{"nets/":{},"nets/#data-augmentation":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["height_rang",{"_index":746,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["heldout",{"_index":861,"text":{"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["help",{"_index":91,"text":{"":{},"#usage":{},"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#config":{},"cli/#create":{},"cli/#extract":{},"cli/#generate":{},"cli/#info":{},"cli/#migrate":{},"cli/#predict":{},"cli/#prepare":{},"cli/#run_script":{},"cli/#split":{},"cli/#test":{},"cli/#train":{},"cli/#web":{},"concepts/":{},"concepts/#interaction-with-git-and-dvc":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#call-from-python":{},"dev/#user-scripts":{},"guide/":{},"guide/#building-a-dataset":{},"nets/":{},"nets/#network-configuration":{}},"title":{}}],["here",{"_index":24,"text":{"":{},"#quevedo":{},"#usage":{},"api/":{},"api/#networks":{},"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#call-from-python":{},"guide/":{},"guide/#building-a-dataset":{},"web/":{},"web/#users":{},"web/#web-interface":{}},"title":{}}],["hex",{"_index":1094,"text":{"web/":{},"web/#users":{}},"title":{}}],["hierarch",{"_index":27,"text":{"":{},"#features":{}},"title":{}}],["highli",{"_index":1062,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["hinton",{"_index":1040,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["home",{"_index":0,"text":{},"title":{"":{}}}],["hopefulli",{"_index":843,"text":{"guide/":{},"guide/#augment-the-data":{}},"title":{}}],["host",{"_index":508,"text":{"cli/":{},"cli/#web":{},"config/":{},"config/#default-configuration":{},"web/":{},"web/#server-options":{}},"title":{}}],["https://github.com/alexeyab/darknet",{"_index":932,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["https://www.github.com/agarsev/quevedo",{"_index":673,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["human",{"_index":615,"text":{"concepts/":{},"concepts/#dataset-structure":{},"config/":{},"config/#dataset-configuration":{},"config/#default-configuration":{},"guide/":{},"guide/#annotate-the-data":{},"nets/":{},"nets/#neural-networks":{}},"title":{}}],["icon",{"_index":683,"text":{"config/":{},"config/#default-configuration":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{},"web_use/#subset-listing":{}},"title":{}}],["id",{"_index":212,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetget_single":{},"cli/":{},"cli/#add_images":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["idea",{"_index":799,"text":{"dev/":{},"dev/#modifying-quevedo":{}},"title":{}}],["ideal",{"_index":639,"text":{"config/":{},"config/#dataset-configuration":{},"nets/":{},"nets/#network-configuration":{}},"title":{}}],["identifi",{"_index":277,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["ignor",{"_index":604,"text":{"concepts/":{},"concepts/#dataset-structure":{},"guide/":{},"guide/#building-a-dataset":{},"nets/":{},"nets/#annotation-selection":{}},"title":{}}],["ilya",{"_index":1039,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["imag",{"_index":7,"text":{"":{},"#features":{},"#quevedo":{},"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkpredict":{},"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#predict":{},"concepts/":{},"concepts/#dataset-structure":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#automatically-process-the-data":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#at-the-web-interface":{},"nets/#classifier":{},"nets/#data-augmentation":{},"nets/#detector":{},"nets/#example-configuration":{},"nets/#network-configuration":{},"nets/#neural-networks":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#subset-listing":{},"web_use/#trained-networks":{}},"title":{}}],["image_dir",{"_index":442,"text":{"cli/":{},"cli/#add_images":{}},"title":{}}],["image_path",{"_index":279,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkpredict":{}},"title":{}}],["image_path='path/to/the/imag",{"_index":183,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["image_path=non",{"_index":301,"text":{"api/":{}},"title":{}}],["imagenet",{"_index":1043,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["import",{"_index":163,"text":{"api/":{},"api/#datasets":{},"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"dev/":{},"dev/#call-from-python":{},"dev/#user-scripts":{},"guide/":{},"guide/#add-data":{},"guide/#annotate-the-data":{},"guide/#automatically-process-the-data":{},"guide/#building-a-dataset":{},"nets/":{},"nets/#network-configuration":{},"web/":{},"web/#server-options":{},"web/#users":{}},"title":{}}],["impos",{"_index":578,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["improv",{"_index":800,"text":{"dev/":{},"dev/#modifying-quevedo":{},"guide/":{},"guide/#augment-the-data":{},"nets/":{},"nets/#example-configuration":{}},"title":{}}],["includ",{"_index":26,"text":{"":{},"#about":{},"#features":{},"cli/":{},"cli/#command-line-interface":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"dev/":{},"dev/#call-from-python":{},"dev/#user-scripts":{},"guide/":{},"guide/#augment-the-data":{},"nets/":{},"nets/#annotation-selection":{},"nets/#darknet":{},"nets/#data-augmentation":{},"nets/#example-configuration":{},"nets/#installation":{},"nets/#neural-networks":{},"nets/#tag-selection":{}},"title":{}}],["increas",{"_index":842,"text":{"guide/":{},"guide/#augment-the-data":{}},"title":{}}],["increment",{"_index":396,"text":{"api/":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"nets/":{},"nets/#example-configuration":{}},"title":{}}],["inde",{"_index":1063,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["independ",{"_index":471,"text":{"cli/":{},"cli/#extract":{},"concepts/":{},"concepts/#logograms-and-graphemes":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["indic",{"_index":566,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["individu",{"_index":557,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#classifier":{}},"title":{}}],["indra",{"_index":130,"text":{"":{},"#about":{}},"title":{}}],["info",{"_index":86,"text":{"":{},"#usage":{},"cli/":{},"cli/#command-line-interface":{},"cli/#info":{}},"title":{"cli/#info":{}}}],["inform",{"_index":84,"text":{"":{},"#usage":{},"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationsave":{},"api/#quevedoannotationannotationannotationsave_1":{},"api/#quevedoannotationannotationannotationsave_2":{},"api/#quevedoannotationannotationannotationupdate":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramupdate":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetget_subsets":{},"cli/":{},"cli/#command-line-interface":{},"cli/#extract":{},"cli/#info":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"config/":{},"config/#annotation-schema":{},"config/#local-configuration":{},"guide/":{},"guide/#annotate-the-data":{},"guide/#create-repo":{},"web_use/":{},"web_use/#dataset-overview":{}},"title":{}}],["inform\u00e1tica",{"_index":120,"text":{"":{},"#about":{}},"title":{}}],["infrastructur",{"_index":1072,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["init",{"_index":517,"text":{"cli/":{},"cli/#run_script":{},"guide/":{},"guide/#create-repo":{}},"title":{}}],["initi",{"_index":204,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramupdate":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate":{},"api/#quevedodatasetdatasetnew_single":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworktrain":{},"cli/":{},"cli/#command-line-interface":{},"cli/#create":{},"guide/":{},"guide/#create-repo":{},"nets/":{},"nets/#network-configuration":{}},"title":{}}],["initial=non",{"_index":378,"text":{"api/":{}},"title":{}}],["input",{"_index":899,"text":{"nets/":{},"nets/#neural-networks":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["inspect",{"_index":614,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["instal",{"_index":51,"text":{"":{},"#development":{},"#installation":{},"#usage":{},"config/":{},"config/#local-configuration":{},"config/#other-options":{},"guide/":{},"guide/#building-a-dataset":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#installation":{},"web/":{},"web/#server-options":{}},"title":{"#installation":{},"nets/#installation":{}}}],["instanc",{"_index":158,"text":{"api/":{},"api/#datasets":{},"api/#networks":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"guide/":{},"guide/#augment-the-data":{}},"title":{}}],["instead",{"_index":370,"text":{"api/":{},"api/#quevedonetworknetworknetworkget_annotations":{},"api/#quevedonetworknetworknetworktest":{},"cli/":{},"cli/#config":{},"cli/#test":{},"config/":{},"config/#annotation-schema":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["instruct",{"_index":686,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["integ",{"_index":465,"text":{"cli/":{},"cli/#split":{}},"title":{}}],["intend",{"_index":389,"text":{"api/":{},"api/#quevedonetworknetworknetworktest":{},"web/":{},"web/#users":{},"web/#web-interface":{}},"title":{}}],["interact",{"_index":633,"text":{"concepts/":{},"concepts/#interaction-with-git-and-dvc":{}},"title":{"concepts/#interaction-with-git-and-dvc":{}}}],["interfac",{"_index":39,"text":{"":{},"#about":{},"#features":{},"#installation":{},"#usage":{},"cli/":{},"cli/#command-line-interface":{},"cli/#web":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"config/":{},"config/#default-configuration":{},"config/#local-configuration":{},"config/#other-options":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#annotate-the-data":{},"nets/":{},"nets/#at-the-web-interface":{},"web/":{},"web/#configuration":{},"web/#interface-options":{},"web/#users":{},"web/#web-interface":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#logogram-annotation":{},"web_use/#trained-networks":{},"web_use/#user-scripts":{}},"title":{"cli/":{},"cli/#command-line-interface":{},"nets/#at-the-web-interface":{},"web/":{},"web/#interface-options":{},"web/#web-interface":{},"web_use/":{},"web_use/#using-the-web-interface":{}}}],["intermedi",{"_index":876,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["intern",{"_index":390,"text":{"api/":{},"api/#quevedonetworknetworknetworktest":{}},"title":{}}],["internet",{"_index":1070,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["interpret",{"_index":528,"text":{"concepts/":{},"concepts/#quevedo-datasets":{},"nets/":{},"nets/#neural-networks":{}},"title":{}}],["interrupt",{"_index":384,"text":{"api/":{},"api/#quevedonetworknetworknetworktrain":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["intuit",{"_index":641,"text":{"config/":{},"config/#dataset-configuration":{}},"title":{}}],["inventor",{"_index":922,"text":{"nets/":{},"nets/#darknet":{}},"title":{}}],["invoc",{"_index":1006,"text":{"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["ip",{"_index":1085,"text":{"web/":{},"web/#server-options":{}},"title":{}}],["is_prepar",{"_index":362,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{}},"title":{"api/#quevedonetworknetworknetworkis_prepared":{}}}],["is_test",{"_index":215,"text":{"api/":{},"api/#quevedodatasetdataset":{}},"title":{"api/#quevedodatasetdatasetis_test":{}}}],["is_train",{"_index":219,"text":{"api/":{},"api/#quevedodatasetdataset":{},"api/#quevedonetworknetworknetwork":{}},"title":{"api/#quevedodatasetdatasetis_train":{},"api/#quevedonetworknetworknetworkis_trained":{}}}],["isol",{"_index":271,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramboundgrapheme":{},"config/":{},"config/#annotation-schema":{}},"title":{}}],["issn",{"_index":1050,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["it'",{"_index":755,"text":{"config/":{},"config/#default-configuration":{},"guide/":{},"guide/#add-data":{}},"title":{}}],["italian",{"_index":1024,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["itself",{"_index":341,"text":{"api/":{},"api/#networks":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{}},"title":{}}],["jose",{"_index":142,"text":{"":{},"#visse-team":{}},"title":{}}],["joseph",{"_index":924,"text":{"nets/":{},"nets/#darknet":{},"nets/#example-configuration":{}},"title":{}}],["json",{"_index":283,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"cli/":{},"cli/#test":{},"concepts/":{},"concepts/#dataset-structure":{},"config/":{},"config/#annotation-schema":{},"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["json_path",{"_index":282,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{}},"title":{}}],["keep",{"_index":382,"text":{"api/":{},"api/#quevedonetworknetworknetworktrain":{},"dev/":{},"dev/#call-from-python":{},"dev/#user-scripts":{},"guide/":{},"guide/#building-a-dataset":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["kept",{"_index":789,"text":{"dev/":{},"dev/#user-scripts":{},"nets/":{},"nets/#network-configuration":{}},"title":{}}],["key",{"_index":248,"text":{"api/":{},"api/#quevedoannotationlogogramlogogramupdate":{},"api/#quevedodatasetdatasetget_subsets":{},"api/#quevedonetworknetworknetworkpredict":{},"cli/":{},"cli/#web":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#annotation-selection":{},"nets/#installation":{},"nets/#network-configuration":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["keyboard",{"_index":1142,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["kind",{"_index":955,"text":{"nets/":{},"nets/#network-configuration":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["know",{"_index":949,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["krizhevski",{"_index":1036,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["kwd",{"_index":222,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedodatasetdataset":{}},"title":{}}],["l",{"_index":443,"text":{"cli/":{},"cli/#add_images":{},"cli/#run_script":{},"cli/#split":{},"cli/#web":{},"guide/":{},"guide/#add-data":{},"guide/#automatically-process-the-data":{},"guide/#splits-and-folds":{}},"title":{}}],["la",{"_index":115,"text":{"":{},"#about":{}},"title":{}}],["label",{"_index":354,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{},"nets/":{},"nets/#example-configuration":{},"nets/#tag-selection":{}},"title":{}}],["lahoz",{"_index":144,"text":{"":{},"#visse-team":{}},"title":{}}],["lanch",{"_index":839,"text":{"guide/":{},"guide/#annotate-the-data":{}},"title":{}}],["lang",{"_index":724,"text":{"config/":{},"config/#default-configuration":{},"web/":{},"web/#interface-options":{}},"title":{}}],["languag",{"_index":513,"text":{"cli/":{},"cli/#web":{},"concepts/":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#dataset-configuration":{},"nets/":{},"nets/#neural-networks":{},"web/":{},"web/#interface-options":{}},"title":{}}],["larger",{"_index":688,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["last",{"_index":383,"text":{"api/":{},"api/#quevedonetworknetworknetworktrain":{}},"title":{}}],["later",{"_index":367,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkprepare":{},"api/#quevedonetworknetworknetworktrain":{},"guide/":{},"guide/#create-repo":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["latest",{"_index":423,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#migrate":{}},"title":{}}],["launch",{"_index":87,"text":{"":{},"#usage":{},"cli/":{},"cli/#config":{},"cli/#web":{},"config/":{},"config/#dataset-configuration":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#network-configuration":{},"web/":{},"web/#web-interface":{}},"title":{}}],["lead",{"_index":1129,"text":{"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["leak",{"_index":1104,"text":{"web/":{},"web/#users":{}},"title":{}}],["learn",{"_index":14,"text":{"":{},"#features":{},"#quevedo":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#neural-networks":{}},"title":{}}],["leav",{"_index":983,"text":{"nets/":{},"nets/#annotation-selection":{}},"title":{}}],["left",{"_index":1116,"text":{"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#subset-listing":{}},"title":{}}],["less",{"_index":529,"text":{"concepts/":{},"concepts/#quevedo-datasets":{}},"title":{}}],["let",{"_index":593,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["letter_a",{"_index":187,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["libdarknet.so",{"_index":947,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["librari",{"_index":102,"text":{"":{},"#dependencies":{},"api/":{},"api/#quevedonetworknetworknetworktest":{},"config/":{},"config/#default-configuration":{},"config/#other-options":{},"dev/":{},"dev/#call-from-python":{},"guide/":{},"guide/#exploitation":{},"nets/":{},"nets/#darknet":{},"nets/#example-configuration":{},"nets/#installation":{},"nets/#network-configuration":{}},"title":{"dev/":{},"dev/#quevedo-as-a-library":{}}}],["libso=1",{"_index":942,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["licens",{"_index":104,"text":{"":{},"#about":{}},"title":{}}],["line",{"_index":398,"text":{"cli/":{},"cli/#test":{},"dev/":{},"dev/#quevedo-as-a-library":{},"nets/":{},"web/":{},"web/#web-interface":{}},"title":{"cli/":{},"cli/#command-line-interface":{},"nets/#at-the-command-line":{}}}],["link",{"_index":926,"text":{"nets/":{},"nets/#darknet":{},"nets/#installation":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["linux",{"_index":948,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["list",{"_index":89,"text":{"":{},"#usage":{},"api/":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramupdate":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetget_subsets":{},"api/#quevedodatasetdatasetlist_networks":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkget_annotations":{},"api/#quevedonetworknetworknetworkpredict":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"config/#other-options":{},"dev/":{},"dev/#user-scripts":{},"nets/":{},"nets/#annotation-selection":{},"nets/#at-the-web-interface":{},"nets/#tag-selection":{},"web/":{},"web/#users":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#subset-listing":{},"web_use/#trained-networks":{},"web_use/#user-scripts":{}},"title":{"web_use/#subset-listing":{}}}],["list_network",{"_index":220,"text":{"api/":{},"api/#quevedodatasetdataset":{}},"title":{"api/#quevedodatasetdatasetlist_networks":{}}}],["littl",{"_index":579,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["live",{"_index":43,"text":{"":{},"#features":{},"api/":{},"api/#networks":{},"guide/":{},"guide/#create-repo":{},"nets/":{},"nets/#example-configuration":{}},"title":{}}],["load",{"_index":498,"text":{"cli/":{},"cli/#test":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#exploitation":{}},"title":{}}],["local",{"_index":644,"text":{"config/":{},"config/#default-configuration":{},"config/#local-configuration":{},"web/":{},"web/#configuration":{},"web/#users":{},"web/#web-interface":{}},"title":{"config/#local-configuration":{}}}],["localhost",{"_index":721,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#example-configuration":{}},"title":{}}],["locat",{"_index":1074,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["log",{"_index":1092,"text":{"web/":{},"web/#interface-options":{}},"title":{}}],["logic",{"_index":774,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["login",{"_index":728,"text":{"config/":{},"config/#default-configuration":{},"web/":{},"web/#interface-options":{}},"title":{}}],["logogram",{"_index":260,"text":{"api/":{},"api/#annotations":{},"api/#networks":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramupdate":{},"api/#quevedonetworknetworknetwork":{},"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#extract":{},"cli/#generate":{},"cli/#run_script":{},"cli/#split":{},"cli/#web":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"config/#other-options":{},"guide/":{},"guide/#add-data":{},"guide/#annotate-the-data":{},"guide/#augment-the-data":{},"guide/#automatically-process-the-data":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#annotation-selection":{},"nets/#at-the-web-interface":{},"nets/#data-augmentation":{},"nets/#detector":{},"nets/#example-configuration":{},"nets/#neural-networks":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#logogram-annotation":{}},"title":{"api/#quevedoannotationlogogramlogogram":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#logograms-and-graphemes":{},"web_use/#logogram-annotation":{}}}],["logogram'",{"_index":340,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{}},"title":{}}],["logogram_set",{"_index":823,"text":{"guide/":{},"guide/#add-data":{},"guide/#augment-the-data":{},"guide/#automatically-process-the-data":{}},"title":{}}],["logograms/.gitignor",{"_index":825,"text":{"guide/":{},"guide/#add-data":{}},"title":{}}],["logograms/logogram_set",{"_index":849,"text":{"guide/":{},"guide/#augment-the-data":{}},"title":{}}],["logograms/logogram_set.dvc",{"_index":824,"text":{"guide/":{},"guide/#add-data":{}},"title":{}}],["long",{"_index":585,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{},"guide/":{},"guide/#building-a-dataset":{}},"title":{}}],["look",{"_index":862,"text":{"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["luck",{"_index":930,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["m",{"_index":256,"text":{"api/":{},"api/#quevedodatasetdatasetcreate_subset":{},"cli/":{},"cli/#add_images":{},"cli/#extract":{},"cli/#generate":{},"cli/#web":{},"guide/":{},"guide/#add-data":{},"guide/#annotate-the-data":{},"guide/#create-repo":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["machin",{"_index":13,"text":{"":{},"#quevedo":{},"config/":{},"config/#dataset-configuration":{},"nets/":{},"nets/#neural-networks":{}},"title":{}}],["macro",{"_index":494,"text":{"cli/":{},"cli/#test":{}},"title":{}}],["made",{"_index":364,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkis_prepared":{},"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["madrid",{"_index":123,"text":{"":{},"#about":{}},"title":{}}],["main",{"_index":148,"text":{"api/":{},"api/#datasets":{},"config/":{},"config/#local-configuration":{},"web/":{},"web/#configuration":{},"web_use/":{},"web_use/#dataset-overview":{}},"title":{}}],["make",{"_index":92,"text":{"":{},"#dependencies":{},"api/":{},"api/#annotations":{},"config/":{},"config/#dataset-configuration":{},"config/#default-configuration":{},"dev/":{},"dev/#quevedo-as-a-library":{},"dev/#user-scripts":{},"guide/":{},"guide/#building-a-dataset":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#darknet":{},"nets/#data-augmentation":{},"nets/#detector":{},"nets/#installation":{},"nets/#neural-networks":{},"web_use/":{},"web_use/#user-scripts":{}},"title":{}}],["makefil",{"_index":933,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["manag",{"_index":5,"text":{"":{},"#development":{},"#features":{},"#quevedo":{},"api/":{},"api/#datasets":{},"cli/":{},"cli/#command-line-interface":{},"cli/#web":{},"concepts/":{},"concepts/#dataset-structure":{},"concepts/#logograms-and-graphemes":{},"dev/":{},"dev/#call-from-python":{},"dev/#quevedo-as-a-library":{},"guide/":{},"guide/#building-a-dataset":{},"nets/":{},"nets/#darknet":{},"web/":{},"web/#users":{},"web/#web-interface":{}},"title":{}}],["mani",{"_index":756,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#detector":{}},"title":{}}],["manual",{"_index":598,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"guide/":{},"guide/#augment-the-data":{},"nets/":{},"nets/#at-the-web-interface":{},"web_use/":{},"web_use/#trained-networks":{}},"title":{}}],["map",{"_index":481,"text":{"cli/":{},"cli/#prepare":{}},"title":{}}],["mark",{"_index":486,"text":{"cli/":{},"cli/#test":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["mar\u00eda",{"_index":143,"text":{"":{},"#visse-team":{}},"title":{}}],["match",{"_index":749,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#classifier":{},"web/":{},"web/#users":{}},"title":{}}],["max",{"_index":758,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["maximum",{"_index":468,"text":{"cli/":{},"cli/#split":{}},"title":{}}],["mayb",{"_index":377,"text":{"api/":{},"api/#quevedonetworknetworknetworkprepare":{},"config/":{},"config/#annotation-schema":{},"guide/":{},"guide/#building-a-dataset":{}},"title":{}}],["mean",{"_index":532,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"nets/":{},"nets/#data-augmentation":{},"nets/#neural-networks":{},"web/":{},"web/#users":{}},"title":{}}],["meaning",{"_index":559,"text":{"concepts/":{},"concepts/#dataset-structure":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["meant",{"_index":645,"text":{"config/":{},"config/#local-configuration":{}},"title":{}}],["medium",{"_index":590,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{}},"title":{}}],["memori",{"_index":903,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["merg",{"_index":257,"text":{"api/":{},"api/#quevedodatasetdatasetcreate_subset":{},"cli/":{},"cli/#add_images":{},"cli/#extract":{},"cli/#generate":{}},"title":{}}],["messag",{"_index":414,"text":{"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#config":{},"cli/#create":{},"cli/#extract":{},"cli/#generate":{},"cli/#info":{},"cli/#migrate":{},"cli/#predict":{},"cli/#prepare":{},"cli/#run_script":{},"cli/#split":{},"cli/#test":{},"cli/#train":{},"cli/#web":{},"web/":{},"web/#interface-options":{}},"title":{}}],["meta",{"_index":284,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationupdate":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{}},"title":{}}],["meta=non",{"_index":295,"text":{"api/":{}},"title":{}}],["meta_tag",{"_index":656,"text":{"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{}},"title":{}}],["metadata",{"_index":285,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationannotationannotationupdate":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"concepts/":{},"concepts/#quevedo-datasets":{},"nets/":{},"nets/#darknet":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["method",{"_index":152,"text":{"api/":{},"api/#datasets":{},"api/#networks":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationannotationannotationsave":{},"api/#quevedoannotationannotationannotationsave_1":{},"api/#quevedoannotationannotationannotationsave_2":{},"api/#quevedoannotationannotationannotationto_dict":{},"api/#quevedoannotationannotationannotationupdate":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationgraphemegraphemeupdate":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramupdate":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedodatasetdatasetget_network":{},"api/#quevedodatasetdatasetget_single":{},"api/#quevedodatasetdatasetget_subsets":{},"api/#quevedodatasetdatasetis_train":{},"api/#quevedodatasetdatasetlist_networks":{},"api/#quevedodatasetdatasetnew_single":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkget_annotations":{},"api/#quevedonetworknetworknetworkis_prepared":{},"api/#quevedonetworknetworknetworkis_trained":{},"api/#quevedonetworknetworknetworkpredict":{},"api/#quevedonetworknetworknetworkprepare":{},"api/#quevedonetworknetworknetworktest":{},"api/#quevedonetworknetworknetworktrain":{},"cli/":{},"cli/#run_script":{},"dev/":{},"dev/#call-from-python":{}},"title":{}}],["metric",{"_index":428,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#test":{},"concepts/":{},"concepts/#dataset-structure":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#network-configuration":{}},"title":{}}],["micro",{"_index":493,"text":{"cli/":{},"cli/#test":{}},"title":{}}],["migrat",{"_index":421,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#migrate":{},"config/":{},"config/#annotation-schema":{},"guide/":{},"guide/#splits-and-folds":{}},"title":{"cli/#migrate":{}}}],["minimum",{"_index":466,"text":{"cli/":{},"cli/#split":{}},"title":{}}],["mistak",{"_index":809,"text":{"guide/":{},"guide/#building-a-dataset":{},"web/":{},"web/#users":{}},"title":{}}],["mit",{"_index":113,"text":{"":{},"#about":{}},"title":{}}],["mjpeg_port",{"_index":697,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#example-configuration":{}},"title":{}}],["mkdir",{"_index":830,"text":{"guide/":{},"guide/#automatically-process-the-data":{}},"title":{}}],["mkdoc",{"_index":103,"text":{"":{},"#dependencies":{}},"title":{}}],["mode",{"_index":750,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["modern",{"_index":547,"text":{"concepts/":{},"concepts/#quevedo-datasets":{},"web/":{},"web/#web-interface":{}},"title":{}}],["modif",{"_index":841,"text":{"guide/":{},"guide/#annotate-the-data":{},"web_use/":{},"web_use/#user-scripts":{}},"title":{}}],["modifi",{"_index":395,"text":{"api/":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"concepts/":{},"concepts/#dataset-structure":{},"config/":{},"config/#dataset-configuration":{},"config/#default-configuration":{},"dev/":{},"dev/#modifying-quevedo":{},"dev/#user-scripts":{},"guide/":{},"guide/#create-repo":{},"nets/":{},"nets/#data-augmentation":{},"nets/#network-configuration":{},"web/":{},"web/#users":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{"dev/#modifying-quevedo":{}}}],["modul",{"_index":68,"text":{"":{},"#installation":{},"nets/":{},"nets/#darknet":{},"nets/#neural-networks":{}},"title":{}}],["more",{"_index":88,"text":{"":{},"#usage":{},"cli/":{},"cli/#test":{},"config/":{},"config/#default-configuration":{},"config/#other-options":{},"dev/":{},"dev/#call-from-python":{},"dev/#quevedo-as-a-library":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"web/":{},"web/#users":{},"web/#web-interface":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["mount",{"_index":510,"text":{"cli/":{},"cli/#web":{},"web/":{},"web/#server-options":{}},"title":{}}],["mount_path",{"_index":723,"text":{"config/":{},"config/#default-configuration":{},"web/":{},"web/#server-options":{}},"title":{}}],["move",{"_index":1138,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["movement",{"_index":567,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["multi",{"_index":676,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#tag-selection":{}},"title":{}}],["multifacet",{"_index":1033,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["multipl",{"_index":587,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"guide/":{},"guide/#add-data":{}},"title":{}}],["music",{"_index":538,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{}},"title":{}}],["my_new_subset",{"_index":182,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["n",{"_index":401,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#prepare":{},"guide/":{},"guide/#augment-the-data":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["name",{"_index":206,"text":{"api/":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedodatasetdatasetget_network":{},"api/#quevedodatasetdatasetget_single":{},"api/#quevedodatasetdatasetget_subsets":{},"api/#quevedodatasetdatasetnew_single":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkpredict":{},"cli/":{},"cli/#prepare":{},"cli/#run_script":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#annotation-schema":{},"config/#dataset-configuration":{},"config/#default-configuration":{},"nets/":{},"nets/#annotation-selection":{},"nets/#at-the-command-line":{},"nets/#installation":{},"web_use/":{},"web_use/#user-scripts":{}},"title":{}}],["natur",{"_index":970,"text":{"nets/":{},"nets/#detector":{}},"title":{}}],["navig",{"_index":1121,"text":{"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["necessari",{"_index":263,"text":{"api/":{},"api/#annotations":{},"api/#quevedoannotationlogogramlogogramupdate":{},"guide/":{},"guide/#building-a-dataset":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#installation":{},"nets/#neural-networks":{}},"title":{}}],["necessarili",{"_index":1010,"text":{"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["need",{"_index":69,"text":{"":{},"#installation":{},"#usage":{},"api/":{},"api/#datasets":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkprepare":{},"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#prepare":{},"concepts/":{},"concepts/#dataset-structure":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#annotate-the-data":{},"guide/#building-a-dataset":{},"guide/#create-repo":{},"guide/#exploitation":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#darknet":{},"nets/#installation":{},"web/":{},"web/#users":{},"web/#web-interface":{}},"title":{}}],["net",{"_index":174,"text":{"api/":{},"api/#datasets":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkprepare":{},"cli/":{},"cli/#prepare":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#network-configuration":{}},"title":{}}],["net.auto_annotate(annot",{"_index":177,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["network",{"_index":48,"text":{"":{},"#features":{},"#installation":{},"api/":{},"api/#networks":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetget_network":{},"api/#quevedodatasetdatasetlist_networks":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"api/#quevedonetworknetworknetworkget_annotations":{},"api/#quevedonetworknetworknetworkis_prepared":{},"api/#quevedonetworknetworknetworkis_trained":{},"api/#quevedonetworknetworknetworkpredict":{},"api/#quevedonetworknetworknetworkprepare":{},"api/#quevedonetworknetworknetworktest":{},"api/#quevedonetworknetworknetworktrain":{},"cli/":{},"cli/#command-line-interface":{},"cli/#predict":{},"cli/#prepare":{},"cli/#test":{},"cli/#train":{},"concepts/":{},"concepts/#dataset-structure":{},"config/":{},"config/#default-configuration":{},"config/#other-options":{},"dev/":{},"dev/#call-from-python":{},"dev/#user-scripts":{},"guide/":{},"guide/#exploitation":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#annotation-selection":{},"nets/#at-the-command-line":{},"nets/#at-the-web-interface":{},"nets/#classifier":{},"nets/#darknet":{},"nets/#data-augmentation":{},"nets/#detector":{},"nets/#example-configuration":{},"nets/#network-configuration":{},"nets/#neural-networks":{},"nets/#tag-selection":{},"web_use/":{},"web_use/#logogram-annotation":{},"web_use/#trained-networks":{}},"title":{"api/#networks":{},"api/#quevedonetworknetworknetwork":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#network-configuration":{},"nets/#neural-networks":{},"web_use/#trained-networks":{}}}],["network'",{"_index":397,"text":{"api/":{},"api/#quevedonetworknetworknetworkauto_annotate":{}},"title":{}}],["network.<network_nam",{"_index":961,"text":{"nets/":{},"nets/#network-configuration":{}},"title":{}}],["network.<network_name>.aug",{"_index":998,"text":{"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["network.alt",{"_index":1031,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["network.altered.filt",{"_index":1035,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["network.logogram",{"_index":1023,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["network.on",{"_index":699,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["network.oth",{"_index":719,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["network.shap",{"_index":1026,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["network.shapes.aug",{"_index":1029,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["network.two",{"_index":705,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["network.two.aug",{"_index":712,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["network.two.filt",{"_index":707,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["network_1",{"_index":629,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["network_2",{"_index":632,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["network_nam",{"_index":1011,"text":{"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["networks/detect/darknet_final.weight",{"_index":886,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["networks/detect/results.json",{"_index":888,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["networks/detect/train.txt",{"_index":884,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["neural",{"_index":67,"text":{"":{},"#installation":{},"api/":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetget_network":{},"api/#quevedodatasetdatasetlist_networks":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkis_prepared":{},"api/#quevedonetworknetworknetworkis_trained":{},"api/#quevedonetworknetworknetworkpredict":{},"api/#quevedonetworknetworknetworktrain":{},"cli/":{},"cli/#command-line-interface":{},"cli/#predict":{},"cli/#test":{},"cli/#train":{},"concepts/":{},"concepts/#dataset-structure":{},"config/":{},"config/#other-options":{},"dev/":{},"dev/#call-from-python":{},"dev/#user-scripts":{},"guide/":{},"guide/#exploitation":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#annotation-selection":{},"nets/#at-the-command-line":{},"nets/#at-the-web-interface":{},"nets/#darknet":{},"nets/#example-configuration":{},"nets/#network-configuration":{},"nets/#neural-networks":{},"web_use/":{},"web_use/#trained-networks":{}},"title":{"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#neural-networks":{}}}],["new",{"_index":207,"text":{"api/":{},"api/#quevedoannotationgraphemegraphemeupdate":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetnew_single":{},"cli/":{},"cli/#add_images":{},"cli/#extract":{},"cli/#generate":{},"guide/":{},"guide/#splits-and-folds":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#subset-listing":{},"web_use/#trained-networks":{}},"title":{}}],["new_a",{"_index":180,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["new_singl",{"_index":221,"text":{"api/":{},"api/#quevedodatasetdataset":{}},"title":{"api/#quevedodatasetdatasetnew_single":{}}}],["next",{"_index":1122,"text":{"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["nice",{"_index":634,"text":{"concepts/":{},"concepts/#interaction-with-git-and-dvc":{}},"title":{}}],["none",{"_index":65,"text":{"":{},"#installation":{},"api/":{},"api/#quevedodatasetdatasetget_annotations":{},"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#splits-and-folds":{},"web/":{},"web/#users":{}},"title":{}}],["notat",{"_index":539,"text":{"concepts/":{},"concepts/#quevedo-datasets":{}},"title":{}}],["note",{"_index":570,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#detector":{},"web/":{},"web/#web-interface":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#user-scripts":{}},"title":{}}],["noth",{"_index":258,"text":{"api/":{},"api/#quevedodatasetdatasetcreate_subset":{}},"title":{}}],["now",{"_index":435,"text":{"cli/":{},"cli/#add_images":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"web/":{},"web/#interface-options":{}},"title":{}}],["number",{"_index":228,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedodatasetdatasetget_single":{},"api/#quevedodatasetdatasetget_subsets":{},"cli/":{},"cli/#split":{},"concepts/":{},"concepts/#dataset-structure":{},"config/":{},"config/#default-configuration":{},"guide/":{},"guide/#augment-the-data":{},"guide/#splits-and-folds":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{}},"title":{}}],["number>.json",{"_index":611,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["number>.png",{"_index":610,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["numer",{"_index":445,"text":{"cli/":{},"cli/#add_images":{}},"title":{}}],["nvcc",{"_index":940,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["o",{"_index":850,"text":{"guide/":{},"guide/#augment-the-data":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["object",{"_index":147,"text":{"api/":{},"api/#datasets":{},"api/#networks":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedodatasetdatasetget_network":{},"cli/":{},"cli/#command-line-interface":{},"cli/#run_script":{},"cli/#web":{},"config/":{},"config/#annotation-schema":{},"dev/":{},"dev/#quevedo-as-a-library":{},"dev/#user-scripts":{},"nets/":{},"nets/#detector":{},"nets/#neural-networks":{}},"title":{}}],["object'",{"_index":326,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{}},"title":{}}],["obtain",{"_index":482,"text":{"cli/":{},"cli/#train":{},"guide/":{},"guide/#exploitation":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["oemmler",{"_index":542,"text":{"concepts/":{},"concepts/#quevedo-datasets":{}},"title":{}}],["offer",{"_index":589,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"guide/":{},"guide/#create-repo":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["offlin",{"_index":111,"text":{"":{},"#about":{}},"title":{}}],["ok",{"_index":1128,"text":{"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["old",{"_index":444,"text":{"cli/":{},"cli/#add_images":{},"cli/#extract":{},"cli/#generate":{},"config/":{},"config/#annotation-schema":{}},"title":{}}],["older",{"_index":663,"text":{"config/":{},"config/#annotation-schema":{}},"title":{}}],["on",{"_index":304,"text":{"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#config":{},"cli/#extract":{},"cli/#generate":{},"cli/#split":{},"cli/#test":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#default-configuration":{},"guide/":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#at-the-web-interface":{},"nets/#neural-networks":{},"web/":{},"web/#server-options":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["onc",{"_index":463,"text":{"cli/":{},"cli/#run_script":{},"cli/#split":{},"guide/":{},"guide/#add-data":{},"guide/#augment-the-data":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["op",{"_index":549,"text":{"concepts/":{},"concepts/#quevedo-datasets":{}},"title":{}}],["open",{"_index":94,"text":{"":{},"#about":{},"#dependencies":{},"cli/":{},"cli/#config":{},"config/":{},"config/#dataset-configuration":{},"dev/":{},"dev/#modifying-quevedo":{},"nets/":{},"nets/#darknet":{},"web/":{},"web/#web-interface":{}},"title":{}}],["opencv",{"_index":897,"text":{"guide/":{},"guide/#exploitation":{},"nets/":{},"nets/#installation":{}},"title":{}}],["opencv=1",{"_index":944,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["oper",{"_index":1132,"text":{"web_use/":{},"web_use/#user-scripts":{}},"title":{}}],["opportun",{"_index":817,"text":{"guide/":{},"guide/#create-repo":{}},"title":{}}],["option",{"_index":82,"text":{"":{},"#usage":{},"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationannotationannotationupdate":{},"api/#quevedoannotationgraphemegraphemeupdate":{},"api/#quevedoannotationlogogramlogogramupdate":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedonetworknetworknetworkget_annotations":{},"api/#quevedonetworknetworknetworktrain":{},"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#config":{},"cli/#create":{},"cli/#extract":{},"cli/#generate":{},"cli/#info":{},"cli/#migrate":{},"cli/#predict":{},"cli/#prepare":{},"cli/#run_script":{},"cli/#split":{},"cli/#test":{},"cli/#train":{},"cli/#web":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"config/#local-configuration":{},"config/#other-options":{},"nets/":{},"nets/#annotation-selection":{},"nets/#at-the-command-line":{},"nets/#data-augmentation":{},"nets/#example-configuration":{},"nets/#installation":{},"nets/#network-configuration":{},"web/":{},"web/#configuration":{},"web/#users":{},"web/#web-interface":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{"config/#other-options":{},"web/#interface-options":{},"web/#server-options":{}}}],["order",{"_index":977,"text":{"nets/":{},"nets/#tag-selection":{}},"title":{}}],["organ",{"_index":28,"text":{"":{},"#features":{},"concepts/":{},"concepts/#dataset-structure":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["origin",{"_index":574,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#building-a-dataset":{}},"title":{}}],["other",{"_index":647,"text":{"config/":{},"config/#local-configuration":{}},"title":{}}],["other_network",{"_index":874,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["other_subset",{"_index":628,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["otherwis",{"_index":835,"text":{"guide/":{},"guide/#annotate-the-data":{},"nets/":{},"nets/#annotation-selection":{},"nets/#installation":{}},"title":{}}],["out",{"_index":339,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{},"guide/":{},"guide/#building-a-dataset":{},"nets/":{},"nets/#network-configuration":{}},"title":{}}],["output",{"_index":1009,"text":{"nets/":{},"nets/#at-the-command-line":{},"web_use/":{},"web_use/#trained-networks":{}},"title":{}}],["outsid",{"_index":1148,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["over",{"_index":473,"text":{"cli/":{},"cli/#extract":{}},"title":{}}],["overfit",{"_index":995,"text":{"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["overlap",{"_index":595,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{}},"title":{}}],["overrid",{"_index":448,"text":{"cli/":{},"cli/#split":{},"config/":{},"config/#default-configuration":{},"config/#local-configuration":{}},"title":{}}],["overriden",{"_index":297,"text":{"api/":{},"api/#quevedoannotationannotationannotationupdate":{}},"title":{}}],["overview",{"_index":1108,"text":{"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{},"web_use/#subset-listing":{}},"title":{"web_use/#dataset-overview":{}}}],["p",{"_index":408,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#test":{},"cli/#web":{}},"title":{}}],["page",{"_index":504,"text":{"cli/":{},"cli/#web":{},"dev/":{},"dev/#user-scripts":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#subset-listing":{}},"title":{}}],["paramet",{"_index":198,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationannotationannotationupdate":{},"api/#quevedoannotationgraphemegraphemeupdate":{},"api/#quevedoannotationlogogramlogogramupdate":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedodatasetdatasetget_network":{},"api/#quevedodatasetdatasetget_single":{},"api/#quevedodatasetdatasetget_subsets":{},"api/#quevedodatasetdatasetnew_single":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"api/#quevedonetworknetworknetworkget_annotations":{},"api/#quevedonetworknetworknetworkpredict":{},"api/#quevedonetworknetworknetworktrain":{},"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["parent",{"_index":262,"text":{"api/":{},"api/#annotations":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedonetworknetworknetwork":{}},"title":{}}],["part",{"_index":16,"text":{"":{},"#about":{},"#quevedo":{},"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{},"config/":{},"config/#local-configuration":{},"web/":{},"web/#web-interface":{}},"title":{}}],["partial",{"_index":380,"text":{"api/":{},"api/#quevedonetworknetworknetworktrain":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["particular",{"_index":452,"text":{"cli/":{},"cli/#split":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#interaction-with-git-and-dvc":{},"concepts/#logograms-and-graphemes":{},"nets/":{},"nets/#annotation-selection":{},"nets/#data-augmentation":{}},"title":{}}],["partit",{"_index":30,"text":{"":{},"#features":{},"config/":{},"config/#other-options":{},"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["pass",{"_index":233,"text":{"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationgraphemegraphemeupdate":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramupdate":{},"api/#quevedodatasetdatasetnew_single":{},"cli/":{},"cli/#run_script":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#example-configuration":{}},"title":{}}],["password",{"_index":653,"text":{"config/":{},"config/#default-configuration":{},"config/#local-configuration":{},"web/":{},"web/#users":{}},"title":{}}],["path",{"_index":194,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkpredict":{},"api/#quevedonetworknetworknetworktrain":{},"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#predict":{},"cli/#prepare":{},"cli/#run_script":{},"cli/#web":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#example-configuration":{},"nets/#installation":{},"web/":{},"web/#server-options":{}},"title":{}}],["path/to/dataset",{"_index":407,"text":{"cli/":{},"cli/#command-line-interface":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["path/to/new/dataset",{"_index":80,"text":{"":{},"#usage":{}},"title":{}}],["pathlib.path",{"_index":203,"text":{"api/":{},"api/#quevedodatasetdataset":{}},"title":{}}],["pattern",{"_index":909,"text":{"nets/":{},"nets/#network-configuration":{},"nets/#neural-networks":{}},"title":{}}],["peopl",{"_index":848,"text":{"guide/":{},"guide/#augment-the-data":{},"web/":{},"web/#web-interface":{}},"title":{}}],["perform",{"_index":479,"text":{"cli/":{},"cli/#generate":{},"concepts/":{},"concepts/#dataset-structure":{},"guide/":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#detector":{},"nets/#tag-selection":{}},"title":{}}],["perman",{"_index":1079,"text":{"web/":{},"web/#web-interface":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["persist",{"_index":289,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationannotationannotationsave":{},"api/#quevedoannotationannotationannotationsave_1":{},"api/#quevedoannotationannotationannotationsave_2":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{}},"title":{}}],["person",{"_index":671,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["perus",{"_index":591,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"guide/":{},"guide/#exploitation":{},"nets/":{},"nets/#network-configuration":{}},"title":{}}],["pil.image.imag",{"_index":278,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedoannotationlogogramlogogram":{}},"title":{}}],["pil_imag",{"_index":287,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedoannotationlogogramlogogram":{}},"title":{}}],["pil_image=non",{"_index":303,"text":{"api/":{}},"title":{}}],["pip",{"_index":55,"text":{"":{},"#installation":{}},"title":{}}],["pipelin",{"_index":847,"text":{"guide/":{},"guide/#augment-the-data":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["pixel",{"_index":902,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["place",{"_index":234,"text":{"api/":{},"api/#quevedodatasetdatasetnew_single":{},"cli/":{},"cli/#extract":{},"cli/#generate":{},"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#user-scripts":{}},"title":{}}],["placement",{"_index":747,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["platform",{"_index":1112,"text":{"web_use/":{},"web_use/#dataset-overview":{}},"title":{}}],["pleas",{"_index":522,"text":{"cli/":{},"cli/#migrate":{},"config/":{},"config/#annotation-schema":{},"dev/":{},"dev/#modifying-quevedo":{},"guide/":{},"guide/#building-a-dataset":{},"guide/#splits-and-folds":{},"web/":{},"web/#users":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#user-scripts":{}},"title":{}}],["plu",{"_index":280,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{}},"title":{}}],["png",{"_index":281,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"cli/":{},"cli/#add_images":{},"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["poetri",{"_index":71,"text":{"":{},"#dependencies":{},"#development":{}},"title":{}}],["point",{"_index":150,"text":{"api/":{},"api/#datasets":{},"guide/":{},"guide/#create-repo":{},"nets/":{},"nets/#installation":{}},"title":{}}],["port",{"_index":509,"text":{"cli/":{},"cli/#web":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#example-configuration":{},"web/":{},"web/#server-options":{},"web/#web-interface":{}},"title":{}}],["posit",{"_index":666,"text":{"config/":{},"config/#annotation-schema":{},"nets/":{},"nets/#neural-networks":{}},"title":{}}],["possibl",{"_index":387,"text":{"api/":{},"api/#quevedonetworknetworknetworkpredict":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{}},"title":{}}],["potenti",{"_index":757,"text":{"config/":{},"config/#default-configuration":{},"web_use/":{},"web_use/#user-scripts":{}},"title":{}}],["preactj",{"_index":98,"text":{"":{},"#about":{},"#dependencies":{}},"title":{}}],["precis",{"_index":488,"text":{"cli/":{},"cli/#test":{}},"title":{}}],["predict",{"_index":350,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"api/#quevedonetworknetworknetworkis_trained":{},"api/#quevedonetworknetworknetworkpredict":{},"api/#quevedonetworknetworknetworkprepare":{},"api/#quevedonetworknetworknetworktest":{},"cli/":{},"cli/#command-line-interface":{},"cli/#predict":{},"cli/#test":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#at-the-web-interface":{},"nets/#darknet":{},"web_use/":{},"web_use/#trained-networks":{}},"title":{"api/#quevedonetworknetworknetworkpredict":{},"cli/#predict":{}}}],["prediction_to_tag",{"_index":357,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{}},"title":{}}],["predictions.csv",{"_index":501,"text":{"cli/":{},"cli/#test":{}},"title":{}}],["prefer",{"_index":918,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["preliminari",{"_index":826,"text":{"guide/":{},"guide/#automatically-process-the-data":{}},"title":{}}],["prelud",{"_index":548,"text":{"concepts/":{},"concepts/#quevedo-datasets":{}},"title":{}}],["prepar",{"_index":366,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{},"cli/":{},"cli/#command-line-interface":{},"cli/#prepare":{},"cli/#train":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#darknet":{},"nets/#detector":{},"nets/#network-configuration":{}},"title":{"api/#quevedonetworknetworknetworkprepare":{},"cli/#prepare":{}}}],["prepare_detect",{"_index":883,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["preprint",{"_index":1059,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["preprocess",{"_index":829,"text":{"guide/":{},"guide/#automatically-process-the-data":{}},"title":{}}],["present",{"_index":651,"text":{"config/":{},"config/#local-configuration":{},"nets/":{},"nets/#example-configuration":{},"nets/#neural-networks":{},"web_use/":{},"web_use/#dataset-overview":{}},"title":{}}],["press",{"_index":1015,"text":{"nets/":{},"nets/#at-the-web-interface":{},"web/":{},"web/#web-interface":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["prevent",{"_index":1102,"text":{"web/":{},"web/#users":{}},"title":{}}],["preview",{"_index":1114,"text":{"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#subset-listing":{}},"title":{}}],["previou",{"_index":485,"text":{"cli/":{},"cli/#train":{},"guide/":{},"guide/#splits-and-folds":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["print",{"_index":496,"text":{"cli/":{},"cli/#test":{},"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["print(annotation.to_dict",{"_index":173,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["print(hashlib.new(\"sha1",{"_index":735,"text":{"config/":{},"config/#default-configuration":{},"web/":{},"web/#users":{}},"title":{}}],["print(token_hex(16",{"_index":730,"text":{"config/":{},"config/#default-configuration":{},"web/":{},"web/#server-options":{}},"title":{}}],["prob",{"_index":759,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["probabl",{"_index":391,"text":{"api/":{},"api/#quevedonetworknetworknetworktest":{},"config/":{},"config/#default-configuration":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#installation":{}},"title":{}}],["problem",{"_index":575,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#user-scripts":{},"nets/":{},"nets/#network-configuration":{}},"title":{}}],["procedur",{"_index":770,"text":{"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#augment-the-data":{}},"title":{}}],["process",{"_index":45,"text":{"":{},"#features":{},"api/":{},"api/#annotations":{},"api/#networks":{},"cli/":{},"cli/#command-line-interface":{},"cli/#generate":{},"cli/#run_script":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"config/":{},"config/#other-options":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#augment-the-data":{},"guide/#automatically-process-the-data":{},"guide/#building-a-dataset":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#darknet":{},"nets/#neural-networks":{}},"title":{"guide/#automatically-process-the-data":{}}}],["process(a",{"_index":785,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["produc",{"_index":880,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#detector":{},"nets/#tag-selection":{}},"title":{}}],["product",{"_index":1080,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["prof.rick",{"_index":554,"text":{"concepts/":{},"concepts/#quevedo-datasets":{}},"title":{}}],["program",{"_index":124,"text":{"":{},"#about":{},"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["programat",{"_index":763,"text":{"dev/":{},"dev/#quevedo-as-a-library":{}},"title":{}}],["progress",{"_index":1020,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["project",{"_index":18,"text":{"":{},"#about":{},"#dependencies":{},"#quevedo":{},"web/":{},"web/#web-interface":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["promot",{"_index":325,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{}},"title":{}}],["proper",{"_index":349,"text":{"api/":{},"api/#networks":{}},"title":{}}],["properli",{"_index":869,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{},"web_use/":{},"web_use/#user-scripts":{}},"title":{}}],["properti",{"_index":993,"text":{"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["proport",{"_index":458,"text":{"cli/":{},"cli/#split":{}},"title":{}}],["provid",{"_index":151,"text":{"api/":{},"api/#datasets":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetget_network":{},"cli/":{},"cli/#web":{},"config/":{},"config/#dataset-configuration":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#annotate-the-data":{},"web/":{},"web/#interface-options":{},"web/#users":{},"web/#web-interface":{}},"title":{}}],["proyecto",{"_index":117,"text":{"":{},"#about":{}},"title":{}}],["public",{"_index":726,"text":{"config/":{},"config/#default-configuration":{},"web/":{},"web/#interface-options":{},"web/#users":{}},"title":{}}],["publicli",{"_index":1084,"text":{"web/":{},"web/#configuration":{}},"title":{}}],["purpos",{"_index":963,"text":{"nets/":{},"nets/#network-configuration":{}},"title":{}}],["put",{"_index":751,"text":{"config/":{},"config/#default-configuration":{},"web/":{},"web/#users":{}},"title":{}}],["py",{"_index":620,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["py3",{"_index":64,"text":{"":{},"#installation":{}},"title":{}}],["pypi",{"_index":54,"text":{"":{},"#installation":{}},"title":{}}],["python",{"_index":3,"text":{"":{},"#dependencies":{},"#installation":{},"#quevedo":{},"concepts/":{},"concepts/#dataset-structure":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"dev/":{},"dev/#call-from-python":{},"dev/#quevedo-as-a-library":{},"web/":{},"web/#server-options":{},"web/#users":{}},"title":{"dev/#call-from-python":{}}}],["quevedo",{"_index":1,"text":{"":{},"#about":{},"#dependencies":{},"#development":{},"#installation":{},"#quevedo":{},"#usage":{},"api/":{},"api/#annotations":{},"api/#datasets":{},"api/#networks":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate":{},"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#config":{},"cli/#create":{},"cli/#extract":{},"cli/#generate":{},"cli/#info":{},"cli/#migrate":{},"cli/#predict":{},"cli/#prepare":{},"cli/#run_script":{},"cli/#split":{},"cli/#test":{},"cli/#train":{},"cli/#web":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#annotation-schema":{},"config/#dataset-configuration":{},"config/#default-configuration":{},"config/#local-configuration":{},"dev/":{},"dev/#call-from-python":{},"dev/#modifying-quevedo":{},"dev/#quevedo-as-a-library":{},"dev/#user-scripts":{},"guide/":{},"guide/#add-data":{},"guide/#annotate-the-data":{},"guide/#augment-the-data":{},"guide/#automatically-process-the-data":{},"guide/#building-a-dataset":{},"guide/#create-repo":{},"guide/#exploitation":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#annotation-selection":{},"nets/#at-the-command-line":{},"nets/#classifier":{},"nets/#darknet":{},"nets/#data-augmentation":{},"nets/#detector":{},"nets/#installation":{},"nets/#network-configuration":{},"nets/#neural-networks":{},"nets/#tag-selection":{},"web/":{},"web/#web-interface":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{"#quevedo":{},"concepts/":{},"concepts/#quevedo-datasets":{},"dev/":{},"dev/#modifying-quevedo":{},"dev/#quevedo-as-a-library":{}}}],["quevedo'",{"_index":531,"text":{"concepts/":{},"concepts/#quevedo-datasets":{},"web_use/":{},"web_use/#dataset-overview":{}},"title":{}}],["quevedo.annot",{"_index":170,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["quevedo.annotation.annotation.annot",{"_index":315,"text":{"api/":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{}},"title":{}}],["quevedo.graphem",{"_index":168,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["quevedo.logogram",{"_index":179,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["quevedo.network",{"_index":175,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["quevedo[web",{"_index":58,"text":{"":{},"#installation":{}},"title":{}}],["quick",{"_index":872,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["quicker",{"_index":1118,"text":{"web_use/":{},"web_use/#subset-listing":{}},"title":{}}],["quickli",{"_index":1113,"text":{"web_use/":{},"web_use/#subset-listing":{}},"title":{}}],["quit",{"_index":1075,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["r",{"_index":254,"text":{"api/":{},"api/#quevedodatasetdatasetcreate_subset":{},"cli/":{},"cli/#add_images":{},"cli/#extract":{},"cli/#generate":{},"cli/#test":{},"concepts/":{},"concepts/#dataset-structure":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["random",{"_index":470,"text":{"cli/":{},"cli/#split":{},"web/":{},"web/#server-options":{}},"title":{}}],["randomli",{"_index":426,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#generate":{},"cli/#split":{},"guide/":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["rang",{"_index":336,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{},"cli/":{},"cli/#split":{}},"title":{}}],["read",{"_index":613,"text":{"concepts/":{},"concepts/#dataset-structure":{},"config/":{},"config/#dataset-configuration":{},"config/#default-configuration":{},"config/#local-configuration":{},"dev/":{},"dev/#call-from-python":{},"guide/":{},"guide/#building-a-dataset":{},"web/":{},"web/#users":{}},"title":{}}],["readabl",{"_index":720,"text":{"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#call-from-python":{}},"title":{}}],["real",{"_index":361,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"api/#quevedonetworknetworknetworktest":{}},"title":{}}],["realli",{"_index":640,"text":{"config/":{},"config/#dataset-configuration":{},"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["reason",{"_index":912,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["recal",{"_index":489,"text":{"cli/":{},"cli/#test":{}},"title":{}}],["receiv",{"_index":773,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["recent",{"_index":991,"text":{"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["recogn",{"_index":603,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["recognis",{"_index":555,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["recognit",{"_index":577,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["recommend",{"_index":637,"text":{"concepts/":{},"concepts/#interaction-with-git-and-dvc":{},"config/":{},"config/#dataset-configuration":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#installation":{}},"title":{}}],["rectangl",{"_index":1144,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["redmon",{"_index":925,"text":{"nets/":{},"nets/#darknet":{},"nets/#example-configuration":{}},"title":{}}],["redo",{"_index":1146,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["refer",{"_index":146,"text":{"api/":{},"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#call-from-python":{}},"title":{"api/":{},"api/#reference":{}}}],["regex",{"_index":740,"text":{"config/":{},"config/#default-configuration":{},"web/":{},"web/#users":{}},"title":{}}],["rel",{"_index":334,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{}},"title":{}}],["relat",{"_index":1003,"text":{"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["releas",{"_index":61,"text":{"":{},"#installation":{}},"title":{}}],["relev",{"_index":353,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"api/#quevedonetworknetworknetworkget_annotations":{},"cli/":{},"cli/#extract":{},"nets/":{},"nets/#annotation-selection":{},"nets/#data-augmentation":{}},"title":{}}],["rememb",{"_index":838,"text":{"guide/":{},"guide/#annotate-the-data":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["remov",{"_index":255,"text":{"api/":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"api/#quevedonetworknetworknetworktrain":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["repeat",{"_index":811,"text":{"guide/":{},"guide/#building-a-dataset":{}},"title":{}}],["replac",{"_index":319,"text":{"api/":{},"api/#quevedoannotationgraphemegraphemeupdate":{},"cli/":{},"cli/#add_images":{},"cli/#extract":{},"cli/#generate":{}},"title":{}}],["repo",{"_index":765,"text":{"dev/":{},"dev/#call-from-python":{},"guide/":{}},"title":{"guide/#create-repo":{}}}],["repositori",{"_index":635,"text":{"concepts/":{},"concepts/#interaction-with-git-and-dvc":{},"guide/":{},"guide/#building-a-dataset":{},"guide/#create-repo":{}},"title":{}}],["repres",{"_index":195,"text":{"api/":{},"api/#annotations":{},"api/#networks":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedodatasetdataset":{},"api/#quevedonetworknetworknetwork":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#annotation-schema":{},"nets/":{},"nets/#neural-networks":{}},"title":{}}],["reproduc",{"_index":636,"text":{"concepts/":{},"concepts/#interaction-with-git-and-dvc":{},"guide/":{},"guide/#augment-the-data":{}},"title":{}}],["requir",{"_index":52,"text":{"":{},"#installation":{},"cli/":{},"cli/#add_images":{},"cli/#predict":{},"cli/#run_script":{},"config/":{},"config/#default-configuration":{},"web/":{},"web/#interface-options":{}},"title":{}}],["research",{"_index":126,"text":{"":{},"#about":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#logograms-and-graphemes":{},"dev/":{},"dev/#modifying-quevedo":{},"guide/":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#network-configuration":{},"nets/#neural-networks":{}},"title":{}}],["respect",{"_index":346,"text":{"api/":{},"api/#networks":{},"config/":{},"config/#other-options":{}},"title":{}}],["rest",{"_index":1078,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["result",{"_index":365,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkpredict":{},"api/#quevedonetworknetworknetworktest":{},"cli/":{},"cli/#test":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#augment-the-data":{},"guide/#exploitation":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#at-the-web-interface":{},"nets/#network-configuration":{}},"title":{}}],["results.csv",{"_index":499,"text":{"cli/":{},"cli/#test":{}},"title":{}}],["results.json",{"_index":500,"text":{"cli/":{},"cli/#test":{},"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["resum",{"_index":385,"text":{"api/":{},"api/#quevedonetworknetworknetworktrain":{},"cli/":{},"cli/#train":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["retriev",{"_index":153,"text":{"api/":{},"api/#datasets":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedodatasetdatasetget_single":{}},"title":{}}],["return",{"_index":223,"text":{"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedodatasetdatasetget_network":{},"api/#quevedodatasetdatasetget_single":{},"api/#quevedodatasetdatasetget_subsets":{},"api/#quevedodatasetdatasetlist_networks":{},"api/#quevedodatasetdatasetnew_single":{},"api/#quevedonetworknetworknetworkget_annotations":{},"api/#quevedonetworknetworknetworkpredict":{},"dev/":{},"dev/#user-scripts":{}},"title":{}}],["reus",{"_index":371,"text":{"api/":{},"api/#quevedonetworknetworknetworkprepare":{}},"title":{}}],["revers",{"_index":989,"text":{"nets/":{},"nets/#annotation-selection":{}},"title":{}}],["revert",{"_index":1124,"text":{"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["review",{"_index":797,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["right",{"_index":795,"text":{"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#annotate-the-data":{},"nets/":{},"nets/#at-the-web-interface":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{}},"title":{}}],["root",{"_index":638,"text":{"config/":{},"config/#dataset-configuration":{}},"title":{}}],["rotat",{"_index":754,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["row",{"_index":1136,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["rule",{"_index":911,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["run",{"_index":76,"text":{"":{},"#development":{},"#usage":{},"cli/":{},"cli/#command-line-interface":{},"cli/#run_script":{},"cli/#split":{},"cli/#train":{},"cli/#web":{},"config/":{},"config/#annotation-schema":{},"dev/":{},"dev/#quevedo-as-a-library":{},"dev/#user-scripts":{},"guide/":{},"guide/#add-data":{},"guide/#augment-the-data":{},"guide/#automatically-process-the-data":{},"guide/#create-repo":{},"guide/#exploitation":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#at-the-web-interface":{},"web/":{},"web/#web-interface":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#trained-networks":{},"web_use/#user-scripts":{}},"title":{}}],["run_script",{"_index":424,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#run_script":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#automatically-process-the-data":{}},"title":{"cli/#run_script":{}}}],["s",{"_index":449,"text":{"cli/":{},"cli/#run_script":{},"cli/#split":{},"config/":{},"config/#annotation-schema":{},"guide/":{},"guide/#automatically-process-the-data":{},"guide/#splits-and-folds":{}},"title":{}}],["s2cid",{"_index":1053,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["safe",{"_index":605,"text":{"concepts/":{},"concepts/#dataset-structure":{},"guide/":{},"guide/#building-a-dataset":{}},"title":{}}],["same",{"_index":461,"text":{"cli/":{},"cli/#split":{},"config/":{},"config/#annotation-schema":{},"guide/":{},"guide/#add-data":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#detector":{},"web/":{},"web/#users":{}},"title":{}}],["save",{"_index":288,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"dev/":{},"dev/#user-scripts":{},"nets/":{},"nets/#at-the-web-interface":{},"web/":{},"web/#users":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{}},"title":{"api/#quevedoannotationannotationannotationsave":{},"api/#quevedoannotationannotationannotationsave_1":{},"api/#quevedoannotationannotationannotationsave_2":{}}}],["schema",{"_index":596,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"guide/":{},"guide/#annotate-the-data":{},"guide/#create-repo":{},"nets/":{},"nets/#annotation-selection":{},"nets/#tag-selection":{}},"title":{"config/#annotation-schema":{}}}],["scienc",{"_index":891,"text":{"guide/":{},"guide/#exploitation":{}},"title":{}}],["scientist",{"_index":1066,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["score",{"_index":490,"text":{"cli/":{},"cli/#test":{}},"title":{}}],["script",{"_index":46,"text":{"":{},"#features":{},"cli/":{},"cli/#command-line-interface":{},"cli/#run_script":{},"concepts/":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"dev/":{},"dev/#quevedo-as-a-library":{},"dev/#user-scripts":{},"guide/":{},"guide/#automatically-process-the-data":{},"web_use/":{},"web_use/#logogram-annotation":{},"web_use/#user-scripts":{}},"title":{"dev/#user-scripts":{},"web_use/#user-scripts":{}}}],["script_nam",{"_index":833,"text":{"guide/":{},"guide/#automatically-process-the-data":{}},"title":{}}],["scriptnam",{"_index":519,"text":{"cli/":{},"cli/#run_script":{}},"title":{}}],["scripts/script_name.pi",{"_index":832,"text":{"guide/":{},"guide/#automatically-process-the-data":{}},"title":{}}],["secret",{"_index":652,"text":{"config/":{},"config/#default-configuration":{},"config/#local-configuration":{},"web/":{},"web/#server-options":{}},"title":{}}],["secret_key",{"_index":731,"text":{"config/":{},"config/#default-configuration":{},"web/":{},"web/#server-options":{}},"title":{}}],["section",{"_index":950,"text":{"nets/":{},"nets/#annotation-selection":{},"nets/#installation":{},"nets/#network-configuration":{}},"title":{}}],["secur",{"_index":1105,"text":{"web/":{},"web/#users":{}},"title":{}}],["see",{"_index":83,"text":{"":{},"#usage":{},"api/":{},"api/#quevedonetworknetworknetworktest":{},"cli/":{},"cli/#test":{},"config/":{},"config/#other-options":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#classifier":{},"web/":{},"web/#web-interface":{},"web_use/":{},"web_use/#subset-listing":{}},"title":{}}],["seed",{"_index":469,"text":{"cli/":{},"cli/#split":{}},"title":{}}],["seen",{"_index":1021,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["select",{"_index":239,"text":{"api/":{},"api/#quevedodatasetdatasetget_annotations":{},"cli/":{},"cli/#run_script":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#annotation-selection":{},"nets/#tag-selection":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{}},"title":{"nets/#annotation-selection":{},"nets/#tag-selection":{}}}],["self",{"_index":310,"text":{"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{}},"title":{}}],["semant",{"_index":9,"text":{"":{},"#features":{},"#quevedo":{},"cli/":{},"cli/#command-line-interface":{},"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["send",{"_index":1126,"text":{"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["sens",{"_index":904,"text":{"nets/":{},"nets/#data-augmentation":{},"nets/#neural-networks":{}},"title":{}}],["sensit",{"_index":648,"text":{"config/":{},"config/#local-configuration":{},"web/":{},"web/#configuration":{}},"title":{}}],["sent",{"_index":1131,"text":{"web_use/":{},"web_use/#logogram-annotation":{},"web_use/#trained-networks":{}},"title":{}}],["sequenti",{"_index":616,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["server",{"_index":840,"text":{"guide/":{},"guide/#annotate-the-data":{},"web/":{},"web/#server-options":{},"web/#users":{},"web/#web-interface":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{}},"title":{"web/#server-options":{}}}],["session",{"_index":1088,"text":{"web/":{},"web/#server-options":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["set",{"_index":300,"text":{"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationannotationannotationupdate":{},"cli/":{},"cli/#add_images":{},"cli/#generate":{},"cli/#run_script":{},"cli/#split":{},"cli/#test":{},"concepts/":{},"concepts/#dataset-structure":{},"config/":{},"config/#default-configuration":{},"config/#other-options":{},"guide/":{},"guide/#annotate-the-data":{},"guide/#create-repo":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#annotation-selection":{},"nets/#data-augmentation":{},"nets/#installation":{},"nets/#network-configuration":{},"web/":{},"web/#configuration":{},"web/#users":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{}},"title":{}}],["set(",{"_index":464,"text":{"cli/":{},"cli/#split":{}},"title":{}}],["set1",{"_index":738,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["set2",{"_index":739,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["sevilla",{"_index":137,"text":{"":{},"#visse-team":{}},"title":{}}],["sha1",{"_index":1096,"text":{"web/":{},"web/#users":{}},"title":{}}],["shape",{"_index":1027,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["share",{"_index":274,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"concepts/":{},"concepts/#interaction-with-git-and-dvc":{},"config/":{},"config/#local-configuration":{},"web/":{},"web/#web-interface":{}},"title":{}}],["sheet",{"_index":568,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["shell",{"_index":619,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["shift+tab",{"_index":1140,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["show",{"_index":412,"text":{"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#config":{},"cli/#create":{},"cli/#extract":{},"cli/#generate":{},"cli/#info":{},"cli/#migrate":{},"cli/#predict":{},"cli/#prepare":{},"cli/#run_script":{},"cli/#split":{},"cli/#test":{},"cli/#train":{},"cli/#web":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["sign",{"_index":270,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"concepts/":{},"concepts/#quevedo-datasets":{},"web/":{},"web/#server-options":{}},"title":{}}],["signoescritura",{"_index":116,"text":{"":{},"#about":{}},"title":{}}],["signwrit",{"_index":537,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{}},"title":{}}],["silver",{"_index":953,"text":{"nets/":{},"nets/#network-configuration":{}},"title":{}}],["similar",{"_index":776,"text":{"dev/":{},"dev/#user-scripts":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["simpl",{"_index":429,"text":{"cli/":{},"cli/#config":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#example-configuration":{}},"title":{}}],["simultan",{"_index":594,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{}},"title":{}}],["singl",{"_index":210,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetget_network":{},"api/#quevedodatasetdatasetget_single":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"nets/":{},"nets/#tag-selection":{}},"title":{}}],["size",{"_index":335,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{}},"title":{}}],["skip",{"_index":985,"text":{"nets/":{},"nets/#annotation-selection":{}},"title":{}}],["slevinski",{"_index":546,"text":{"concepts/":{},"concepts/#quevedo-datasets":{}},"title":{}}],["slightli",{"_index":687,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["slow",{"_index":937,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["softwar",{"_index":106,"text":{"":{},"#about":{},"cli/":{},"cli/#test":{},"concepts/":{},"concepts/#logograms-and-graphemes":{},"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["some_other_tag",{"_index":980,"text":{"nets/":{},"nets/#tag-selection":{}},"title":{}}],["some_set",{"_index":868,"text":{"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["some_tag",{"_index":979,"text":{"nets/":{},"nets/#tag-selection":{}},"title":{}}],["some_tag_in_the_schema",{"_index":978,"text":{"nets/":{},"nets/#tag-selection":{}},"title":{}}],["somehow",{"_index":896,"text":{"guide/":{},"guide/#exploitation":{}},"title":{}}],["someth",{"_index":524,"text":{"cli/":{},"cli/#migrate":{},"dev/":{},"dev/#user-scripts":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["sometim",{"_index":892,"text":{"guide/":{},"guide/#exploitation":{},"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["somewhat",{"_index":477,"text":{"cli/":{},"cli/#generate":{}},"title":{}}],["somewher",{"_index":813,"text":{"guide/":{},"guide/#building-a-dataset":{}},"title":{}}],["sophist",{"_index":1101,"text":{"web/":{},"web/#users":{}},"title":{}}],["sort",{"_index":246,"text":{"api/":{},"api/#quevedodatasetdatasetget_subsets":{},"cli/":{},"cli/#add_images":{}},"title":{}}],["sourc",{"_index":36,"text":{"":{},"#dependencies":{},"#features":{},"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{},"dev/":{},"dev/#modifying-quevedo":{},"guide/":{},"guide/#add-data":{},"guide/#annotate-the-data":{},"nets/":{},"nets/#darknet":{}},"title":{}}],["source_image_directori",{"_index":822,"text":{"guide/":{},"guide/#add-data":{}},"title":{}}],["space",{"_index":959,"text":{"nets/":{},"nets/#network-configuration":{}},"title":{}}],["spanish",{"_index":1025,"text":{"nets/":{},"nets/#example-configuration":{},"web/":{},"web/#interface-options":{},"web/#users":{}},"title":{}}],["spanish_a",{"_index":1097,"text":{"web/":{},"web/#users":{}},"title":{}}],["spanish_b",{"_index":1098,"text":{"web/":{},"web/#users":{}},"title":{}}],["spatial",{"_index":560,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["special",{"_index":454,"text":{"cli/":{},"cli/#split":{},"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["specif",{"_index":298,"text":{"api/":{},"api/#networks":{},"api/#quevedoannotationannotationannotationupdate":{},"dev/":{},"dev/#user-scripts":{},"nets/":{},"nets/#example-configuration":{},"web/":{},"web/#users":{}},"title":{}}],["specifi",{"_index":224,"text":{"api/":{},"api/#quevedodatasetdatasetget_network":{},"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#add-data":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#annotation-selection":{}},"title":{}}],["split",{"_index":218,"text":{"api/":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetis_test":{},"api/#quevedodatasetdatasetis_train":{},"cli/":{},"cli/#command-line-interface":{},"cli/#split":{},"cli/#test":{},"config/":{},"config/#default-configuration":{},"config/#other-options":{},"guide/":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#detector":{}},"title":{"cli/#split":{},"guide/#splits-and-folds":{}}}],["stage",{"_index":875,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["stand",{"_index":857,"text":{"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["standard",{"_index":612,"text":{"concepts/":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{}},"title":{}}],["start",{"_index":447,"text":{"cli/":{},"cli/#split":{},"cli/#train":{},"web_use/":{},"web_use/#logogram-annotation":{},"web_use/#user-scripts":{}},"title":{}}],["stat",{"_index":368,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworktest":{}},"title":{}}],["statist",{"_index":495,"text":{"cli/":{},"cli/#test":{},"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["statu",{"_index":420,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#info":{}},"title":{}}],["step",{"_index":806,"text":{"guide/":{},"guide/#add-data":{},"guide/#augment-the-data":{},"guide/#building-a-dataset":{},"guide/#exploitation":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#detector":{},"nets/#tag-selection":{},"web_use/":{},"web_use/#trained-networks":{}},"title":{}}],["stop",{"_index":893,"text":{"guide/":{},"guide/#exploitation":{}},"title":{}}],["storag",{"_index":905,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["store",{"_index":227,"text":{"api/":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedodatasetdatasetget_single":{},"api/#quevedonetworknetworknetworkprepare":{},"cli/":{},"cli/#extract":{},"cli/#prepare":{},"cli/#train":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"config/":{},"config/#annotation-schema":{},"guide/":{},"guide/#exploitation":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#example-configuration":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{}},"title":{}}],["str",{"_index":781,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["straightforward",{"_index":807,"text":{"guide/":{},"guide/#building-a-dataset":{},"nets/":{},"nets/#darknet":{}},"title":{}}],["strategi",{"_index":863,"text":{"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["string",{"_index":658,"text":{"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"web/":{},"web/#server-options":{},"web/#users":{}},"title":{}}],["structur",{"_index":34,"text":{"":{},"#features":{},"concepts/":{},"concepts/#dataset-structure":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#annotation-schema":{},"guide/":{},"guide/#add-data":{}},"title":{"concepts/#dataset-structure":{}}}],["subclass",{"_index":169,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["subdirectori",{"_index":608,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["subject",{"_index":704,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#example-configuration":{},"nets/#network-configuration":{}},"title":{}}],["subset",{"_index":29,"text":{"":{},"#features":{},"api/":{},"api/#datasets":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedodatasetdatasetget_single":{},"api/#quevedodatasetdatasetget_subsets":{},"api/#quevedodatasetdatasetnew_single":{},"cli/":{},"cli/#extract":{},"cli/#generate":{},"cli/#run_script":{},"cli/#split":{},"concepts/":{},"concepts/#dataset-structure":{},"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#add-data":{},"guide/#automatically-process-the-data":{},"nets/":{},"nets/#annotation-selection":{},"nets/#classifier":{},"nets/#example-configuration":{},"web/":{},"web/#users":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{},"web_use/#subset-listing":{}},"title":{"web_use/#subset-listing":{}}}],["subset=non",{"_index":236,"text":{"api/":{}},"title":{}}],["subset_1",{"_index":623,"text":{"concepts/":{},"concepts/#dataset-structure":{}},"title":{}}],["such",{"_index":533,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#annotation-schema":{}},"title":{}}],["suggest",{"_index":771,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["suit",{"_index":967,"text":{"nets/":{},"nets/#classifier":{},"nets/#detector":{}},"title":{}}],["support",{"_index":40,"text":{"":{},"#features":{},"guide/":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#data-augmentation":{},"nets/#tag-selection":{},"web/":{},"web/#interface-options":{}},"title":{}}],["sutskev",{"_index":1038,"text":{"nets/":{},"nets/#example-configuration":{}},"title":{}}],["symbol",{"_index":558,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["syntax",{"_index":775,"text":{"dev/":{},"dev/#user-scripts":{},"web/":{},"web/#users":{}},"title":{}}],["system",{"_index":373,"text":{"api/":{},"api/#quevedonetworknetworknetworkpredict":{},"api/#quevedonetworknetworknetworkprepare":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#quevedo-datasets":{},"nets/":{},"nets/#data-augmentation":{},"web/":{},"web/#users":{}},"title":{}}],["t",{"_index":474,"text":{"cli/":{},"cli/#extract":{},"cli/#generate":{},"guide/":{},"guide/#augment-the-data":{}},"title":{}}],["tab",{"_index":1139,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["tabl",{"_index":1135,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["tag",{"_index":185,"text":{"api/":{},"api/#datasets":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationgraphemegraphemeupdate":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"api/#quevedonetworknetworknetworkpredict":{},"cli/":{},"cli/#prepare":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#automatically-process-the-data":{},"nets/":{},"nets/#annotation-selection":{},"nets/#example-configuration":{},"nets/#tag-selection":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#trained-networks":{}},"title":{"nets/#tag-selection":{}}}],["tag/label/class",{"_index":358,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{}},"title":{}}],["tag1",{"_index":677,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["tag2",{"_index":678,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["tag_schema",{"_index":356,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"nets/":{},"nets/#example-configuration":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{}},"title":{}}],["tags=non",{"_index":318,"text":{"api/":{}},"title":{}}],["tags[0",{"_index":783,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["tags_from_filename(a.meta['filenam",{"_index":791,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["tags_from_filename(filenam",{"_index":780,"text":{"dev/":{},"dev/#user-scripts":{}},"title":{}}],["take",{"_index":266,"text":{"api/":{},"api/#annotations":{},"cli/":{},"cli/#extract":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#network-configuration":{},"web_use/":{},"web_use/#subset-listing":{}},"title":{}}],["target",{"_index":164,"text":{"api/":{},"api/#annotations":{},"api/#datasets":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedodatasetdatasetget_single":{},"api/#quevedodatasetdatasetget_subsets":{},"api/#quevedodatasetdatasetnew_single":{},"cli/":{},"cli/#split":{},"concepts/":{},"concepts/#logograms-and-graphemes":{},"guide/":{},"guide/#add-data":{},"web/":{},"web/#web-interface":{}},"title":{}}],["target.graph",{"_index":242,"text":{"api/":{},"api/#annotations":{},"api/#quevedodatasetdatasetget_annotations":{}},"title":{}}],["target.logo",{"_index":243,"text":{"api/":{},"api/#annotations":{},"api/#quevedodatasetdatasetget_annotations":{}},"title":{}}],["target=<annotationtarget.graph|logo",{"_index":235,"text":{"api/":{}},"title":{}}],["task",{"_index":701,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#classifier":{},"nets/#example-configuration":{},"nets/#network-configuration":{},"web/":{},"web/#web-interface":{},"web_use/":{},"web_use/#logogram-annotation":{},"web_use/#trained-networks":{}},"title":{}}],["team",{"_index":133,"text":{"":{},"web/":{},"web/#web-interface":{}},"title":{"#visse-team":{}}}],["techniqu",{"_index":913,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["technolog",{"_index":128,"text":{"":{},"#about":{}},"title":{}}],["templat",{"_index":881,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["term",{"_index":580,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["termin",{"_index":1077,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["test",{"_index":342,"text":{"api/":{},"api/#networks":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkget_annotations":{},"api/#quevedonetworknetworknetworkprepare":{},"api/#quevedonetworknetworknetworktest":{},"cli/":{},"cli/#command-line-interface":{},"cli/#split":{},"cli/#test":{},"config/":{},"config/#default-configuration":{},"config/#other-options":{},"guide/":{},"guide/#building-a-dataset":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#annotation-selection":{},"nets/#at-the-command-line":{}},"title":{"api/#quevedonetworknetworknetworktest":{},"cli/#test":{},"guide/#train-and-test-the-neural-network":{}}}],["test.pi",{"_index":393,"text":{"api/":{},"api/#quevedonetworknetworknetworktest":{}},"title":{}}],["test=fals",{"_index":369,"text":{"api/":{}},"title":{}}],["test_detect",{"_index":887,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["test_fold",{"_index":669,"text":{"config/":{},"config/#default-configuration":{},"config/#other-options":{}},"title":{}}],["text",{"_index":411,"text":{"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#config":{},"cli/#extract":{},"cli/#generate":{},"cli/#run_script":{},"cli/#split":{},"cli/#web":{},"config/":{},"config/#dataset-configuration":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["themselv",{"_index":969,"text":{"nets/":{},"nets/#detector":{}},"title":{}}],["thepassword\".encode(\"utf8\")).hexdigest",{"_index":736,"text":{"config/":{},"config/#default-configuration":{},"web/":{},"web/#users":{}},"title":{}}],["therefor",{"_index":155,"text":{"api/":{},"api/#datasets":{},"api/#networks":{},"concepts/":{},"concepts/#interaction-with-git-and-dvc":{},"concepts/#logograms-and-graphemes":{},"nets/":{},"nets/#classifier":{},"nets/#detector":{},"nets/#network-configuration":{},"web/":{},"web/#web-interface":{}},"title":{}}],["thing",{"_index":784,"text":{"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["those",{"_index":237,"text":{"api/":{},"api/#quevedodatasetdatasetget_annotations":{},"concepts/":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#local-configuration":{},"guide/":{},"guide/#building-a-dataset":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["through",{"_index":317,"text":{"api/":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationgraphemegraphemeupdate":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramupdate":{}},"title":{}}],["tight",{"_index":689,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["time",{"_index":761,"text":{"config/":{},"config/#default-configuration":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#at-the-command-line":{}},"title":{}}],["titl",{"_index":674,"text":{"config/":{},"config/#default-configuration":{},"web_use/":{},"web_use/#subset-listing":{}},"title":{}}],["to_dict",{"_index":291,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationlogogramlogogram":{}},"title":{"api/#quevedoannotationannotationannotationto_dict":{},"api/#quevedoannotationgraphemegraphemeto_dict":{},"api/#quevedoannotationlogogramlogogramto_dict":{}}}],["togeth",{"_index":476,"text":{"cli/":{},"cli/#generate":{}},"title":{}}],["token_hex",{"_index":729,"text":{"config/":{},"config/#default-configuration":{},"web/":{},"web/#server-options":{}},"title":{}}],["toml",{"_index":100,"text":{"":{},"#dependencies":{},"config/":{},"config/#dataset-configuration":{}},"title":{}}],["tool",{"_index":4,"text":{"":{},"#development":{},"#quevedo":{},"cli/":{},"cli/#command-line-interface":{},"concepts/":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{}},"title":{}}],["toolkit",{"_index":917,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["top",{"_index":794,"text":{"dev/":{},"dev/#user-scripts":{},"nets/":{},"nets/#at-the-web-interface":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{},"web_use/#subset-listing":{}},"title":{}}],["touch",{"_index":801,"text":{"dev/":{},"dev/#modifying-quevedo":{}},"title":{}}],["track",{"_index":372,"text":{"api/":{},"api/#quevedonetworknetworknetworkprepare":{},"concepts/":{},"concepts/#interaction-with-git-and-dvc":{},"guide/":{},"guide/#add-data":{},"guide/#augment-the-data":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["train",{"_index":11,"text":{"":{},"#features":{},"#quevedo":{},"api/":{},"api/#networks":{},"api/#quevedodatasetdataset":{},"api/#quevedodatasetdatasetis_test":{},"api/#quevedodatasetdatasetis_train":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkget_annotations":{},"api/#quevedonetworknetworknetworkis_trained":{},"api/#quevedonetworknetworknetworkpredict":{},"api/#quevedonetworknetworknetworkprepare":{},"api/#quevedonetworknetworknetworktrain":{},"cli/":{},"cli/#command-line-interface":{},"cli/#generate":{},"cli/#predict":{},"cli/#prepare":{},"cli/#split":{},"cli/#test":{},"cli/#train":{},"concepts/":{},"concepts/#dataset-structure":{},"config/":{},"config/#default-configuration":{},"config/#other-options":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#augment-the-data":{},"guide/#exploitation":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#annotation-selection":{},"nets/#at-the-command-line":{},"nets/#at-the-web-interface":{},"nets/#classifier":{},"nets/#darknet":{},"nets/#data-augmentation":{},"nets/#example-configuration":{},"nets/#installation":{},"nets/#network-configuration":{},"nets/#tag-selection":{},"web_use/":{},"web_use/#trained-networks":{}},"title":{"api/#quevedonetworknetworknetworktrain":{},"cli/#train":{},"guide/#train-and-test-the-neural-network":{},"web_use/#trained-networks":{}}}],["train/test",{"_index":487,"text":{"cli/":{},"cli/#test":{},"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["train_detect",{"_index":885,"text":{"guide/":{},"guide/#train-and-test-the-neural-network":{}},"title":{}}],["train_fold",{"_index":668,"text":{"config/":{},"config/#default-configuration":{},"config/#other-options":{}},"title":{}}],["transcript",{"_index":544,"text":{"concepts/":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#annotation-schema":{}},"title":{}}],["transform",{"_index":1004,"text":{"nets/":{},"nets/#data-augmentation":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["trash",{"_index":1149,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["tri",{"_index":766,"text":{"dev/":{},"dev/#call-from-python":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#classifier":{},"nets/#detector":{}},"title":{}}],["true",{"_index":700,"text":{"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#user-scripts":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#example-configuration":{},"web/":{},"web/#interface-options":{}},"title":{}}],["true/fals",{"_index":680,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["tune",{"_index":975,"text":{"nets/":{},"nets/#detector":{}},"title":{}}],["two",{"_index":259,"text":{"api/":{},"api/#annotations":{},"api/#networks":{},"concepts/":{},"concepts/#dataset-structure":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#annotation-schema":{},"guide/":{},"guide/#augment-the-data":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["type",{"_index":167,"text":{"api/":{},"api/#annotations":{},"api/#datasets":{},"api/#networks":{},"api/#quevedodatasetdatasetcreate_subset":{},"api/#quevedodatasetdatasetget_annotations":{},"api/#quevedodatasetdatasetget_single":{},"api/#quevedodatasetdatasetget_subsets":{},"api/#quevedodatasetdatasetnew_single":{},"concepts/":{},"concepts/#dataset-structure":{},"concepts/#logograms-and-graphemes":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#network-configuration":{}},"title":{}}],["ui",{"_index":515,"text":{"cli/":{},"cli/#web":{}},"title":{}}],["uml",{"_index":535,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{}},"title":{}}],["uncom",{"_index":702,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["under",{"_index":105,"text":{"":{},"#about":{},"cli/":{},"cli/#prepare":{},"cli/#web":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#network-configuration":{},"web/":{},"web/#configuration":{},"web/#server-options":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#user-scripts":{}},"title":{}}],["underli",{"_index":572,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{}},"title":{}}],["underneath",{"_index":1119,"text":{"web_use/":{},"web_use/#subset-listing":{}},"title":{}}],["underscor",{"_index":981,"text":{"nets/":{},"nets/#tag-selection":{}},"title":{}}],["understand",{"_index":621,"text":{"concepts/":{},"concepts/#dataset-structure":{},"config/":{},"config/#dataset-configuration":{},"dev/":{},"dev/#call-from-python":{},"nets/":{},"nets/#neural-networks":{}},"title":{}}],["undo",{"_index":1123,"text":{"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["undon",{"_index":1150,"text":{"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["unicod",{"_index":1110,"text":{"web_use/":{},"web_use/#dataset-overview":{}},"title":{}}],["unintent",{"_index":1103,"text":{"web/":{},"web/#users":{}},"title":{}}],["union",{"_index":240,"text":{"api/":{},"api/#quevedodatasetdatasetget_annotations":{}},"title":{}}],["universia",{"_index":132,"text":{"":{},"#about":{}},"title":{}}],["universidad",{"_index":121,"text":{"":{},"#about":{}},"title":{}}],["unknown",{"_index":858,"text":{"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["until",{"_index":1014,"text":{"nets/":{},"nets/#at-the-web-interface":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["up",{"_index":269,"text":{"api/":{},"api/#annotations":{},"concepts/":{},"concepts/#logograms-and-graphemes":{},"guide/":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#data-augmentation":{},"nets/#detector":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#logogram-annotation":{}},"title":{}}],["updat",{"_index":292,"text":{"api/":{},"api/#quevedoannotationannotationannotation":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationannotationannotationupdate":{},"api/#quevedoannotationgraphemegrapheme":{},"api/#quevedoannotationgraphemegraphemeupdate":{},"api/#quevedoannotationlogogramlogogram":{},"api/#quevedoannotationlogogramlogogramupdate":{},"api/#quevedonetworknetworknetworktest":{},"dev/":{},"dev/#user-scripts":{}},"title":{"api/#quevedoannotationannotationannotationupdate":{},"api/#quevedoannotationgraphemegraphemeupdate":{},"api/#quevedoannotationlogogramlogogramupdate":{}}}],["upgrad",{"_index":422,"text":{"cli/":{},"cli/#command-line-interface":{},"cli/#migrate":{},"config/":{},"config/#annotation-schema":{},"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["upload",{"_index":1117,"text":{"web_use/":{},"web_use/#subset-listing":{}},"title":{}}],["us",{"_index":37,"text":{"":{},"#about":{},"#dependencies":{},"#development":{},"#features":{},"#installation":{},"api/":{},"api/#annotations":{},"api/#datasets":{},"api/#networks":{},"api/#quevedoannotationannotationannotationcreate_from":{},"api/#quevedoannotationannotationannotationcreate_from_1":{},"api/#quevedoannotationannotationannotationcreate_from_2":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"api/#quevedonetworknetworknetworkget_annotations":{},"api/#quevedonetworknetworknetworkis_trained":{},"api/#quevedonetworknetworknetworkpredict":{},"api/#quevedonetworknetworknetworkprepare":{},"api/#quevedonetworknetworknetworktest":{},"cli/":{},"cli/#command-line-interface":{},"cli/#config":{},"cli/#generate":{},"cli/#predict":{},"cli/#prepare":{},"cli/#split":{},"cli/#test":{},"cli/#web":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#dataset-structure":{},"concepts/#interaction-with-git-and-dvc":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"config/#local-configuration":{},"config/#other-options":{},"dev/":{},"dev/#call-from-python":{},"dev/#modifying-quevedo":{},"dev/#quevedo-as-a-library":{},"dev/#user-scripts":{},"guide/":{},"guide/#add-data":{},"guide/#annotate-the-data":{},"guide/#automatically-process-the-data":{},"guide/#building-a-dataset":{},"guide/#create-repo":{},"guide/#exploitation":{},"guide/#splits-and-folds":{},"guide/#train-and-test-the-neural-network":{},"nets/":{},"nets/#annotation-selection":{},"nets/#at-the-command-line":{},"nets/#at-the-web-interface":{},"nets/#classifier":{},"nets/#darknet":{},"nets/#data-augmentation":{},"nets/#detector":{},"nets/#example-configuration":{},"nets/#installation":{},"nets/#network-configuration":{},"nets/#neural-networks":{},"nets/#tag-selection":{},"web/":{},"web/#users":{},"web/#web-interface":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#trained-networks":{},"web_use/#user-scripts":{}},"title":{"web_use/":{},"web_use/#using-the-web-interface":{}}}],["usag",{"_index":77,"text":{"":{},"cli/":{},"cli/#add_images":{},"cli/#command-line-interface":{},"cli/#config":{},"cli/#create":{},"cli/#extract":{},"cli/#generate":{},"cli/#info":{},"cli/#migrate":{},"cli/#predict":{},"cli/#prepare":{},"cli/#run_script":{},"cli/#split":{},"cli/#test":{},"cli/#train":{},"cli/#web":{},"nets/":{},"web/":{},"web/#web-interface":{}},"title":{"#usage":{},"nets/#usage":{}}}],["user",{"_index":42,"text":{"":{},"#features":{},"api/":{},"api/#datasets":{},"cli/":{},"cli/#web":{},"config/":{},"config/#default-configuration":{},"config/#local-configuration":{},"dev/":{},"dev/#quevedo-as-a-library":{},"dev/#user-scripts":{},"guide/":{},"guide/#automatically-process-the-data":{},"nets/":{},"nets/#at-the-web-interface":{},"nets/#data-augmentation":{},"web/":{},"web/#interface-options":{},"web/#users":{},"web_use/":{},"web_use/#grapheme-annotation":{},"web_use/#user-scripts":{}},"title":{"dev/#user-scripts":{},"web/#users":{},"web_use/#user-scripts":{}}}],["user'",{"_index":643,"text":{"config/":{},"config/#dataset-configuration":{}},"title":{}}],["usual",{"_index":157,"text":{"api/":{},"api/#datasets":{}},"title":{}}],["v1.1",{"_index":664,"text":{"config/":{},"config/#annotation-schema":{},"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["valid",{"_index":860,"text":{"guide/":{},"guide/#splits-and-folds":{}},"title":{}}],["valu",{"_index":267,"text":{"api/":{},"api/#annotations":{},"api/#quevedoannotationannotationannotationupdate":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkpredict":{},"cli/":{},"cli/#split":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"config/":{},"config/#default-configuration":{},"config/#other-options":{},"nets/":{},"nets/#annotation-selection":{},"nets/#example-configuration":{},"nets/#network-configuration":{},"nets/#tag-selection":{},"web/":{},"web/#interface-options":{},"web_use/":{},"web_use/#grapheme-annotation":{}},"title":{}}],["vari",{"_index":584,"text":{"concepts/":{},"concepts/#logograms-and-graphemes":{},"nets/":{},"nets/#installation":{}},"title":{}}],["variabl",{"_index":941,"text":{"nets/":{},"nets/#installation":{}},"title":{}}],["variat",{"_index":908,"text":{"nets/":{},"nets/#neural-networks":{}},"title":{}}],["veri",{"_index":505,"text":{"cli/":{},"cli/#web":{},"guide/":{},"guide/#splits-and-folds":{},"web/":{},"web/#users":{},"web/#web-interface":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["version",{"_index":107,"text":{"":{},"#about":{},"api/":{},"api/#quevedonetworknetworknetworkprepare":{},"cli/":{},"cli/#command-line-interface":{},"cli/#migrate":{},"config/":{},"config/#annotation-schema":{},"config/#default-configuration":{},"guide/":{},"guide/#building-a-dataset":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["via",{"_index":802,"text":{"dev/":{},"dev/#modifying-quevedo":{},"web/":{},"web/#web-interface":{}},"title":{}}],["vim",{"_index":831,"text":{"guide/":{},"guide/#automatically-process-the-data":{}},"title":{}}],["vision",{"_index":915,"text":{"nets/":{},"nets/#darknet":{},"nets/#neural-networks":{}},"title":{}}],["viss",{"_index":17,"text":{"":{},"#about":{},"#quevedo":{}},"title":{"#visse-team":{}}}],["visual",{"_index":44,"text":{"":{},"#features":{},"cli/":{},"cli/#web":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#logograms-and-graphemes":{},"concepts/#quevedo-datasets":{},"guide/":{},"guide/#annotate-the-data":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#at-the-web-interface":{},"nets/#data-augmentation":{},"nets/#neural-networks":{},"web/":{},"web/#web-interface":{},"web_use/":{},"web_use/#logogram-annotation":{},"web_use/#trained-networks":{}},"title":{}}],["visualizando",{"_index":114,"text":{"":{},"#about":{}},"title":{}}],["w",{"_index":330,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{}},"title":{}}],["want",{"_index":56,"text":{"":{},"#installation":{},"api/":{},"api/#quevedonetworknetworknetworktest":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#annotate-the-data":{},"guide/#automatically-process-the-data":{},"guide/#create-repo":{},"guide/#exploitation":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#annotation-selection":{},"nets/#example-configuration":{},"nets/#installation":{}},"title":{}}],["warn",{"_index":662,"text":{"config/":{},"config/#annotation-schema":{},"web/":{},"web/#users":{}},"title":{}}],["way",{"_index":609,"text":{"concepts/":{},"concepts/#dataset-structure":{},"nets/":{},"nets/#neural-networks":{},"web_use/":{},"web_use/#subset-listing":{}},"title":{}}],["web",{"_index":38,"text":{"":{},"#about":{},"#features":{},"#installation":{},"#usage":{},"cli/":{},"cli/#command-line-interface":{},"cli/#web":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"config/":{},"config/#default-configuration":{},"config/#local-configuration":{},"config/#other-options":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#annotate-the-data":{},"nets/":{},"nets/#at-the-web-interface":{},"web/":{},"web/#configuration":{},"web/#interface-options":{},"web/#web-interface":{},"web_use/":{},"web_use/#dataset-overview":{},"web_use/#logogram-annotation":{},"web_use/#trained-networks":{},"web_use/#user-scripts":{}},"title":{"cli/#web":{},"nets/#at-the-web-interface":{},"web/":{},"web/#web-interface":{},"web_use/":{},"web_use/#using-the-web-interface":{}}}],["web.users.<user_nam",{"_index":1093,"text":{"web/":{},"web/#users":{}},"title":{}}],["web.users.annot",{"_index":733,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["web.users.user2",{"_index":741,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["websit",{"_index":1081,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["weight",{"_index":381,"text":{"api/":{},"api/#quevedonetworknetworknetworktrain":{},"cli/":{},"cli/#train":{},"concepts/":{},"concepts/#dataset-structure":{},"guide/":{},"guide/#exploitation":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#network-configuration":{}},"title":{}}],["well",{"_index":491,"text":{"cli/":{},"cli/#test":{},"nets/":{},"nets/#classifier":{},"nets/#detector":{}},"title":{}}],["wheel",{"_index":60,"text":{"":{},"#installation":{}},"title":{}}],["whether",{"_index":363,"text":{"api/":{},"api/#quevedonetworknetworknetwork":{},"api/#quevedonetworknetworknetworkis_prepared":{},"api/#quevedonetworknetworknetworkis_trained":{},"config/":{},"config/#default-configuration":{}},"title":{}}],["whole",{"_index":679,"text":{"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#classifier":{}},"title":{}}],["width/height",{"_index":1002,"text":{"nets/":{},"nets/#data-augmentation":{}},"title":{}}],["width_rang",{"_index":743,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["wikipedia",{"_index":543,"text":{"concepts/":{},"concepts/#quevedo-datasets":{}},"title":{}}],["window",{"_index":1073,"text":{"web/":{},"web/#web-interface":{}},"title":{}}],["within",{"_index":154,"text":{"api/":{},"api/#datasets":{},"api/#quevedoannotationlogogramboundgrapheme":{},"api/#quevedoannotationlogogramlogogram":{},"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"guide/":{},"guide/#augment-the-data":{},"nets/":{},"nets/#detector":{},"web_use/":{},"web_use/#logogram-annotation":{}},"title":{}}],["without",{"_index":520,"text":{"cli/":{},"cli/#run_script":{},"nets/":{},"nets/#data-augmentation":{},"web/":{},"web/#web-interface":{}},"title":{}}],["won't",{"_index":394,"text":{"api/":{},"api/#quevedonetworknetworknetworkauto_annotate":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#create-repo":{}},"title":{}}],["work",{"_index":345,"text":{"api/":{},"api/#networks":{},"guide/":{},"guide/#building-a-dataset":{},"guide/#create-repo":{},"guide/#splits-and-folds":{},"nets/":{},"nets/#installation":{},"web/":{},"web/#web-interface":{}},"title":{}}],["workflow",{"_index":814,"text":{"guide/":{},"guide/#building-a-dataset":{}},"title":{}}],["worri",{"_index":808,"text":{"guide/":{},"guide/#building-a-dataset":{}},"title":{}}],["write",{"_index":536,"text":{"concepts/":{},"concepts/#annotation-of-logograms-and-graphemes":{},"concepts/#quevedo-datasets":{},"config/":{},"config/#default-configuration":{},"dev/":{},"dev/#user-scripts":{},"guide/":{},"guide/#automatically-process-the-data":{},"nets/":{},"nets/#data-augmentation":{},"nets/#tag-selection":{},"web/":{},"web/#users":{}},"title":{}}],["written",{"_index":507,"text":{"cli/":{},"cli/#web":{},"config/":{},"config/#default-configuration":{},"nets/":{},"nets/#at-the-command-line":{},"nets/#darknet":{},"nets/#data-augmentation":{},"nets/#neural-networks":{}},"title":{}}],["wrong",{"_index":526,"text":{"cli/":{},"cli/#migrate":{}},"title":{}}],["x",{"_index":328,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{}},"title":{}}],["y",{"_index":329,"text":{"api/":{},"api/#quevedoannotationlogogramboundgrapheme":{}},"title":{}}],["yes/no",{"_index":715,"text":{"config/":{},"config/#default-configuration":{}},"title":{}}],["yield",{"_index":245,"text":{"api/":{},"api/#quevedodatasetdatasetget_annotations":{}},"title":{}}],["yolo",{"_index":923,"text":{"nets/":{},"nets/#darknet":{}},"title":{}}],["yolov3",{"_index":972,"text":{"nets/":{},"nets/#detector":{},"nets/#example-configuration":{}},"title":{}}],["zero",{"_index":1008,"text":{"nets/":{},"nets/#at-the-command-line":{}},"title":{}}]],"pipeline":["stemmer"],"version":"2.3.8"}}